{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nrequire('../../loader/index.js');\nvar loadTextures = require('../../loader/parsers/textures/loadTextures.js');\nconst resolveTextureUrl = {\n  extension: core.ExtensionType.ResolveParser,\n  test: loadTextures.loadTextures.test,\n  parse: value => ({\n    resolution: parseFloat(core.settings.RETINA_PREFIX.exec(value)?.[1] ?? \"1\"),\n    format: value.split(\".\").pop(),\n    src: value\n  })\n};\ncore.extensions.add(resolveTextureUrl);\nexports.resolveTextureUrl = resolveTextureUrl;","map":{"version":3,"names":["resolveTextureUrl","extension","core","ExtensionType","ResolveParser","test","loadTextures","parse","value","resolution","parseFloat","settings","RETINA_PREFIX","exec","format","split","pop","src","extensions","add"],"sources":["/Users/jiahuajiang/Desktop/code/projects/abducted/pixi-game/node_modules/@pixi/assets/src/resolver/parsers/resolveTextureUrl.ts"],"sourcesContent":["import { extensions, ExtensionType, settings } from '@pixi/core';\nimport { loadTextures } from '../../loader';\n\nimport type { ResolveAsset, ResolveURLParser } from '../types';\n\nexport const resolveTextureUrl = {\n    extension: ExtensionType.ResolveParser,\n    test: loadTextures.test,\n    parse: (value: string): ResolveAsset =>\n        ({\n            resolution: parseFloat(settings.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n            format: value.split('.').pop(),\n            src: value,\n        }),\n} as ResolveURLParser;\n\nextensions.add(resolveTextureUrl);\n"],"mappings":";;;;;;;;AAKO,MAAMA,iBAAoB;EAC7BC,SAAA,EAAWC,IAAA,CAAAC,aAAc,CAAAC,aAAA;EACzBC,IAAA,EAAMC,YAAA,CAAAA,YAAa,CAAAD,IAAA;EACnBE,KAAA,EAAQC,KACH;IACGC,UAAA,EAAYC,UAAA,CAAWR,IAAA,CAAAS,QAAS,CAAAC,aAAA,CAAcC,IAAA,CAAKL,KAAK,IAAI,MAAM,GAAG;IACrEM,MAAQ,EAAAN,KAAA,CAAMO,KAAM,IAAG,EAAEC,GAAI;IAC7BC,GAAK,EAAAT;EAAA,CACT;AACR;AAEAN,IAAA,CAAAgB,UAAA,CAAWC,GAAA,CAAInB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}