{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = deprecation;\n// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\n\n// A map of warning messages already fired\nvar warnings = {};\n\n// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\nfunction warn(msg) {\n  // Ignore duplicat\n  if (warnings[msg]) {\n    return;\n  }\n\n  /* eslint-disable no-console */\n  var stack = new Error().stack;\n\n  // Handle IE < 10 and Safari < 6\n  if (typeof stack === 'undefined') {\n    console.warn('Deprecation Warning: ', msg);\n  } else {\n    // chop off the stack trace which includes pixi.js internal calls\n    stack = stack.split('\\n').splice(3).join('\\n');\n    if (console.groupCollapsed) {\n      console.groupCollapsed('%cDeprecation Warning: %c%s', 'color:#614108;background:#fffbe6', 'font-weight:normal;color:#614108;background:#fffbe6', msg);\n      console.warn(stack);\n      console.groupEnd();\n    } else {\n      console.warn('Deprecation Warning: ', msg);\n      console.warn(stack);\n    }\n  }\n  /* eslint-enable no-console */\n\n  warnings[msg] = true;\n}\nfunction deprecation(core) {\n  var mesh = core.mesh,\n    particles = core.particles,\n    extras = core.extras,\n    filters = core.filters,\n    prepare = core.prepare,\n    loaders = core.loaders,\n    interaction = core.interaction;\n  Object.defineProperties(core, {\n    /**\n     * @class\n     * @private\n     * @name SpriteBatch\n     * @memberof PIXI\n     * @see PIXI.ParticleContainer\n     * @throws {ReferenceError} SpriteBatch does not exist any more, please use the new ParticleContainer instead.\n     * @deprecated since version 3.0.0\n     */\n    SpriteBatch: {\n      get: function get() {\n        throw new ReferenceError('SpriteBatch does not exist any more, ' + 'please use the new ParticleContainer instead.');\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name AssetLoader\n     * @memberof PIXI\n     * @see PIXI.loaders.Loader\n     * @throws {ReferenceError} The loader system was overhauled in PixiJS v3,\n     * please see the new PIXI.loaders.Loader class.\n     * @deprecated since version 3.0.0\n     */\n    AssetLoader: {\n      get: function get() {\n        throw new ReferenceError('The loader system was overhauled in PixiJS v3, ' + 'please see the new PIXI.loaders.Loader class.');\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name Stage\n     * @memberof PIXI\n     * @see PIXI.Container\n     * @deprecated since version 3.0.0\n     */\n    Stage: {\n      get: function get() {\n        warn('You do not need to use a PIXI Stage any more, you can simply render any container.');\n        return core.Container;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name DisplayObjectContainer\n     * @memberof PIXI\n     * @see PIXI.Container\n     * @deprecated since version 3.0.0\n     */\n    DisplayObjectContainer: {\n      get: function get() {\n        warn('DisplayObjectContainer has been shortened to Container, please use Container from now on.');\n        return core.Container;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name Strip\n     * @memberof PIXI\n     * @see PIXI.mesh.Mesh\n     * @deprecated since version 3.0.0\n     */\n    Strip: {\n      get: function get() {\n        warn('The Strip class has been renamed to Mesh and moved to mesh.Mesh, please use mesh.Mesh from now on.');\n        return mesh.Mesh;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name Rope\n     * @memberof PIXI\n     * @see PIXI.mesh.Rope\n     * @deprecated since version 3.0.0\n     */\n    Rope: {\n      get: function get() {\n        warn('The Rope class has been moved to mesh.Rope, please use mesh.Rope from now on.');\n        return mesh.Rope;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name ParticleContainer\n     * @memberof PIXI\n     * @see PIXI.particles.ParticleContainer\n     * @deprecated since version 4.0.0\n     */\n    ParticleContainer: {\n      get: function get() {\n        warn('The ParticleContainer class has been moved to particles.ParticleContainer, ' + 'please use particles.ParticleContainer from now on.');\n        return particles.ParticleContainer;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name MovieClip\n     * @memberof PIXI\n     * @see PIXI.extras.MovieClip\n     * @deprecated since version 3.0.0\n     */\n    MovieClip: {\n      get: function get() {\n        warn('The MovieClip class has been moved to extras.AnimatedSprite, please use extras.AnimatedSprite.');\n        return extras.AnimatedSprite;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name TilingSprite\n     * @memberof PIXI\n     * @see PIXI.extras.TilingSprite\n     * @deprecated since version 3.0.0\n     */\n    TilingSprite: {\n      get: function get() {\n        warn('The TilingSprite class has been moved to extras.TilingSprite, ' + 'please use extras.TilingSprite from now on.');\n        return extras.TilingSprite;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name BitmapText\n     * @memberof PIXI\n     * @see PIXI.extras.BitmapText\n     * @deprecated since version 3.0.0\n     */\n    BitmapText: {\n      get: function get() {\n        warn('The BitmapText class has been moved to extras.BitmapText, ' + 'please use extras.BitmapText from now on.');\n        return extras.BitmapText;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name blendModes\n     * @memberof PIXI\n     * @see PIXI.BLEND_MODES\n     * @deprecated since version 3.0.0\n     */\n    blendModes: {\n      get: function get() {\n        warn('The blendModes has been moved to BLEND_MODES, please use BLEND_MODES from now on.');\n        return core.BLEND_MODES;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name scaleModes\n     * @memberof PIXI\n     * @see PIXI.SCALE_MODES\n     * @deprecated since version 3.0.0\n     */\n    scaleModes: {\n      get: function get() {\n        warn('The scaleModes has been moved to SCALE_MODES, please use SCALE_MODES from now on.');\n        return core.SCALE_MODES;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name BaseTextureCache\n     * @memberof PIXI\n     * @see PIXI.utils.BaseTextureCache\n     * @deprecated since version 3.0.0\n     */\n    BaseTextureCache: {\n      get: function get() {\n        warn('The BaseTextureCache class has been moved to utils.BaseTextureCache, ' + 'please use utils.BaseTextureCache from now on.');\n        return core.utils.BaseTextureCache;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name TextureCache\n     * @memberof PIXI\n     * @see PIXI.utils.TextureCache\n     * @deprecated since version 3.0.0\n     */\n    TextureCache: {\n      get: function get() {\n        warn('The TextureCache class has been moved to utils.TextureCache, ' + 'please use utils.TextureCache from now on.');\n        return core.utils.TextureCache;\n      }\n    },\n    /**\n     * @namespace\n     * @private\n     * @name math\n     * @memberof PIXI\n     * @see PIXI\n     * @deprecated since version 3.0.6\n     */\n    math: {\n      get: function get() {\n        warn('The math namespace is deprecated, please access members already accessible on PIXI.');\n        return core;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name PIXI.AbstractFilter\n     * @see PIXI.Filter\n     * @deprecated since version 3.0.6\n     */\n    AbstractFilter: {\n      get: function get() {\n        warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n        return core.Filter;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name PIXI.TransformManual\n     * @see PIXI.TransformBase\n     * @deprecated since version 4.0.0\n     */\n    TransformManual: {\n      get: function get() {\n        warn('TransformManual has been renamed to TransformBase, please update your pixi-spine');\n        return core.TransformBase;\n      }\n    },\n    /**\n     * @static\n     * @constant\n     * @name PIXI.TARGET_FPMS\n     * @see PIXI.settings.TARGET_FPMS\n     * @deprecated since version 4.2.0\n     */\n    TARGET_FPMS: {\n      get: function get() {\n        warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n        return core.settings.TARGET_FPMS;\n      },\n      set: function set(value) {\n        warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n        core.settings.TARGET_FPMS = value;\n      }\n    },\n    /**\n     * @static\n     * @constant\n     * @name PIXI.FILTER_RESOLUTION\n     * @see PIXI.settings.FILTER_RESOLUTION\n     * @deprecated since version 4.2.0\n     */\n    FILTER_RESOLUTION: {\n      get: function get() {\n        warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n        return core.settings.FILTER_RESOLUTION;\n      },\n      set: function set(value) {\n        warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n        core.settings.FILTER_RESOLUTION = value;\n      }\n    },\n    /**\n     * @static\n     * @constant\n     * @name PIXI.RESOLUTION\n     * @see PIXI.settings.RESOLUTION\n     * @deprecated since version 4.2.0\n     */\n    RESOLUTION: {\n      get: function get() {\n        warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n        return core.settings.RESOLUTION;\n      },\n      set: function set(value) {\n        warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n        core.settings.RESOLUTION = value;\n      }\n    },\n    /**\n     * @static\n     * @constant\n     * @name PIXI.MIPMAP_TEXTURES\n     * @see PIXI.settings.MIPMAP_TEXTURES\n     * @deprecated since version 4.2.0\n     */\n    MIPMAP_TEXTURES: {\n      get: function get() {\n        warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n        return core.settings.MIPMAP_TEXTURES;\n      },\n      set: function set(value) {\n        warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n        core.settings.MIPMAP_TEXTURES = value;\n      }\n    },\n    /**\n     * @static\n     * @constant\n     * @name PIXI.SPRITE_BATCH_SIZE\n     * @see PIXI.settings.SPRITE_BATCH_SIZE\n     * @deprecated since version 4.2.0\n     */\n    SPRITE_BATCH_SIZE: {\n      get: function get() {\n        warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n        return core.settings.SPRITE_BATCH_SIZE;\n      },\n      set: function set(value) {\n        warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n        core.settings.SPRITE_BATCH_SIZE = value;\n      }\n    },\n    /**\n     * @static\n     * @constant\n     * @name PIXI.SPRITE_MAX_TEXTURES\n     * @see PIXI.settings.SPRITE_MAX_TEXTURES\n     * @deprecated since version 4.2.0\n     */\n    SPRITE_MAX_TEXTURES: {\n      get: function get() {\n        warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n        return core.settings.SPRITE_MAX_TEXTURES;\n      },\n      set: function set(value) {\n        warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n        core.settings.SPRITE_MAX_TEXTURES = value;\n      }\n    },\n    /**\n     * @static\n     * @constant\n     * @name PIXI.RETINA_PREFIX\n     * @see PIXI.settings.RETINA_PREFIX\n     * @deprecated since version 4.2.0\n     */\n    RETINA_PREFIX: {\n      get: function get() {\n        warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n        return core.settings.RETINA_PREFIX;\n      },\n      set: function set(value) {\n        warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n        core.settings.RETINA_PREFIX = value;\n      }\n    },\n    /**\n     * @static\n     * @constant\n     * @name PIXI.DEFAULT_RENDER_OPTIONS\n     * @see PIXI.settings.RENDER_OPTIONS\n     * @deprecated since version 4.2.0\n     */\n    DEFAULT_RENDER_OPTIONS: {\n      get: function get() {\n        warn('PIXI.DEFAULT_RENDER_OPTIONS has been deprecated, please use PIXI.settings.DEFAULT_RENDER_OPTIONS');\n        return core.settings.RENDER_OPTIONS;\n      }\n    }\n  });\n\n  // Move the default properties to settings\n  var defaults = [{\n    parent: 'TRANSFORM_MODE',\n    target: 'TRANSFORM_MODE'\n  }, {\n    parent: 'GC_MODES',\n    target: 'GC_MODE'\n  }, {\n    parent: 'WRAP_MODES',\n    target: 'WRAP_MODE'\n  }, {\n    parent: 'SCALE_MODES',\n    target: 'SCALE_MODE'\n  }, {\n    parent: 'PRECISION',\n    target: 'PRECISION_FRAGMENT'\n  }];\n  var _loop = function _loop(i) {\n    var deprecation = defaults[i];\n    Object.defineProperty(core[deprecation.parent], 'DEFAULT', {\n      get: function get() {\n        warn('PIXI.' + deprecation.parent + '.DEFAULT has been deprecated, ' + ('please use PIXI.settings.' + deprecation.target));\n        return core.settings[deprecation.target];\n      },\n      set: function set(value) {\n        warn('PIXI.' + deprecation.parent + '.DEFAULT has been deprecated, ' + ('please use PIXI.settings.' + deprecation.target));\n        core.settings[deprecation.target] = value;\n      }\n    });\n  };\n  for (var i = 0; i < defaults.length; i++) {\n    _loop(i);\n  }\n  Object.defineProperties(core.settings, {\n    /**\n     * @static\n     * @name PRECISION\n     * @memberof PIXI.settings\n     * @see PIXI.PRECISION\n     * @deprecated since version 4.4.0\n     */\n    PRECISION: {\n      get: function get() {\n        warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n        return core.settings.PRECISION_FRAGMENT;\n      },\n      set: function set(value) {\n        warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n        core.settings.PRECISION_FRAGMENT = value;\n      }\n    }\n  });\n  if (extras.AnimatedSprite) {\n    Object.defineProperties(extras, {\n      /**\n       * @class\n       * @name MovieClip\n       * @memberof PIXI.extras\n       * @see PIXI.extras.AnimatedSprite\n       * @deprecated since version 4.2.0\n       */\n      MovieClip: {\n        get: function get() {\n          warn('The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.');\n          return extras.AnimatedSprite;\n        }\n      }\n    });\n  }\n  if (extras) {\n    Object.defineProperties(extras, {\n      /**\n       * @class\n       * @name TextureTransform\n       * @memberof PIXI.extras\n       * @see PIXI.TextureMatrix\n       * @deprecated since version 4.6.0\n       */\n      TextureTransform: {\n        get: function get() {\n          warn('The TextureTransform class has been renamed to TextureMatrix, ' + 'please use PIXI.TextureMatrix from now on.');\n          return core.TextureMatrix;\n        }\n      }\n    });\n  }\n  core.DisplayObject.prototype.generateTexture = function generateTexture(renderer, scaleMode, resolution) {\n    warn('generateTexture has moved to the renderer, please use renderer.generateTexture(displayObject)');\n    return renderer.generateTexture(this, scaleMode, resolution);\n  };\n  core.Graphics.prototype.generateTexture = function generateTexture(scaleMode, resolution) {\n    warn('graphics generate texture has moved to the renderer. ' + 'Or to render a graphics to a texture using canvas please use generateCanvasTexture');\n    return this.generateCanvasTexture(scaleMode, resolution);\n  };\n\n  /**\n   * @method\n   * @name PIXI.GroupD8.isSwapWidthHeight\n   * @see PIXI.GroupD8.isVertical\n   * @param {number} rotation - The number to check.\n   * @returns {boolean} Whether or not the direction is vertical\n   * @deprecated since version 4.6.0\n   */\n  core.GroupD8.isSwapWidthHeight = function isSwapWidthHeight(rotation) {\n    warn('GroupD8.isSwapWidthHeight was renamed to GroupD8.isVertical');\n    return core.GroupD8.isVertical(rotation);\n  };\n  core.RenderTexture.prototype.render = function render(displayObject, matrix, clear, updateTransform) {\n    this.legacyRenderer.render(displayObject, this, clear, matrix, !updateTransform);\n    warn('RenderTexture.render is now deprecated, please use renderer.render(displayObject, renderTexture)');\n  };\n  core.RenderTexture.prototype.getImage = function getImage(target) {\n    warn('RenderTexture.getImage is now deprecated, please use renderer.extract.image(target)');\n    return this.legacyRenderer.extract.image(target);\n  };\n  core.RenderTexture.prototype.getBase64 = function getBase64(target) {\n    warn('RenderTexture.getBase64 is now deprecated, please use renderer.extract.base64(target)');\n    return this.legacyRenderer.extract.base64(target);\n  };\n  core.RenderTexture.prototype.getCanvas = function getCanvas(target) {\n    warn('RenderTexture.getCanvas is now deprecated, please use renderer.extract.canvas(target)');\n    return this.legacyRenderer.extract.canvas(target);\n  };\n  core.RenderTexture.prototype.getPixels = function getPixels(target) {\n    warn('RenderTexture.getPixels is now deprecated, please use renderer.extract.pixels(target)');\n    return this.legacyRenderer.pixels(target);\n  };\n\n  /**\n   * @method\n   * @private\n   * @name PIXI.Sprite#setTexture\n   * @see PIXI.Sprite#texture\n   * @deprecated since version 3.0.0\n   * @param {PIXI.Texture} texture - The texture to set to.\n   */\n  core.Sprite.prototype.setTexture = function setTexture(texture) {\n    this.texture = texture;\n    warn('setTexture is now deprecated, please use the texture property, e.g : sprite.texture = texture;');\n  };\n  if (extras.BitmapText) {\n    /**\n     * @method\n     * @name PIXI.extras.BitmapText#setText\n     * @see PIXI.extras.BitmapText#text\n     * @deprecated since version 3.0.0\n     * @param {string} text - The text to set to.\n     */\n    extras.BitmapText.prototype.setText = function setText(text) {\n      this.text = text;\n      warn('setText is now deprecated, please use the text property, e.g : myBitmapText.text = \\'my text\\';');\n    };\n  }\n\n  /**\n   * @method\n   * @name PIXI.Text#setText\n   * @see PIXI.Text#text\n   * @deprecated since version 3.0.0\n   * @param {string} text - The text to set to.\n   */\n  core.Text.prototype.setText = function setText(text) {\n    this.text = text;\n    warn('setText is now deprecated, please use the text property, e.g : myText.text = \\'my text\\';');\n  };\n\n  /**\n   * Calculates the ascent, descent and fontSize of a given fontStyle\n   *\n   * @name PIXI.Text.calculateFontProperties\n   * @see PIXI.TextMetrics.measureFont\n   * @deprecated since version 4.5.0\n   * @param {string} font - String representing the style of the font\n   * @return {Object} Font properties object\n   */\n  core.Text.calculateFontProperties = function calculateFontProperties(font) {\n    warn('Text.calculateFontProperties is now deprecated, please use the TextMetrics.measureFont');\n    return core.TextMetrics.measureFont(font);\n  };\n  Object.defineProperties(core.Text, {\n    fontPropertiesCache: {\n      get: function get() {\n        warn('Text.fontPropertiesCache is deprecated');\n        return core.TextMetrics._fonts;\n      }\n    },\n    fontPropertiesCanvas: {\n      get: function get() {\n        warn('Text.fontPropertiesCanvas is deprecated');\n        return core.TextMetrics._canvas;\n      }\n    },\n    fontPropertiesContext: {\n      get: function get() {\n        warn('Text.fontPropertiesContext is deprecated');\n        return core.TextMetrics._context;\n      }\n    }\n  });\n\n  /**\n   * @method\n   * @name PIXI.Text#setStyle\n   * @see PIXI.Text#style\n   * @deprecated since version 3.0.0\n   * @param {*} style - The style to set to.\n   */\n  core.Text.prototype.setStyle = function setStyle(style) {\n    this.style = style;\n    warn('setStyle is now deprecated, please use the style property, e.g : myText.style = style;');\n  };\n\n  /**\n   * @method\n   * @name PIXI.Text#determineFontProperties\n   * @see PIXI.Text#measureFontProperties\n   * @deprecated since version 4.2.0\n   * @private\n   * @param {string} fontStyle - String representing the style of the font\n   * @return {Object} Font properties object\n   */\n  core.Text.prototype.determineFontProperties = function determineFontProperties(fontStyle) {\n    warn('determineFontProperties is now deprecated, please use TextMetrics.measureFont method');\n    return core.TextMetrics.measureFont(fontStyle);\n  };\n\n  /**\n   * @method\n   * @name PIXI.Text.getFontStyle\n   * @see PIXI.TextMetrics.getFontStyle\n   * @deprecated since version 4.5.0\n   * @param {PIXI.TextStyle} style - The style to use.\n   * @return {string} Font string\n   */\n  core.Text.getFontStyle = function getFontStyle(style) {\n    warn('getFontStyle is now deprecated, please use TextStyle.toFontString() instead');\n    style = style || {};\n    if (!(style instanceof core.TextStyle)) {\n      style = new core.TextStyle(style);\n    }\n    return style.toFontString();\n  };\n  Object.defineProperties(core.TextStyle.prototype, {\n    /**\n     * Set all properties of a font as a single string\n     *\n     * @name PIXI.TextStyle#font\n     * @deprecated since version 4.0.0\n     */\n    font: {\n      get: function get() {\n        warn('text style property \\'font\\' is now deprecated, please use the ' + '\\'fontFamily\\', \\'fontSize\\', \\'fontStyle\\', \\'fontVariant\\' and \\'fontWeight\\' properties from now on');\n        var fontSizeString = typeof this._fontSize === 'number' ? this._fontSize + 'px' : this._fontSize;\n        return this._fontStyle + ' ' + this._fontVariant + ' ' + this._fontWeight + ' ' + fontSizeString + ' ' + this._fontFamily;\n      },\n      set: function set(font) {\n        warn('text style property \\'font\\' is now deprecated, please use the ' + '\\'fontFamily\\',\\'fontSize\\',fontStyle\\',\\'fontVariant\\' and \\'fontWeight\\' properties from now on');\n\n        // can work out fontStyle from search of whole string\n        if (font.indexOf('italic') > 1) {\n          this._fontStyle = 'italic';\n        } else if (font.indexOf('oblique') > -1) {\n          this._fontStyle = 'oblique';\n        } else {\n          this._fontStyle = 'normal';\n        }\n\n        // can work out fontVariant from search of whole string\n        if (font.indexOf('small-caps') > -1) {\n          this._fontVariant = 'small-caps';\n        } else {\n          this._fontVariant = 'normal';\n        }\n\n        // fontWeight and fontFamily are tricker to find, but it's easier to find the fontSize due to it's units\n        var splits = font.split(' ');\n        var fontSizeIndex = -1;\n        this._fontSize = 26;\n        for (var i = 0; i < splits.length; ++i) {\n          if (splits[i].match(/(px|pt|em|%)/)) {\n            fontSizeIndex = i;\n            this._fontSize = splits[i];\n            break;\n          }\n        }\n\n        // we can now search for fontWeight as we know it must occur before the fontSize\n        this._fontWeight = 'normal';\n        for (var _i = 0; _i < fontSizeIndex; ++_i) {\n          if (splits[_i].match(/(bold|bolder|lighter|100|200|300|400|500|600|700|800|900)/)) {\n            this._fontWeight = splits[_i];\n            break;\n          }\n        }\n\n        // and finally join everything together after the fontSize in case the font family has multiple words\n        if (fontSizeIndex > -1 && fontSizeIndex < splits.length - 1) {\n          this._fontFamily = '';\n          for (var _i2 = fontSizeIndex + 1; _i2 < splits.length; ++_i2) {\n            this._fontFamily += splits[_i2] + ' ';\n          }\n          this._fontFamily = this._fontFamily.slice(0, -1);\n        } else {\n          this._fontFamily = 'Arial';\n        }\n        this.styleID++;\n      }\n    }\n  });\n\n  /**\n   * @method\n   * @name PIXI.Texture#setFrame\n   * @see PIXI.Texture#setFrame\n   * @deprecated since version 3.0.0\n   * @param {PIXI.Rectangle} frame - The frame to set.\n   */\n  core.Texture.prototype.setFrame = function setFrame(frame) {\n    this.frame = frame;\n    warn('setFrame is now deprecated, please use the frame property, e.g: myTexture.frame = frame;');\n  };\n\n  /**\n   * @static\n   * @function\n   * @name PIXI.Texture.addTextureToCache\n   * @see PIXI.Texture.addToCache\n   * @deprecated since 4.5.0\n   * @param {PIXI.Texture} texture - The Texture to add to the cache.\n   * @param {string} id - The id that the texture will be stored against.\n   */\n  core.Texture.addTextureToCache = function addTextureToCache(texture, id) {\n    core.Texture.addToCache(texture, id);\n    warn('Texture.addTextureToCache is deprecated, please use Texture.addToCache from now on.');\n  };\n\n  /**\n   * @static\n   * @function\n   * @name PIXI.Texture.removeTextureFromCache\n   * @see PIXI.Texture.removeFromCache\n   * @deprecated since 4.5.0\n   * @param {string} id - The id of the texture to be removed\n   * @return {PIXI.Texture|null} The texture that was removed\n   */\n  core.Texture.removeTextureFromCache = function removeTextureFromCache(id) {\n    warn('Texture.removeTextureFromCache is deprecated, please use Texture.removeFromCache from now on. ' + 'Be aware that Texture.removeFromCache does not automatically its BaseTexture from the BaseTextureCache. ' + 'For that, use BaseTexture.removeFromCache');\n    core.BaseTexture.removeFromCache(id);\n    return core.Texture.removeFromCache(id);\n  };\n  Object.defineProperties(filters, {\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.AbstractFilter\n     * @see PIXI.AbstractFilter\n     * @deprecated since version 3.0.6\n     */\n    AbstractFilter: {\n      get: function get() {\n        warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n        return core.AbstractFilter;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.SpriteMaskFilter\n     * @see PIXI.SpriteMaskFilter\n     * @deprecated since version 3.0.6\n     */\n    SpriteMaskFilter: {\n      get: function get() {\n        warn('filters.SpriteMaskFilter is an undocumented alias, please use SpriteMaskFilter from now on.');\n        return core.SpriteMaskFilter;\n      }\n    },\n    /**\n     * @class\n     * @private\n     * @name PIXI.filters.VoidFilter\n     * @see PIXI.filters.AlphaFilter\n     * @deprecated since version 4.5.7\n     */\n    VoidFilter: {\n      get: function get() {\n        warn('VoidFilter has been renamed to AlphaFilter, please use PIXI.filters.AlphaFilter');\n        return filters.AlphaFilter;\n      }\n    }\n  });\n\n  /**\n   * @method\n   * @name PIXI.utils.uuid\n   * @see PIXI.utils.uid\n   * @deprecated since version 3.0.6\n   * @return {number} The uid\n   */\n  core.utils.uuid = function () {\n    warn('utils.uuid() is deprecated, please use utils.uid() from now on.');\n    return core.utils.uid();\n  };\n\n  /**\n   * @method\n   * @name PIXI.utils.canUseNewCanvasBlendModes\n   * @see PIXI.CanvasTinter\n   * @deprecated\n   * @return {boolean} Can use blend modes.\n   */\n  core.utils.canUseNewCanvasBlendModes = function () {\n    warn('utils.canUseNewCanvasBlendModes() is deprecated, please use CanvasTinter.canUseMultiply from now on');\n    return core.CanvasTinter.canUseMultiply;\n  };\n  var saidHello = true;\n\n  /**\n   * @name PIXI.utils._saidHello\n   * @type {boolean}\n   * @see PIXI.utils.skipHello\n   * @deprecated since 4.1.0\n   */\n  Object.defineProperty(core.utils, '_saidHello', {\n    set: function set(bool) {\n      if (bool) {\n        warn('PIXI.utils._saidHello is deprecated, please use PIXI.utils.skipHello()');\n        this.skipHello();\n      }\n      saidHello = bool;\n    },\n    get: function get() {\n      return saidHello;\n    }\n  });\n  if (prepare.BasePrepare) {\n    /**\n     * @method\n     * @name PIXI.prepare.BasePrepare#register\n     * @see PIXI.prepare.BasePrepare#registerFindHook\n     * @deprecated since version 4.4.2\n     * @param {Function} [addHook] - Function call that takes two parameters: `item:*, queue:Array`\n     *        function must return `true` if it was able to add item to the queue.\n     * @param {Function} [uploadHook] - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n     *        function must return `true` if it was able to handle upload of item.\n     * @return {PIXI.BasePrepare} Instance of plugin for chaining.\n     */\n    prepare.BasePrepare.prototype.register = function register(addHook, uploadHook) {\n      warn('renderer.plugins.prepare.register is now deprecated, ' + 'please use renderer.plugins.prepare.registerFindHook & renderer.plugins.prepare.registerUploadHook');\n      if (addHook) {\n        this.registerFindHook(addHook);\n      }\n      if (uploadHook) {\n        this.registerUploadHook(uploadHook);\n      }\n      return this;\n    };\n  }\n  if (prepare.canvas) {\n    /**\n     * The number of graphics or textures to upload to the GPU.\n     *\n     * @name PIXI.prepare.canvas.UPLOADS_PER_FRAME\n     * @static\n     * @type {number}\n     * @see PIXI.prepare.BasePrepare.limiter\n     * @deprecated since 4.2.0\n     */\n    Object.defineProperty(prepare.canvas, 'UPLOADS_PER_FRAME', {\n      set: function set() {\n        warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please set ' + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n        // because we don't have a reference to the renderer, we can't actually set\n        // the uploads per frame, so we'll have to stick with the warning.\n      },\n\n      get: function get() {\n        warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please use ' + 'renderer.plugins.prepare.limiter');\n        return NaN;\n      }\n    });\n  }\n  if (prepare.webgl) {\n    /**\n     * The number of graphics or textures to upload to the GPU.\n     *\n     * @name PIXI.prepare.webgl.UPLOADS_PER_FRAME\n     * @static\n     * @type {number}\n     * @see PIXI.prepare.BasePrepare.limiter\n     * @deprecated since 4.2.0\n     */\n    Object.defineProperty(prepare.webgl, 'UPLOADS_PER_FRAME', {\n      set: function set() {\n        warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please set ' + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n        // because we don't have a reference to the renderer, we can't actually set\n        // the uploads per frame, so we'll have to stick with the warning.\n      },\n\n      get: function get() {\n        warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please use ' + 'renderer.plugins.prepare.limiter');\n        return NaN;\n      }\n    });\n  }\n  if (loaders.Loader) {\n    var Resource = loaders.Resource;\n    var Loader = loaders.Loader;\n    Object.defineProperties(Resource.prototype, {\n      isJson: {\n        get: function get() {\n          warn('The isJson property is deprecated, please use `resource.type === Resource.TYPE.JSON`.');\n          return this.type === Resource.TYPE.JSON;\n        }\n      },\n      isXml: {\n        get: function get() {\n          warn('The isXml property is deprecated, please use `resource.type === Resource.TYPE.XML`.');\n          return this.type === Resource.TYPE.XML;\n        }\n      },\n      isImage: {\n        get: function get() {\n          warn('The isImage property is deprecated, please use `resource.type === Resource.TYPE.IMAGE`.');\n          return this.type === Resource.TYPE.IMAGE;\n        }\n      },\n      isAudio: {\n        get: function get() {\n          warn('The isAudio property is deprecated, please use `resource.type === Resource.TYPE.AUDIO`.');\n          return this.type === Resource.TYPE.AUDIO;\n        }\n      },\n      isVideo: {\n        get: function get() {\n          warn('The isVideo property is deprecated, please use `resource.type === Resource.TYPE.VIDEO`.');\n          return this.type === Resource.TYPE.VIDEO;\n        }\n      }\n    });\n    Object.defineProperties(Loader.prototype, {\n      before: {\n        get: function get() {\n          warn('The before() method is deprecated, please use pre().');\n          return this.pre;\n        }\n      },\n      after: {\n        get: function get() {\n          warn('The after() method is deprecated, please use use().');\n          return this.use;\n        }\n      }\n    });\n  }\n  if (interaction.interactiveTarget) {\n    /**\n     * @name PIXI.interaction.interactiveTarget#defaultCursor\n     * @static\n     * @type {number}\n     * @see PIXI.interaction.interactiveTarget#cursor\n     * @deprecated since 4.3.0\n     */\n    Object.defineProperty(interaction.interactiveTarget, 'defaultCursor', {\n      set: function set(value) {\n        warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n        this.cursor = value;\n      },\n      get: function get() {\n        warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n        return this.cursor;\n      }\n    });\n  }\n  if (interaction.InteractionManager) {\n    /**\n     * @name PIXI.interaction.InteractionManager#defaultCursorStyle\n     * @static\n     * @type {string}\n     * @see PIXI.interaction.InteractionManager#cursorStyles\n     * @deprecated since 4.3.0\n     */\n    Object.defineProperty(interaction.InteractionManager, 'defaultCursorStyle', {\n      set: function set(value) {\n        warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n        this.cursorStyles.default = value;\n      },\n      get: function get() {\n        warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n        return this.cursorStyles.default;\n      }\n    });\n\n    /**\n     * @name PIXI.interaction.InteractionManager#currentCursorStyle\n     * @static\n     * @type {string}\n     * @see PIXI.interaction.InteractionManager#cursorStyles\n     * @deprecated since 4.3.0\n     */\n    Object.defineProperty(interaction.InteractionManager, 'currentCursorStyle', {\n      set: function set(value) {\n        warn('Property currentCursorStyle has been removed.' + 'See the currentCursorMode property, which works differently.');\n        this.currentCursorMode = value;\n      },\n      get: function get() {\n        warn('Property currentCursorStyle has been removed.' + 'See the currentCursorMode property, which works differently.');\n        return this.currentCursorMode;\n      }\n    });\n  }\n}","map":{"version":3,"names":["deprecation","warnings","warn","msg","stack","Error","console","split","splice","join","groupCollapsed","groupEnd","core","mesh","particles","extras","filters","prepare","loaders","interaction","Object","defineProperties","SpriteBatch","get","ReferenceError","AssetLoader","Stage","Container","DisplayObjectContainer","Strip","Mesh","Rope","ParticleContainer","MovieClip","AnimatedSprite","TilingSprite","BitmapText","blendModes","BLEND_MODES","scaleModes","SCALE_MODES","BaseTextureCache","utils","TextureCache","math","AbstractFilter","Filter","TransformManual","TransformBase","TARGET_FPMS","settings","set","value","FILTER_RESOLUTION","RESOLUTION","MIPMAP_TEXTURES","SPRITE_BATCH_SIZE","SPRITE_MAX_TEXTURES","RETINA_PREFIX","DEFAULT_RENDER_OPTIONS","RENDER_OPTIONS","defaults","parent","target","_loop","i","defineProperty","length","PRECISION","PRECISION_FRAGMENT","TextureTransform","TextureMatrix","DisplayObject","prototype","generateTexture","renderer","scaleMode","resolution","Graphics","generateCanvasTexture","GroupD8","isSwapWidthHeight","rotation","isVertical","RenderTexture","render","displayObject","matrix","clear","updateTransform","legacyRenderer","getImage","extract","image","getBase64","base64","getCanvas","canvas","getPixels","pixels","Sprite","setTexture","texture","setText","text","Text","calculateFontProperties","font","TextMetrics","measureFont","fontPropertiesCache","_fonts","fontPropertiesCanvas","_canvas","fontPropertiesContext","_context","setStyle","style","determineFontProperties","fontStyle","getFontStyle","TextStyle","toFontString","fontSizeString","_fontSize","_fontStyle","_fontVariant","_fontWeight","_fontFamily","indexOf","splits","fontSizeIndex","match","_i","_i2","slice","styleID","Texture","setFrame","frame","addTextureToCache","id","addToCache","removeTextureFromCache","BaseTexture","removeFromCache","SpriteMaskFilter","VoidFilter","AlphaFilter","uuid","uid","canUseNewCanvasBlendModes","CanvasTinter","canUseMultiply","saidHello","bool","skipHello","BasePrepare","register","addHook","uploadHook","registerFindHook","registerUploadHook","NaN","webgl","Loader","Resource","isJson","type","TYPE","JSON","isXml","XML","isImage","IMAGE","isAudio","AUDIO","isVideo","VIDEO","before","pre","after","use","interactiveTarget","cursor","InteractionManager","cursorStyles","default","currentCursorMode"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/deprecation.js"],"sourcesContent":["// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\n\n// A map of warning messages already fired\nconst warnings = {};\n\n// provide method to give a stack track for warnings\n// useful for tracking-down where deprecated methods/properties/classes\n// are being used within the code\nfunction warn(msg)\n{\n    // Ignore duplicat\n    if (warnings[msg])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('Deprecation Warning: ', msg);\n    }\n    else\n    {\n        // chop off the stack trace which includes pixi.js internal calls\n        stack = stack.split('\\n').splice(3).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cDeprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                msg\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('Deprecation Warning: ', msg);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[msg] = true;\n}\n\nexport default function deprecation(core)\n{\n    const { mesh, particles, extras, filters, prepare, loaders, interaction } = core;\n\n    Object.defineProperties(core, {\n\n        /**\n         * @class\n         * @private\n         * @name SpriteBatch\n         * @memberof PIXI\n         * @see PIXI.ParticleContainer\n         * @throws {ReferenceError} SpriteBatch does not exist any more, please use the new ParticleContainer instead.\n         * @deprecated since version 3.0.0\n         */\n        SpriteBatch: {\n            get()\n            {\n                throw new ReferenceError('SpriteBatch does not exist any more, '\n                    + 'please use the new ParticleContainer instead.');\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name AssetLoader\n         * @memberof PIXI\n         * @see PIXI.loaders.Loader\n         * @throws {ReferenceError} The loader system was overhauled in PixiJS v3,\n         * please see the new PIXI.loaders.Loader class.\n         * @deprecated since version 3.0.0\n         */\n        AssetLoader: {\n            get()\n            {\n                throw new ReferenceError('The loader system was overhauled in PixiJS v3, '\n                    + 'please see the new PIXI.loaders.Loader class.');\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Stage\n         * @memberof PIXI\n         * @see PIXI.Container\n         * @deprecated since version 3.0.0\n         */\n        Stage: {\n            get()\n            {\n                warn('You do not need to use a PIXI Stage any more, you can simply render any container.');\n\n                return core.Container;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name DisplayObjectContainer\n         * @memberof PIXI\n         * @see PIXI.Container\n         * @deprecated since version 3.0.0\n         */\n        DisplayObjectContainer: {\n            get()\n            {\n                warn('DisplayObjectContainer has been shortened to Container, please use Container from now on.');\n\n                return core.Container;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Strip\n         * @memberof PIXI\n         * @see PIXI.mesh.Mesh\n         * @deprecated since version 3.0.0\n         */\n        Strip: {\n            get()\n            {\n                warn('The Strip class has been renamed to Mesh and moved to mesh.Mesh, please use mesh.Mesh from now on.');\n\n                return mesh.Mesh;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name Rope\n         * @memberof PIXI\n         * @see PIXI.mesh.Rope\n         * @deprecated since version 3.0.0\n         */\n        Rope: {\n            get()\n            {\n                warn('The Rope class has been moved to mesh.Rope, please use mesh.Rope from now on.');\n\n                return mesh.Rope;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name ParticleContainer\n         * @memberof PIXI\n         * @see PIXI.particles.ParticleContainer\n         * @deprecated since version 4.0.0\n         */\n        ParticleContainer: {\n            get()\n            {\n                warn('The ParticleContainer class has been moved to particles.ParticleContainer, '\n                    + 'please use particles.ParticleContainer from now on.');\n\n                return particles.ParticleContainer;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name MovieClip\n         * @memberof PIXI\n         * @see PIXI.extras.MovieClip\n         * @deprecated since version 3.0.0\n         */\n        MovieClip: {\n            get()\n            {\n                warn('The MovieClip class has been moved to extras.AnimatedSprite, please use extras.AnimatedSprite.');\n\n                return extras.AnimatedSprite;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name TilingSprite\n         * @memberof PIXI\n         * @see PIXI.extras.TilingSprite\n         * @deprecated since version 3.0.0\n         */\n        TilingSprite: {\n            get()\n            {\n                warn('The TilingSprite class has been moved to extras.TilingSprite, '\n                    + 'please use extras.TilingSprite from now on.');\n\n                return extras.TilingSprite;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name BitmapText\n         * @memberof PIXI\n         * @see PIXI.extras.BitmapText\n         * @deprecated since version 3.0.0\n         */\n        BitmapText: {\n            get()\n            {\n                warn('The BitmapText class has been moved to extras.BitmapText, '\n                    + 'please use extras.BitmapText from now on.');\n\n                return extras.BitmapText;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name blendModes\n         * @memberof PIXI\n         * @see PIXI.BLEND_MODES\n         * @deprecated since version 3.0.0\n         */\n        blendModes: {\n            get()\n            {\n                warn('The blendModes has been moved to BLEND_MODES, please use BLEND_MODES from now on.');\n\n                return core.BLEND_MODES;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name scaleModes\n         * @memberof PIXI\n         * @see PIXI.SCALE_MODES\n         * @deprecated since version 3.0.0\n         */\n        scaleModes: {\n            get()\n            {\n                warn('The scaleModes has been moved to SCALE_MODES, please use SCALE_MODES from now on.');\n\n                return core.SCALE_MODES;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name BaseTextureCache\n         * @memberof PIXI\n         * @see PIXI.utils.BaseTextureCache\n         * @deprecated since version 3.0.0\n         */\n        BaseTextureCache: {\n            get()\n            {\n                warn('The BaseTextureCache class has been moved to utils.BaseTextureCache, '\n                    + 'please use utils.BaseTextureCache from now on.');\n\n                return core.utils.BaseTextureCache;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name TextureCache\n         * @memberof PIXI\n         * @see PIXI.utils.TextureCache\n         * @deprecated since version 3.0.0\n         */\n        TextureCache: {\n            get()\n            {\n                warn('The TextureCache class has been moved to utils.TextureCache, '\n                    + 'please use utils.TextureCache from now on.');\n\n                return core.utils.TextureCache;\n            },\n        },\n\n        /**\n         * @namespace\n         * @private\n         * @name math\n         * @memberof PIXI\n         * @see PIXI\n         * @deprecated since version 3.0.6\n         */\n        math: {\n            get()\n            {\n                warn('The math namespace is deprecated, please access members already accessible on PIXI.');\n\n                return core;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.AbstractFilter\n         * @see PIXI.Filter\n         * @deprecated since version 3.0.6\n         */\n        AbstractFilter: {\n            get()\n            {\n                warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n                return core.Filter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.TransformManual\n         * @see PIXI.TransformBase\n         * @deprecated since version 4.0.0\n         */\n        TransformManual: {\n            get()\n            {\n                warn('TransformManual has been renamed to TransformBase, please update your pixi-spine');\n\n                return core.TransformBase;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.TARGET_FPMS\n         * @see PIXI.settings.TARGET_FPMS\n         * @deprecated since version 4.2.0\n         */\n        TARGET_FPMS: {\n            get()\n            {\n                warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n                return core.settings.TARGET_FPMS;\n            },\n            set(value)\n            {\n                warn('PIXI.TARGET_FPMS has been deprecated, please use PIXI.settings.TARGET_FPMS');\n\n                core.settings.TARGET_FPMS = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.FILTER_RESOLUTION\n         * @see PIXI.settings.FILTER_RESOLUTION\n         * @deprecated since version 4.2.0\n         */\n        FILTER_RESOLUTION: {\n            get()\n            {\n                warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n                return core.settings.FILTER_RESOLUTION;\n            },\n            set(value)\n            {\n                warn('PIXI.FILTER_RESOLUTION has been deprecated, please use PIXI.settings.FILTER_RESOLUTION');\n\n                core.settings.FILTER_RESOLUTION = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.RESOLUTION\n         * @see PIXI.settings.RESOLUTION\n         * @deprecated since version 4.2.0\n         */\n        RESOLUTION: {\n            get()\n            {\n                warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n                return core.settings.RESOLUTION;\n            },\n            set(value)\n            {\n                warn('PIXI.RESOLUTION has been deprecated, please use PIXI.settings.RESOLUTION');\n\n                core.settings.RESOLUTION = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.MIPMAP_TEXTURES\n         * @see PIXI.settings.MIPMAP_TEXTURES\n         * @deprecated since version 4.2.0\n         */\n        MIPMAP_TEXTURES: {\n            get()\n            {\n                warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n                return core.settings.MIPMAP_TEXTURES;\n            },\n            set(value)\n            {\n                warn('PIXI.MIPMAP_TEXTURES has been deprecated, please use PIXI.settings.MIPMAP_TEXTURES');\n\n                core.settings.MIPMAP_TEXTURES = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.SPRITE_BATCH_SIZE\n         * @see PIXI.settings.SPRITE_BATCH_SIZE\n         * @deprecated since version 4.2.0\n         */\n        SPRITE_BATCH_SIZE: {\n            get()\n            {\n                warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n                return core.settings.SPRITE_BATCH_SIZE;\n            },\n            set(value)\n            {\n                warn('PIXI.SPRITE_BATCH_SIZE has been deprecated, please use PIXI.settings.SPRITE_BATCH_SIZE');\n\n                core.settings.SPRITE_BATCH_SIZE = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.SPRITE_MAX_TEXTURES\n         * @see PIXI.settings.SPRITE_MAX_TEXTURES\n         * @deprecated since version 4.2.0\n         */\n        SPRITE_MAX_TEXTURES: {\n            get()\n            {\n                warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n                return core.settings.SPRITE_MAX_TEXTURES;\n            },\n            set(value)\n            {\n                warn('PIXI.SPRITE_MAX_TEXTURES has been deprecated, please use PIXI.settings.SPRITE_MAX_TEXTURES');\n\n                core.settings.SPRITE_MAX_TEXTURES = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.RETINA_PREFIX\n         * @see PIXI.settings.RETINA_PREFIX\n         * @deprecated since version 4.2.0\n         */\n        RETINA_PREFIX: {\n            get()\n            {\n                warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n                return core.settings.RETINA_PREFIX;\n            },\n            set(value)\n            {\n                warn('PIXI.RETINA_PREFIX has been deprecated, please use PIXI.settings.RETINA_PREFIX');\n\n                core.settings.RETINA_PREFIX = value;\n            },\n        },\n\n        /**\n         * @static\n         * @constant\n         * @name PIXI.DEFAULT_RENDER_OPTIONS\n         * @see PIXI.settings.RENDER_OPTIONS\n         * @deprecated since version 4.2.0\n         */\n        DEFAULT_RENDER_OPTIONS: {\n            get()\n            {\n                warn('PIXI.DEFAULT_RENDER_OPTIONS has been deprecated, please use PIXI.settings.DEFAULT_RENDER_OPTIONS');\n\n                return core.settings.RENDER_OPTIONS;\n            },\n        },\n    });\n\n    // Move the default properties to settings\n    const defaults = [\n        { parent: 'TRANSFORM_MODE', target: 'TRANSFORM_MODE' },\n        { parent: 'GC_MODES', target: 'GC_MODE' },\n        { parent: 'WRAP_MODES', target: 'WRAP_MODE' },\n        { parent: 'SCALE_MODES', target: 'SCALE_MODE' },\n        { parent: 'PRECISION', target: 'PRECISION_FRAGMENT' },\n    ];\n\n    for (let i = 0; i < defaults.length; i++)\n    {\n        const deprecation = defaults[i];\n\n        Object.defineProperty(core[deprecation.parent], 'DEFAULT', {\n            get()\n            {\n                warn(`PIXI.${deprecation.parent}.DEFAULT has been deprecated, `\n                    + `please use PIXI.settings.${deprecation.target}`);\n\n                return core.settings[deprecation.target];\n            },\n            set(value)\n            {\n                warn(`PIXI.${deprecation.parent}.DEFAULT has been deprecated, `\n                    + `please use PIXI.settings.${deprecation.target}`);\n\n                core.settings[deprecation.target] = value;\n            },\n        });\n    }\n\n    Object.defineProperties(core.settings, {\n\n        /**\n         * @static\n         * @name PRECISION\n         * @memberof PIXI.settings\n         * @see PIXI.PRECISION\n         * @deprecated since version 4.4.0\n         */\n        PRECISION: {\n            get()\n            {\n                warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n\n                return core.settings.PRECISION_FRAGMENT;\n            },\n            set(value)\n            {\n                warn('PIXI.settings.PRECISION has been deprecated, please use PIXI.settings.PRECISION_FRAGMENT');\n\n                core.settings.PRECISION_FRAGMENT = value;\n            },\n        },\n    });\n\n    if (extras.AnimatedSprite)\n    {\n        Object.defineProperties(extras, {\n\n            /**\n             * @class\n             * @name MovieClip\n             * @memberof PIXI.extras\n             * @see PIXI.extras.AnimatedSprite\n             * @deprecated since version 4.2.0\n             */\n            MovieClip: {\n                get()\n                {\n                    warn('The MovieClip class has been renamed to AnimatedSprite, please use AnimatedSprite from now on.');\n\n                    return extras.AnimatedSprite;\n                },\n            },\n        });\n    }\n\n    if (extras)\n    {\n        Object.defineProperties(extras, {\n            /**\n             * @class\n             * @name TextureTransform\n             * @memberof PIXI.extras\n             * @see PIXI.TextureMatrix\n             * @deprecated since version 4.6.0\n             */\n            TextureTransform: {\n                get()\n                {\n                    warn('The TextureTransform class has been renamed to TextureMatrix, '\n                        + 'please use PIXI.TextureMatrix from now on.');\n\n                    return core.TextureMatrix;\n                },\n            },\n        });\n    }\n\n    core.DisplayObject.prototype.generateTexture = function generateTexture(renderer, scaleMode, resolution)\n    {\n        warn('generateTexture has moved to the renderer, please use renderer.generateTexture(displayObject)');\n\n        return renderer.generateTexture(this, scaleMode, resolution);\n    };\n\n    core.Graphics.prototype.generateTexture = function generateTexture(scaleMode, resolution)\n    {\n        warn('graphics generate texture has moved to the renderer. '\n            + 'Or to render a graphics to a texture using canvas please use generateCanvasTexture');\n\n        return this.generateCanvasTexture(scaleMode, resolution);\n    };\n\n    /**\n     * @method\n     * @name PIXI.GroupD8.isSwapWidthHeight\n     * @see PIXI.GroupD8.isVertical\n     * @param {number} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     * @deprecated since version 4.6.0\n     */\n    core.GroupD8.isSwapWidthHeight = function isSwapWidthHeight(rotation)\n    {\n        warn('GroupD8.isSwapWidthHeight was renamed to GroupD8.isVertical');\n\n        return core.GroupD8.isVertical(rotation);\n    };\n\n    core.RenderTexture.prototype.render = function render(displayObject, matrix, clear, updateTransform)\n    {\n        this.legacyRenderer.render(displayObject, this, clear, matrix, !updateTransform);\n        warn('RenderTexture.render is now deprecated, please use renderer.render(displayObject, renderTexture)');\n    };\n\n    core.RenderTexture.prototype.getImage = function getImage(target)\n    {\n        warn('RenderTexture.getImage is now deprecated, please use renderer.extract.image(target)');\n\n        return this.legacyRenderer.extract.image(target);\n    };\n\n    core.RenderTexture.prototype.getBase64 = function getBase64(target)\n    {\n        warn('RenderTexture.getBase64 is now deprecated, please use renderer.extract.base64(target)');\n\n        return this.legacyRenderer.extract.base64(target);\n    };\n\n    core.RenderTexture.prototype.getCanvas = function getCanvas(target)\n    {\n        warn('RenderTexture.getCanvas is now deprecated, please use renderer.extract.canvas(target)');\n\n        return this.legacyRenderer.extract.canvas(target);\n    };\n\n    core.RenderTexture.prototype.getPixels = function getPixels(target)\n    {\n        warn('RenderTexture.getPixels is now deprecated, please use renderer.extract.pixels(target)');\n\n        return this.legacyRenderer.pixels(target);\n    };\n\n    /**\n     * @method\n     * @private\n     * @name PIXI.Sprite#setTexture\n     * @see PIXI.Sprite#texture\n     * @deprecated since version 3.0.0\n     * @param {PIXI.Texture} texture - The texture to set to.\n     */\n    core.Sprite.prototype.setTexture = function setTexture(texture)\n    {\n        this.texture = texture;\n        warn('setTexture is now deprecated, please use the texture property, e.g : sprite.texture = texture;');\n    };\n\n    if (extras.BitmapText)\n    {\n        /**\n         * @method\n         * @name PIXI.extras.BitmapText#setText\n         * @see PIXI.extras.BitmapText#text\n         * @deprecated since version 3.0.0\n         * @param {string} text - The text to set to.\n         */\n        extras.BitmapText.prototype.setText = function setText(text)\n        {\n            this.text = text;\n            warn(`setText is now deprecated, please use the text property, e.g : myBitmapText.text = 'my text';`);\n        };\n    }\n\n    /**\n     * @method\n     * @name PIXI.Text#setText\n     * @see PIXI.Text#text\n     * @deprecated since version 3.0.0\n     * @param {string} text - The text to set to.\n     */\n    core.Text.prototype.setText = function setText(text)\n    {\n        this.text = text;\n        warn(`setText is now deprecated, please use the text property, e.g : myText.text = 'my text';`);\n    };\n\n    /**\n     * Calculates the ascent, descent and fontSize of a given fontStyle\n     *\n     * @name PIXI.Text.calculateFontProperties\n     * @see PIXI.TextMetrics.measureFont\n     * @deprecated since version 4.5.0\n     * @param {string} font - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n    core.Text.calculateFontProperties = function calculateFontProperties(font)\n    {\n        warn(`Text.calculateFontProperties is now deprecated, please use the TextMetrics.measureFont`);\n\n        return core.TextMetrics.measureFont(font);\n    };\n\n    Object.defineProperties(core.Text, {\n        fontPropertiesCache: {\n            get()\n            {\n                warn(`Text.fontPropertiesCache is deprecated`);\n\n                return core.TextMetrics._fonts;\n            },\n        },\n        fontPropertiesCanvas: {\n            get()\n            {\n                warn(`Text.fontPropertiesCanvas is deprecated`);\n\n                return core.TextMetrics._canvas;\n            },\n        },\n        fontPropertiesContext: {\n            get()\n            {\n                warn(`Text.fontPropertiesContext is deprecated`);\n\n                return core.TextMetrics._context;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.Text#setStyle\n     * @see PIXI.Text#style\n     * @deprecated since version 3.0.0\n     * @param {*} style - The style to set to.\n     */\n    core.Text.prototype.setStyle = function setStyle(style)\n    {\n        this.style = style;\n        warn('setStyle is now deprecated, please use the style property, e.g : myText.style = style;');\n    };\n\n    /**\n     * @method\n     * @name PIXI.Text#determineFontProperties\n     * @see PIXI.Text#measureFontProperties\n     * @deprecated since version 4.2.0\n     * @private\n     * @param {string} fontStyle - String representing the style of the font\n     * @return {Object} Font properties object\n     */\n    core.Text.prototype.determineFontProperties = function determineFontProperties(fontStyle)\n    {\n        warn('determineFontProperties is now deprecated, please use TextMetrics.measureFont method');\n\n        return core.TextMetrics.measureFont(fontStyle);\n    };\n\n    /**\n     * @method\n     * @name PIXI.Text.getFontStyle\n     * @see PIXI.TextMetrics.getFontStyle\n     * @deprecated since version 4.5.0\n     * @param {PIXI.TextStyle} style - The style to use.\n     * @return {string} Font string\n     */\n    core.Text.getFontStyle = function getFontStyle(style)\n    {\n        warn('getFontStyle is now deprecated, please use TextStyle.toFontString() instead');\n\n        style = style || {};\n\n        if (!(style instanceof core.TextStyle))\n        {\n            style = new core.TextStyle(style);\n        }\n\n        return style.toFontString();\n    };\n\n    Object.defineProperties(core.TextStyle.prototype, {\n        /**\n         * Set all properties of a font as a single string\n         *\n         * @name PIXI.TextStyle#font\n         * @deprecated since version 4.0.0\n         */\n        font: {\n            get()\n            {\n                warn(`text style property 'font' is now deprecated, please use the `\n                    + `'fontFamily', 'fontSize', 'fontStyle', 'fontVariant' and 'fontWeight' properties from now on`);\n\n                const fontSizeString = (typeof this._fontSize === 'number') ? `${this._fontSize}px` : this._fontSize;\n\n                return `${this._fontStyle} ${this._fontVariant} ${this._fontWeight} ${fontSizeString} ${this._fontFamily}`;\n            },\n            set(font)\n            {\n                warn(`text style property 'font' is now deprecated, please use the `\n                    + `'fontFamily','fontSize',fontStyle','fontVariant' and 'fontWeight' properties from now on`);\n\n                // can work out fontStyle from search of whole string\n                if (font.indexOf('italic') > 1)\n                {\n                    this._fontStyle = 'italic';\n                }\n                else if (font.indexOf('oblique') > -1)\n                {\n                    this._fontStyle = 'oblique';\n                }\n                else\n                {\n                    this._fontStyle = 'normal';\n                }\n\n                // can work out fontVariant from search of whole string\n                if (font.indexOf('small-caps') > -1)\n                {\n                    this._fontVariant = 'small-caps';\n                }\n                else\n                {\n                    this._fontVariant = 'normal';\n                }\n\n                // fontWeight and fontFamily are tricker to find, but it's easier to find the fontSize due to it's units\n                const splits = font.split(' ');\n                let fontSizeIndex = -1;\n\n                this._fontSize = 26;\n                for (let i = 0; i < splits.length; ++i)\n                {\n                    if (splits[i].match(/(px|pt|em|%)/))\n                    {\n                        fontSizeIndex = i;\n                        this._fontSize = splits[i];\n                        break;\n                    }\n                }\n\n                // we can now search for fontWeight as we know it must occur before the fontSize\n                this._fontWeight = 'normal';\n                for (let i = 0; i < fontSizeIndex; ++i)\n                {\n                    if (splits[i].match(/(bold|bolder|lighter|100|200|300|400|500|600|700|800|900)/))\n                    {\n                        this._fontWeight = splits[i];\n                        break;\n                    }\n                }\n\n                // and finally join everything together after the fontSize in case the font family has multiple words\n                if (fontSizeIndex > -1 && fontSizeIndex < splits.length - 1)\n                {\n                    this._fontFamily = '';\n                    for (let i = fontSizeIndex + 1; i < splits.length; ++i)\n                    {\n                        this._fontFamily += `${splits[i]} `;\n                    }\n\n                    this._fontFamily = this._fontFamily.slice(0, -1);\n                }\n                else\n                {\n                    this._fontFamily = 'Arial';\n                }\n\n                this.styleID++;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.Texture#setFrame\n     * @see PIXI.Texture#setFrame\n     * @deprecated since version 3.0.0\n     * @param {PIXI.Rectangle} frame - The frame to set.\n     */\n    core.Texture.prototype.setFrame = function setFrame(frame)\n    {\n        this.frame = frame;\n        warn('setFrame is now deprecated, please use the frame property, e.g: myTexture.frame = frame;');\n    };\n\n    /**\n     * @static\n     * @function\n     * @name PIXI.Texture.addTextureToCache\n     * @see PIXI.Texture.addToCache\n     * @deprecated since 4.5.0\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the texture will be stored against.\n     */\n    core.Texture.addTextureToCache = function addTextureToCache(texture, id)\n    {\n        core.Texture.addToCache(texture, id);\n        warn('Texture.addTextureToCache is deprecated, please use Texture.addToCache from now on.');\n    };\n\n    /**\n     * @static\n     * @function\n     * @name PIXI.Texture.removeTextureFromCache\n     * @see PIXI.Texture.removeFromCache\n     * @deprecated since 4.5.0\n     * @param {string} id - The id of the texture to be removed\n     * @return {PIXI.Texture|null} The texture that was removed\n     */\n    core.Texture.removeTextureFromCache = function removeTextureFromCache(id)\n    {\n        warn('Texture.removeTextureFromCache is deprecated, please use Texture.removeFromCache from now on. '\n         + 'Be aware that Texture.removeFromCache does not automatically its BaseTexture from the BaseTextureCache. '\n         + 'For that, use BaseTexture.removeFromCache');\n\n        core.BaseTexture.removeFromCache(id);\n\n        return core.Texture.removeFromCache(id);\n    };\n\n    Object.defineProperties(filters, {\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.AbstractFilter\n         * @see PIXI.AbstractFilter\n         * @deprecated since version 3.0.6\n         */\n        AbstractFilter: {\n            get()\n            {\n                warn('AstractFilter has been renamed to Filter, please use PIXI.Filter');\n\n                return core.AbstractFilter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.SpriteMaskFilter\n         * @see PIXI.SpriteMaskFilter\n         * @deprecated since version 3.0.6\n         */\n        SpriteMaskFilter: {\n            get()\n            {\n                warn('filters.SpriteMaskFilter is an undocumented alias, please use SpriteMaskFilter from now on.');\n\n                return core.SpriteMaskFilter;\n            },\n        },\n\n        /**\n         * @class\n         * @private\n         * @name PIXI.filters.VoidFilter\n         * @see PIXI.filters.AlphaFilter\n         * @deprecated since version 4.5.7\n         */\n        VoidFilter: {\n            get()\n            {\n                warn('VoidFilter has been renamed to AlphaFilter, please use PIXI.filters.AlphaFilter');\n\n                return filters.AlphaFilter;\n            },\n        },\n    });\n\n    /**\n     * @method\n     * @name PIXI.utils.uuid\n     * @see PIXI.utils.uid\n     * @deprecated since version 3.0.6\n     * @return {number} The uid\n     */\n    core.utils.uuid = () =>\n    {\n        warn('utils.uuid() is deprecated, please use utils.uid() from now on.');\n\n        return core.utils.uid();\n    };\n\n    /**\n     * @method\n     * @name PIXI.utils.canUseNewCanvasBlendModes\n     * @see PIXI.CanvasTinter\n     * @deprecated\n     * @return {boolean} Can use blend modes.\n     */\n    core.utils.canUseNewCanvasBlendModes = () =>\n    {\n        warn('utils.canUseNewCanvasBlendModes() is deprecated, please use CanvasTinter.canUseMultiply from now on');\n\n        return core.CanvasTinter.canUseMultiply;\n    };\n\n    let saidHello = true;\n\n    /**\n     * @name PIXI.utils._saidHello\n     * @type {boolean}\n     * @see PIXI.utils.skipHello\n     * @deprecated since 4.1.0\n     */\n    Object.defineProperty(core.utils, '_saidHello', {\n        set(bool)\n        {\n            if (bool)\n            {\n                warn('PIXI.utils._saidHello is deprecated, please use PIXI.utils.skipHello()');\n                this.skipHello();\n            }\n            saidHello = bool;\n        },\n        get()\n        {\n            return saidHello;\n        },\n    });\n\n    if (prepare.BasePrepare)\n    {\n        /**\n         * @method\n         * @name PIXI.prepare.BasePrepare#register\n         * @see PIXI.prepare.BasePrepare#registerFindHook\n         * @deprecated since version 4.4.2\n         * @param {Function} [addHook] - Function call that takes two parameters: `item:*, queue:Array`\n         *        function must return `true` if it was able to add item to the queue.\n         * @param {Function} [uploadHook] - Function call that takes two parameters: `prepare:CanvasPrepare, item:*` and\n         *        function must return `true` if it was able to handle upload of item.\n         * @return {PIXI.BasePrepare} Instance of plugin for chaining.\n         */\n        prepare.BasePrepare.prototype.register = function register(addHook, uploadHook)\n        {\n            warn('renderer.plugins.prepare.register is now deprecated, '\n                + 'please use renderer.plugins.prepare.registerFindHook & renderer.plugins.prepare.registerUploadHook');\n\n            if (addHook)\n            {\n                this.registerFindHook(addHook);\n            }\n\n            if (uploadHook)\n            {\n                this.registerUploadHook(uploadHook);\n            }\n\n            return this;\n        };\n    }\n\n    if (prepare.canvas)\n    {\n        /**\n         * The number of graphics or textures to upload to the GPU.\n         *\n         * @name PIXI.prepare.canvas.UPLOADS_PER_FRAME\n         * @static\n         * @type {number}\n         * @see PIXI.prepare.BasePrepare.limiter\n         * @deprecated since 4.2.0\n         */\n        Object.defineProperty(prepare.canvas, 'UPLOADS_PER_FRAME', {\n            set()\n            {\n                warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please set '\n                    + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n                // because we don't have a reference to the renderer, we can't actually set\n                // the uploads per frame, so we'll have to stick with the warning.\n            },\n            get()\n            {\n                warn('PIXI.CanvasPrepare.UPLOADS_PER_FRAME has been removed. Please use '\n                    + 'renderer.plugins.prepare.limiter');\n\n                return NaN;\n            },\n        });\n    }\n\n    if (prepare.webgl)\n    {\n        /**\n         * The number of graphics or textures to upload to the GPU.\n         *\n         * @name PIXI.prepare.webgl.UPLOADS_PER_FRAME\n         * @static\n         * @type {number}\n         * @see PIXI.prepare.BasePrepare.limiter\n         * @deprecated since 4.2.0\n         */\n        Object.defineProperty(prepare.webgl, 'UPLOADS_PER_FRAME', {\n            set()\n            {\n                warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please set '\n                    + 'renderer.plugins.prepare.limiter.maxItemsPerFrame on your renderer');\n                // because we don't have a reference to the renderer, we can't actually set\n                // the uploads per frame, so we'll have to stick with the warning.\n            },\n            get()\n            {\n                warn('PIXI.WebGLPrepare.UPLOADS_PER_FRAME has been removed. Please use '\n                    + 'renderer.plugins.prepare.limiter');\n\n                return NaN;\n            },\n        });\n    }\n\n    if (loaders.Loader)\n    {\n        const Resource = loaders.Resource;\n        const Loader = loaders.Loader;\n\n        Object.defineProperties(Resource.prototype, {\n            isJson: {\n                get()\n                {\n                    warn('The isJson property is deprecated, please use `resource.type === Resource.TYPE.JSON`.');\n\n                    return this.type === Resource.TYPE.JSON;\n                },\n            },\n            isXml: {\n                get()\n                {\n                    warn('The isXml property is deprecated, please use `resource.type === Resource.TYPE.XML`.');\n\n                    return this.type === Resource.TYPE.XML;\n                },\n            },\n            isImage: {\n                get()\n                {\n                    warn('The isImage property is deprecated, please use `resource.type === Resource.TYPE.IMAGE`.');\n\n                    return this.type === Resource.TYPE.IMAGE;\n                },\n            },\n            isAudio: {\n                get()\n                {\n                    warn('The isAudio property is deprecated, please use `resource.type === Resource.TYPE.AUDIO`.');\n\n                    return this.type === Resource.TYPE.AUDIO;\n                },\n            },\n            isVideo: {\n                get()\n                {\n                    warn('The isVideo property is deprecated, please use `resource.type === Resource.TYPE.VIDEO`.');\n\n                    return this.type === Resource.TYPE.VIDEO;\n                },\n            },\n        });\n\n        Object.defineProperties(Loader.prototype, {\n            before: {\n                get()\n                {\n                    warn('The before() method is deprecated, please use pre().');\n\n                    return this.pre;\n                },\n            },\n            after: {\n                get()\n                {\n                    warn('The after() method is deprecated, please use use().');\n\n                    return this.use;\n                },\n            },\n        });\n    }\n\n    if (interaction.interactiveTarget)\n    {\n        /**\n         * @name PIXI.interaction.interactiveTarget#defaultCursor\n         * @static\n         * @type {number}\n         * @see PIXI.interaction.interactiveTarget#cursor\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.interactiveTarget, 'defaultCursor', {\n            set(value)\n            {\n                warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n                this.cursor = value;\n            },\n            get()\n            {\n                warn('Property defaultCursor has been replaced with \\'cursor\\'. ');\n\n                return this.cursor;\n            },\n        });\n    }\n\n    if (interaction.InteractionManager)\n    {\n        /**\n         * @name PIXI.interaction.InteractionManager#defaultCursorStyle\n         * @static\n         * @type {string}\n         * @see PIXI.interaction.InteractionManager#cursorStyles\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.InteractionManager, 'defaultCursorStyle', {\n            set(value)\n            {\n                warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n                this.cursorStyles.default = value;\n            },\n            get()\n            {\n                warn('Property defaultCursorStyle has been replaced with \\'cursorStyles.default\\'. ');\n\n                return this.cursorStyles.default;\n            },\n        });\n\n        /**\n         * @name PIXI.interaction.InteractionManager#currentCursorStyle\n         * @static\n         * @type {string}\n         * @see PIXI.interaction.InteractionManager#cursorStyles\n         * @deprecated since 4.3.0\n         */\n        Object.defineProperty(interaction.InteractionManager, 'currentCursorStyle', {\n            set(value)\n            {\n                warn('Property currentCursorStyle has been removed.'\n                + 'See the currentCursorMode property, which works differently.');\n                this.currentCursorMode = value;\n            },\n            get()\n            {\n                warn('Property currentCursorStyle has been removed.'\n                + 'See the currentCursorMode property, which works differently.');\n\n                return this.currentCursorMode;\n            },\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}