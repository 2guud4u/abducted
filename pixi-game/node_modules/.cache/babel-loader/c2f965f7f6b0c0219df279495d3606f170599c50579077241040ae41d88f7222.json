{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Character from './Entities/character';\nimport * as PIXI from 'pixi.js';\nconst Game = _ref => {\n  _s();\n  let {\n    app\n  } = _ref;\n  const blocksRef = useRef([]);\n  useEffect(() => {\n    // Create the ground\n    const ground = new PIXI.Graphics();\n    ground.beginFill(0x008000); // green color\n    ground.drawRect(0, app.screen.height - 50, app.screen.width, 50); // draw a rectangle\n    ground.endFill();\n\n    // Add the ground to the stage\n    app.stage.addChild(ground);\n\n    // Create new blocks periodically and randomly\n    const createBlock = () => {\n      const block = new PIXI.Graphics();\n      block.beginFill(0x0000ff); // blue color\n      const size = Math.random() * 50 + 50; // random size between 50 and 100\n      block.drawRect(0, 0, size, size); // draw a square\n      block.endFill();\n      block.y = app.screen.height - 50 - size; // position the block on the ground\n      block.x = app.screen.width; // position the block at the right edge of the screen\n\n      // Add the block to the stage and the blocks array\n      app.stage.addChild(block);\n      blocksRef.current.push(block);\n\n      // Schedule the creation of the next block\n      setTimeout(createBlock, Math.random() * 2000 + 1000); // random interval between 1 and 3 seconds\n    };\n\n    createBlock();\n  }, [app]);\n  useEffect(() => {\n    // Continuously move the blocks to the left and destroy the blocks when they move off the screen\n    app.ticker.add(() => {\n      blocksRef.current.forEach((block, i) => {\n        block.x -= 2;\n        if (block.x + block.width < 0) {\n          app.stage.removeChild(block);\n          blocksRef.current.splice(i, 1);\n        }\n      });\n    });\n  }, [app]);\n\n  //   return <Character app={app} />;\n};\n_s(Game, \"/58N4kjSRW44he8JouKvdwzRKtQ=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useRef","Character","PIXI","Game","_ref","_s","app","blocksRef","ground","Graphics","beginFill","drawRect","screen","height","width","endFill","stage","addChild","createBlock","block","size","Math","random","y","x","current","push","setTimeout","ticker","add","forEach","i","removeChild","splice","_c","$RefreshReg$"],"sources":["/Users/jiahuajiang/Desktop/code/projects/abducted/pixi-game/src/Game.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Character from './Entities/character';\nimport * as PIXI from 'pixi.js';\n\nconst Game = ({ app }) => {\n  const blocksRef = useRef([]);\n\n  useEffect(() => {\n    // Create the ground\n    const ground = new PIXI.Graphics();\n    ground.beginFill(0x008000); // green color\n    ground.drawRect(0, app.screen.height - 50, app.screen.width, 50); // draw a rectangle\n    ground.endFill();\n\n    // Add the ground to the stage\n    app.stage.addChild(ground);\n\n    // Create new blocks periodically and randomly\n    const createBlock = () => {\n      const block = new PIXI.Graphics();\n      block.beginFill(0x0000ff); // blue color\n      const size = Math.random() * 50 + 50; // random size between 50 and 100\n      block.drawRect(0, 0, size, size); // draw a square\n      block.endFill();\n\n      block.y = app.screen.height - 50 - size; // position the block on the ground\n      block.x = app.screen.width; // position the block at the right edge of the screen\n\n      // Add the block to the stage and the blocks array\n      app.stage.addChild(block);\n      blocksRef.current.push(block);\n\n      // Schedule the creation of the next block\n      setTimeout(createBlock, Math.random() * 2000 + 1000); // random interval between 1 and 3 seconds\n    };\n\n    createBlock();\n  }, [app]);\n\n  useEffect(() => {\n    // Continuously move the blocks to the left and destroy the blocks when they move off the screen\n    app.ticker.add(() => {\n      blocksRef.current.forEach((block, i) => {\n        block.x -= 2;\n        if (block.x + block.width < 0) {\n          app.stage.removeChild(block);\n          blocksRef.current.splice(i, 1);\n        }\n      });\n    });\n  }, [app]);\n\n//   return <Character app={app} />;\n};\n\nexport default Game;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAO,KAAKC,IAAI,MAAM,SAAS;AAE/B,MAAMC,IAAI,GAAGC,IAAA,IAAa;EAAAC,EAAA;EAAA,IAAZ;IAAEC;EAAI,CAAC,GAAAF,IAAA;EACnB,MAAMG,SAAS,GAAGP,MAAM,CAAC,EAAE,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,MAAM,GAAG,IAAIN,IAAI,CAACO,QAAQ,CAAC,CAAC;IAClCD,MAAM,CAACE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5BF,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAEL,GAAG,CAACM,MAAM,CAACC,MAAM,GAAG,EAAE,EAAEP,GAAG,CAACM,MAAM,CAACE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAClEN,MAAM,CAACO,OAAO,CAAC,CAAC;;IAEhB;IACAT,GAAG,CAACU,KAAK,CAACC,QAAQ,CAACT,MAAM,CAAC;;IAE1B;IACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,KAAK,GAAG,IAAIjB,IAAI,CAACO,QAAQ,CAAC,CAAC;MACjCU,KAAK,CAACT,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC3B,MAAMU,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACtCH,KAAK,CAACR,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAES,IAAI,EAAEA,IAAI,CAAC,CAAC,CAAC;MAClCD,KAAK,CAACJ,OAAO,CAAC,CAAC;MAEfI,KAAK,CAACI,CAAC,GAAGjB,GAAG,CAACM,MAAM,CAACC,MAAM,GAAG,EAAE,GAAGO,IAAI,CAAC,CAAC;MACzCD,KAAK,CAACK,CAAC,GAAGlB,GAAG,CAACM,MAAM,CAACE,KAAK,CAAC,CAAC;;MAE5B;MACAR,GAAG,CAACU,KAAK,CAACC,QAAQ,CAACE,KAAK,CAAC;MACzBZ,SAAS,CAACkB,OAAO,CAACC,IAAI,CAACP,KAAK,CAAC;;MAE7B;MACAQ,UAAU,CAACT,WAAW,EAAEG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC;;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACZ,GAAG,CAAC,CAAC;EAETP,SAAS,CAAC,MAAM;IACd;IACAO,GAAG,CAACsB,MAAM,CAACC,GAAG,CAAC,MAAM;MACnBtB,SAAS,CAACkB,OAAO,CAACK,OAAO,CAAC,CAACX,KAAK,EAAEY,CAAC,KAAK;QACtCZ,KAAK,CAACK,CAAC,IAAI,CAAC;QACZ,IAAIL,KAAK,CAACK,CAAC,GAAGL,KAAK,CAACL,KAAK,GAAG,CAAC,EAAE;UAC7BR,GAAG,CAACU,KAAK,CAACgB,WAAW,CAACb,KAAK,CAAC;UAC5BZ,SAAS,CAACkB,OAAO,CAACQ,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;QAChC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACzB,GAAG,CAAC,CAAC;;EAEX;AACA,CAAC;AAACD,EAAA,CAjDIF,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAmDV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}