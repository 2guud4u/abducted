{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.loader = exports.prepare = exports.particles = exports.mesh = exports.loaders = exports.interaction = exports.filters = exports.extras = exports.extract = exports.accessibility = undefined;\nvar _polyfill = require('./polyfill');\nObject.keys(_polyfill).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _polyfill[key];\n    }\n  });\n});\nvar _core = require('./core');\nObject.keys(_core).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _core[key];\n    }\n  });\n});\nvar _deprecation = require('./deprecation');\nvar _deprecation2 = _interopRequireDefault(_deprecation);\nvar _accessibility = require('./accessibility');\nvar accessibility = _interopRequireWildcard(_accessibility);\nvar _extract = require('./extract');\nvar extract = _interopRequireWildcard(_extract);\nvar _extras = require('./extras');\nvar extras = _interopRequireWildcard(_extras);\nvar _filters = require('./filters');\nvar filters = _interopRequireWildcard(_filters);\nvar _interaction = require('./interaction');\nvar interaction = _interopRequireWildcard(_interaction);\nvar _loaders = require('./loaders');\nvar loaders = _interopRequireWildcard(_loaders);\nvar _mesh = require('./mesh');\nvar mesh = _interopRequireWildcard(_mesh);\nvar _particles = require('./particles');\nvar particles = _interopRequireWildcard(_particles);\nvar _prepare = require('./prepare');\nvar prepare = _interopRequireWildcard(_prepare);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// export core\n_core.utils.mixins.performMixins();\n\n/**\n * Alias for {@link PIXI.loaders.shared}.\n * @name loader\n * @memberof PIXI\n * @type {PIXI.loader.Loader}\n */\n\n// handle mixins now, after all code has been added, including deprecation\n\n// export libs\n// import polyfills. Done as an export to make sure polyfills are imported first\nvar loader = loaders.shared || null;\nexports.accessibility = accessibility;\nexports.extract = extract;\nexports.extras = extras;\nexports.filters = filters;\nexports.interaction = interaction;\nexports.loaders = loaders;\nexports.mesh = mesh;\nexports.particles = particles;\nexports.prepare = prepare;\nexports.loader = loader;\n\n// Apply the deprecations\n\nif (typeof _deprecation2.default === 'function') {\n  (0, _deprecation2.default)(exports);\n}\n\n// Always export PixiJS globally.\nglobal.PIXI = exports; // eslint-disable-line","map":{"version":3,"names":["Object","keys","_polyfill","forEach","key","defineProperty","exports","enumerable","get","_core","_deprecation","require","_accessibility","accessibility","_extract","extract","_extras","extras","_filters","filters","_interaction","interaction","_loaders","loaders","_mesh","mesh","_particles","particles","_prepare","prepare","utils","mixins","performMixins","loader","shared","_deprecation2","default","global","PIXI"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/index.js"],"sourcesContent":["// import polyfills. Done as an export to make sure polyfills are imported first\nexport * from './polyfill';\n\n// export core\nexport * from './core';\n\n// export libs\nimport deprecation from './deprecation';\nimport * as accessibility from './accessibility';\nimport * as extract from './extract';\nimport * as extras from './extras';\nimport * as filters from './filters';\nimport * as interaction from './interaction';\nimport * as loaders from './loaders';\nimport * as mesh from './mesh';\nimport * as particles from './particles';\nimport * as prepare from './prepare';\n\n// handle mixins now, after all code has been added, including deprecation\nimport { utils } from './core';\nutils.mixins.performMixins();\n\n/**\n * Alias for {@link PIXI.loaders.shared}.\n * @name loader\n * @memberof PIXI\n * @type {PIXI.loader.Loader}\n */\nconst loader = loaders.shared || null;\n\nexport {\n    accessibility,\n    extract,\n    extras,\n    filters,\n    interaction,\n    loaders,\n    mesh,\n    particles,\n    prepare,\n    loader,\n};\n\n// Apply the deprecations\nif (typeof deprecation === 'function')\n{\n    deprecation(exports);\n}\n\n// Always export PixiJS globally.\nglobal.PIXI = exports; // eslint-disable-line\n\n"],"mappings":";;;;;AACAA,MAAA,CAAAC,IAAA,CAAAC,SAAA,EAAAC,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAAJ,MAAA,CAAAK,cAAA,CAAAC,OAAA,EAAAF,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,IAAA;MAAA,OAAAN,SAAA,CAAAE,GAAA;IAAA;EAAA;AAAA;;AAGAJ,MAAA,CAAAC,IAAA,CAAAQ,KAAA,EAAAN,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAAJ,MAAA,CAAAK,cAAA,CAAAC,OAAA,EAAAF,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,IAAA;MAAA,OAAAC,KAAA,CAAAL,GAAA;IAAA;EAAA;AAAA;AAGA,IAAAM,YAAA,GAAAC,OAAA;;AACA,IAAAC,cAAA,GAAAD,OAAA;IAAYE,a;AACZ,IAAAC,QAAA,GAAAH,OAAA;IAAYI,O;AACZ,IAAAC,OAAA,GAAAL,OAAA;IAAYM,M;AACZ,IAAAC,QAAA,GAAAP,OAAA;IAAYQ,O;AACZ,IAAAC,YAAA,GAAAT,OAAA;IAAYU,W;AACZ,IAAAC,QAAA,GAAAX,OAAA;IAAYY,O;AACZ,IAAAC,KAAA,GAAAb,OAAA;IAAYc,I;AACZ,IAAAC,UAAA,GAAAf,OAAA;IAAYgB,S;AACZ,IAAAC,QAAA,GAAAjB,OAAA;IAAYkB,O;;;;;;;;;;;;;;;;;;;;;AAbZ;AAiBApB,KAAA,CAAAqB,KAAA,CAAMC,MAAN,CAAaC,aAAb;;AAEA;;;;;;;AAJA;;AAZA;AANA;AA4BA,IAAMC,MAAA,GAASV,OAAA,CAAQW,MAAR,IAAkB,IAAjC;QAGIrB,a,GAAAA,a;QACAE,O,GAAAA,O;QACAE,M,GAAAA,M;QACAE,O,GAAAA,O;QACAE,W,GAAAA,W;QACAE,O,GAAAA,O;QACAE,I,GAAAA,I;QACAE,S,GAAAA,S;QACAE,O,GAAAA,O;QACAI,M,GAAAA,M;;AAGJ;;AACA,IAAI,OAAAE,aAAA,CAAAC,OAAA,KAAuB,UAA3B,EACA;EACI,IAAAD,aAAA,CAAAC,OAAA,EAAY9B,OAAZ;AACH;;AAED;AACA+B,MAAA,CAAOC,IAAP,GAAchC,OAAd,C,CAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}