{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar checkDataUrl = require('../../utils/checkDataUrl.js');\nvar checkExtension = require('../../utils/checkExtension.js');\nvar LoaderParser = require('./LoaderParser.js');\nconst validJSONExtension = \".json\";\nconst validJSONMIME = \"application/json\";\nconst loadJson = {\n  extension: {\n    type: core.ExtensionType.LoadParser,\n    priority: LoaderParser.LoaderParserPriority.Low\n  },\n  name: \"loadJson\",\n  test(url) {\n    return checkDataUrl.checkDataUrl(url, validJSONMIME) || checkExtension.checkExtension(url, validJSONExtension);\n  },\n  async load(url) {\n    const response = await core.settings.ADAPTER.fetch(url);\n    const json = await response.json();\n    return json;\n  }\n};\ncore.extensions.add(loadJson);\nexports.loadJson = loadJson;","map":{"version":3,"names":["validJSONExtension","validJSONMIME","loadJson","extension","type","core","ExtensionType","LoadParser","priority","LoaderParser","LoaderParserPriority","Low","name","test","url","checkDataUrl","checkExtension","load","response","settings","ADAPTER","fetch","json","extensions","add"],"sources":["/Users/jiahuajiang/Desktop/code/projects/abducted/pixi-game/node_modules/@pixi/assets/src/loader/parsers/loadJson.ts"],"sourcesContent":["import { extensions, ExtensionType, settings } from '@pixi/core';\nimport { checkDataUrl } from '../../utils/checkDataUrl';\nimport { checkExtension } from '../../utils/checkExtension';\nimport { LoaderParserPriority } from './LoaderParser';\n\nimport type { LoaderParser } from './LoaderParser';\n\nconst validJSONExtension = '.json';\nconst validJSONMIME = 'application/json';\n\n/** simple loader plugin for loading json data */\nexport const loadJson = {\n    extension: {\n        type: ExtensionType.LoadParser,\n        priority: LoaderParserPriority.Low,\n    },\n\n    name: 'loadJson',\n\n    test(url: string): boolean\n    {\n        return checkDataUrl(url, validJSONMIME) || checkExtension(url, validJSONExtension);\n    },\n\n    async load<T>(url: string): Promise<T>\n    {\n        const response = await settings.ADAPTER.fetch(url);\n\n        const json = await response.json();\n\n        return json as T;\n    },\n} as LoaderParser;\n\nextensions.add(loadJson);\n"],"mappings":";;;;;;;;;AAOA,MAAMA,kBAAqB;AAC3B,MAAMC,aAAgB;AAGf,MAAMC,QAAW;EACpBC,SAAW;IACPC,IAAA,EAAMC,IAAA,CAAAC,aAAc,CAAAC,UAAA;IACpBC,QAAA,EAAUC,YAAA,CAAAC,oBAAqB,CAAAC;EAAA,CACnC;EAEAC,IAAM;EAENC,KAAKC,GACL;IACI,OAAOC,YAAA,CAAAA,YAAA,CAAaD,GAAK,EAAAb,aAAa,CAAK,IAAAe,cAAA,CAAAA,cAAA,CAAeF,GAAA,EAAKd,kBAAkB;EAAA,CACrF;EAEA,MAAMiB,KAAQH,GACd;IACI,MAAMI,QAAW,SAAMb,IAAA,CAAAc,QAAS,CAAAC,OAAA,CAAQC,KAAA,CAAMP,GAAG;IAE3C,MAAAQ,IAAA,GAAO,MAAMJ,QAAA,CAASI,IAAK;IAE1B,OAAAA,IAAA;EAAA;AAEf;AAEAjB,IAAA,CAAAkB,UAAA,CAAWC,GAAA,CAAItB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}