{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _Plane2 = require('./Plane');\nvar _Plane3 = _interopRequireDefault(_Plane2);\nvar _CanvasTinter = require('../core/sprites/canvas/CanvasTinter');\nvar _CanvasTinter2 = _interopRequireDefault(_CanvasTinter);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar DEFAULT_BORDER_SIZE = 10;\n\n/**\n * The NineSlicePlane allows you to stretch a texture using 9-slice scaling. The corners will remain unscaled (useful\n * for buttons with rounded corners for example) and the other areas will be scaled horizontally and or vertically\n *\n *```js\n * let Plane9 = new PIXI.NineSlicePlane(PIXI.Texture.fromImage('BoxWithRoundedCorners.png'), 15, 15, 15, 15);\n *  ```\n * <pre>\n *      A                          B\n *    +---+----------------------+---+\n *  C | 1 |          2           | 3 |\n *    +---+----------------------+---+\n *    |   |                      |   |\n *    | 4 |          5           | 6 |\n *    |   |                      |   |\n *    +---+----------------------+---+\n *  D | 7 |          8           | 9 |\n *    +---+----------------------+---+\n\n *  When changing this objects width and/or height:\n *     areas 1 3 7 and 9 will remain unscaled.\n *     areas 2 and 8 will be stretched horizontally\n *     areas 4 and 6 will be stretched vertically\n *     area 5 will be stretched both horizontally and vertically\n * </pre>\n *\n * @class\n * @extends PIXI.mesh.Plane\n * @memberof PIXI.mesh\n *\n */\n\nvar NineSlicePlane = function (_Plane) {\n  _inherits(NineSlicePlane, _Plane);\n\n  /**\n   * @param {PIXI.Texture} texture - The texture to use on the NineSlicePlane.\n   * @param {int} [leftWidth=10] size of the left vertical bar (A)\n   * @param {int} [topHeight=10] size of the top horizontal bar (C)\n   * @param {int} [rightWidth=10] size of the right vertical bar (B)\n   * @param {int} [bottomHeight=10] size of the bottom horizontal bar (D)\n   */\n  function NineSlicePlane(texture, leftWidth, topHeight, rightWidth, bottomHeight) {\n    _classCallCheck(this, NineSlicePlane);\n    var _this = _possibleConstructorReturn(this, _Plane.call(this, texture, 4, 4));\n    _this._origWidth = texture.orig.width;\n    _this._origHeight = texture.orig.height;\n\n    /**\n     * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     *\n     * @member {number}\n     * @memberof PIXI.NineSlicePlane#\n     * @override\n     */\n    _this._width = _this._origWidth;\n\n    /**\n     * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     *\n     * @member {number}\n     * @memberof PIXI.NineSlicePlane#\n     * @override\n     */\n    _this._height = _this._origHeight;\n\n    /**\n     * The width of the left column (a)\n     *\n     * @member {number}\n     * @memberof PIXI.NineSlicePlane#\n     * @override\n     */\n    _this._leftWidth = typeof leftWidth !== 'undefined' ? leftWidth : DEFAULT_BORDER_SIZE;\n\n    /**\n     * The width of the right column (b)\n     *\n     * @member {number}\n     * @memberof PIXI.NineSlicePlane#\n     * @override\n     */\n    _this._rightWidth = typeof rightWidth !== 'undefined' ? rightWidth : DEFAULT_BORDER_SIZE;\n\n    /**\n     * The height of the top row (c)\n     *\n     * @member {number}\n     * @memberof PIXI.NineSlicePlane#\n     * @override\n     */\n    _this._topHeight = typeof topHeight !== 'undefined' ? topHeight : DEFAULT_BORDER_SIZE;\n\n    /**\n     * The height of the bottom row (d)\n     *\n     * @member {number}\n     * @memberof PIXI.NineSlicePlane#\n     * @override\n     */\n    _this._bottomHeight = typeof bottomHeight !== 'undefined' ? bottomHeight : DEFAULT_BORDER_SIZE;\n\n    /**\n     * Cached tint value so we can tell when the tint is changed.\n     *\n     * @member {number}\n     * @protected\n     */\n    _this._cachedTint = 0xFFFFFF;\n\n    /**\n     * Cached tinted texture.\n     *\n     * @member {HTMLCanvasElement}\n     * @protected\n     */\n    _this._tintedTexture = null;\n\n    /**\n     * Temporary storage for canvas source coords\n     *\n     * @member {number[]}\n     * @private\n     */\n    _this._canvasUvs = null;\n    _this.refresh(true);\n    return _this;\n  }\n\n  /**\n   * Updates the horizontal vertices.\n   *\n   */\n\n  NineSlicePlane.prototype.updateHorizontalVertices = function updateHorizontalVertices() {\n    var vertices = this.vertices;\n    var h = this._topHeight + this._bottomHeight;\n    var scale = this._height > h ? 1.0 : this._height / h;\n    vertices[9] = vertices[11] = vertices[13] = vertices[15] = this._topHeight * scale;\n    vertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - this._bottomHeight * scale;\n    vertices[25] = vertices[27] = vertices[29] = vertices[31] = this._height;\n  };\n\n  /**\n   * Updates the vertical vertices.\n   *\n   */\n\n  NineSlicePlane.prototype.updateVerticalVertices = function updateVerticalVertices() {\n    var vertices = this.vertices;\n    var w = this._leftWidth + this._rightWidth;\n    var scale = this._width > w ? 1.0 : this._width / w;\n    vertices[2] = vertices[10] = vertices[18] = vertices[26] = this._leftWidth * scale;\n    vertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - this._rightWidth * scale;\n    vertices[6] = vertices[14] = vertices[22] = vertices[30] = this._width;\n  };\n\n  /**\n   * Renders the object using the Canvas renderer\n   *\n   * @private\n   * @param {PIXI.CanvasRenderer} renderer - The canvas renderer to render with.\n   */\n\n  NineSlicePlane.prototype._renderCanvas = function _renderCanvas(renderer) {\n    var context = renderer.context;\n    var transform = this.worldTransform;\n    var res = renderer.resolution;\n    var isTinted = this.tint !== 0xFFFFFF;\n    var texture = this._texture;\n\n    // Work out tinting\n    if (isTinted) {\n      if (this._cachedTint !== this.tint) {\n        // Tint has changed, need to update the tinted texture and use that instead\n\n        this._cachedTint = this.tint;\n        this._tintedTexture = _CanvasTinter2.default.getTintedTexture(this, this.tint);\n      }\n    }\n    var textureSource = !isTinted ? texture.baseTexture.source : this._tintedTexture;\n    if (!this._canvasUvs) {\n      this._canvasUvs = [0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    var vertices = this.vertices;\n    var uvs = this._canvasUvs;\n    var u0 = isTinted ? 0 : texture.frame.x;\n    var v0 = isTinted ? 0 : texture.frame.y;\n    var u1 = u0 + texture.frame.width;\n    var v1 = v0 + texture.frame.height;\n    uvs[0] = u0;\n    uvs[1] = u0 + this._leftWidth;\n    uvs[2] = u1 - this._rightWidth;\n    uvs[3] = u1;\n    uvs[4] = v0;\n    uvs[5] = v0 + this._topHeight;\n    uvs[6] = v1 - this._bottomHeight;\n    uvs[7] = v1;\n    for (var i = 0; i < 8; i++) {\n      uvs[i] *= texture.baseTexture.resolution;\n    }\n    context.globalAlpha = this.worldAlpha;\n    renderer.setBlendMode(this.blendMode);\n    if (renderer.roundPixels) {\n      context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res | 0, transform.ty * res | 0);\n    } else {\n      context.setTransform(transform.a * res, transform.b * res, transform.c * res, transform.d * res, transform.tx * res, transform.ty * res);\n    }\n    for (var row = 0; row < 3; row++) {\n      for (var col = 0; col < 3; col++) {\n        var ind = col * 2 + row * 8;\n        var sw = Math.max(1, uvs[col + 1] - uvs[col]);\n        var sh = Math.max(1, uvs[row + 5] - uvs[row + 4]);\n        var dw = Math.max(1, vertices[ind + 10] - vertices[ind]);\n        var dh = Math.max(1, vertices[ind + 11] - vertices[ind + 1]);\n        context.drawImage(textureSource, uvs[col], uvs[row + 4], sw, sh, vertices[ind], vertices[ind + 1], dw, dh);\n      }\n    }\n  };\n\n  /**\n   * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n   *\n   * @member {number}\n   */\n\n  /**\n   * Refreshes NineSlicePlane coords. All of them.\n   */\n  NineSlicePlane.prototype._refresh = function _refresh() {\n    _Plane.prototype._refresh.call(this);\n    var uvs = this.uvs;\n    var texture = this._texture;\n    this._origWidth = texture.orig.width;\n    this._origHeight = texture.orig.height;\n    var _uvw = 1.0 / this._origWidth;\n    var _uvh = 1.0 / this._origHeight;\n    uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n    uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n    uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n    uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n    uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n    uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - _uvw * this._rightWidth;\n    uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n    uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - _uvh * this._bottomHeight;\n    this.updateHorizontalVertices();\n    this.updateVerticalVertices();\n    this.dirty++;\n    this.multiplyUvs();\n  };\n  _createClass(NineSlicePlane, [{\n    key: 'width',\n    get: function get() {\n      return this._width;\n    },\n    set: function set(value)\n    // eslint-disable-line require-jsdoc\n    {\n      this._width = value;\n      this._refresh();\n    }\n\n    /**\n     * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     *\n     * @member {number}\n     */\n  }, {\n    key: 'height',\n    get: function get() {\n      return this._height;\n    },\n    set: function set(value)\n    // eslint-disable-line require-jsdoc\n    {\n      this._height = value;\n      this._refresh();\n    }\n\n    /**\n     * The width of the left column\n     *\n     * @member {number}\n     */\n  }, {\n    key: 'leftWidth',\n    get: function get() {\n      return this._leftWidth;\n    },\n    set: function set(value)\n    // eslint-disable-line require-jsdoc\n    {\n      this._leftWidth = value;\n      this._refresh();\n    }\n\n    /**\n     * The width of the right column\n     *\n     * @member {number}\n     */\n  }, {\n    key: 'rightWidth',\n    get: function get() {\n      return this._rightWidth;\n    },\n    set: function set(value)\n    // eslint-disable-line require-jsdoc\n    {\n      this._rightWidth = value;\n      this._refresh();\n    }\n\n    /**\n     * The height of the top row\n     *\n     * @member {number}\n     */\n  }, {\n    key: 'topHeight',\n    get: function get() {\n      return this._topHeight;\n    },\n    set: function set(value)\n    // eslint-disable-line require-jsdoc\n    {\n      this._topHeight = value;\n      this._refresh();\n    }\n\n    /**\n     * The height of the bottom row\n     *\n     * @member {number}\n     */\n  }, {\n    key: 'bottomHeight',\n    get: function get() {\n      return this._bottomHeight;\n    },\n    set: function set(value)\n    // eslint-disable-line require-jsdoc\n    {\n      this._bottomHeight = value;\n      this._refresh();\n    }\n  }]);\n  return NineSlicePlane;\n}(_Plane3.default);\nexports.default = NineSlicePlane;","map":{"version":3,"names":["_Plane2","require","_CanvasTinter","DEFAULT_BORDER_SIZE","NineSlicePlane","texture","leftWidth","topHeight","rightWidth","bottomHeight","_classCallCheck","_this","_possibleConstructorReturn","_Plane","call","_origWidth","orig","width","_origHeight","height","_width","_height","_leftWidth","_rightWidth","_topHeight","_bottomHeight","_cachedTint","_tintedTexture","_canvasUvs","refresh","updateHorizontalVertices","vertices","h","scale","updateVerticalVertices","w","_renderCanvas","renderer","context","transform","worldTransform","res","resolution","isTinted","tint","_texture","_CanvasTinter2","default","getTintedTexture","textureSource","baseTexture","source","uvs","u0","frame","x","v0","y","u1","v1","i","globalAlpha","worldAlpha","setBlendMode","blendMode","roundPixels","setTransform","a","b","c","d","tx","ty","row","col","ind","sw","Math","max","sh","dw","dh","drawImage","_refresh","prototype","_uvw","_uvh","dirty","multiplyUvs","value"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/mesh/NineSlicePlane.js"],"sourcesContent":["import Plane from './Plane';\nimport CanvasTinter from '../core/sprites/canvas/CanvasTinter';\n\nconst DEFAULT_BORDER_SIZE = 10;\n\n/**\n * The NineSlicePlane allows you to stretch a texture using 9-slice scaling. The corners will remain unscaled (useful\n * for buttons with rounded corners for example) and the other areas will be scaled horizontally and or vertically\n *\n *```js\n * let Plane9 = new PIXI.NineSlicePlane(PIXI.Texture.fromImage('BoxWithRoundedCorners.png'), 15, 15, 15, 15);\n *  ```\n * <pre>\n *      A                          B\n *    +---+----------------------+---+\n *  C | 1 |          2           | 3 |\n *    +---+----------------------+---+\n *    |   |                      |   |\n *    | 4 |          5           | 6 |\n *    |   |                      |   |\n *    +---+----------------------+---+\n *  D | 7 |          8           | 9 |\n *    +---+----------------------+---+\n\n *  When changing this objects width and/or height:\n *     areas 1 3 7 and 9 will remain unscaled.\n *     areas 2 and 8 will be stretched horizontally\n *     areas 4 and 6 will be stretched vertically\n *     area 5 will be stretched both horizontally and vertically\n * </pre>\n *\n * @class\n * @extends PIXI.mesh.Plane\n * @memberof PIXI.mesh\n *\n */\nexport default class NineSlicePlane extends Plane\n{\n    /**\n     * @param {PIXI.Texture} texture - The texture to use on the NineSlicePlane.\n     * @param {int} [leftWidth=10] size of the left vertical bar (A)\n     * @param {int} [topHeight=10] size of the top horizontal bar (C)\n     * @param {int} [rightWidth=10] size of the right vertical bar (B)\n     * @param {int} [bottomHeight=10] size of the bottom horizontal bar (D)\n     */\n    constructor(texture, leftWidth, topHeight, rightWidth, bottomHeight)\n    {\n        super(texture, 4, 4);\n\n        this._origWidth = texture.orig.width;\n        this._origHeight = texture.orig.height;\n\n        /**\n         * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        this._width = this._origWidth;\n\n        /**\n         * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        this._height = this._origHeight;\n\n        /**\n         * The width of the left column (a)\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        this._leftWidth = typeof leftWidth !== 'undefined' ? leftWidth : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The width of the right column (b)\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        this._rightWidth = typeof rightWidth !== 'undefined' ? rightWidth : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The height of the top row (c)\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        this._topHeight = typeof topHeight !== 'undefined' ? topHeight : DEFAULT_BORDER_SIZE;\n\n        /**\n         * The height of the bottom row (d)\n         *\n         * @member {number}\n         * @memberof PIXI.NineSlicePlane#\n         * @override\n         */\n        this._bottomHeight = typeof bottomHeight !== 'undefined' ? bottomHeight : DEFAULT_BORDER_SIZE;\n\n        /**\n         * Cached tint value so we can tell when the tint is changed.\n         *\n         * @member {number}\n         * @protected\n         */\n        this._cachedTint = 0xFFFFFF;\n\n        /**\n         * Cached tinted texture.\n         *\n         * @member {HTMLCanvasElement}\n         * @protected\n         */\n        this._tintedTexture = null;\n\n        /**\n         * Temporary storage for canvas source coords\n         *\n         * @member {number[]}\n         * @private\n         */\n        this._canvasUvs = null;\n\n        this.refresh(true);\n    }\n\n    /**\n     * Updates the horizontal vertices.\n     *\n     */\n    updateHorizontalVertices()\n    {\n        const vertices = this.vertices;\n\n        const h = this._topHeight + this._bottomHeight;\n        const scale = this._height > h ? 1.0 : this._height / h;\n\n        vertices[9] = vertices[11] = vertices[13] = vertices[15] = this._topHeight * scale;\n        vertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - (this._bottomHeight * scale);\n        vertices[25] = vertices[27] = vertices[29] = vertices[31] = this._height;\n    }\n\n    /**\n     * Updates the vertical vertices.\n     *\n     */\n    updateVerticalVertices()\n    {\n        const vertices = this.vertices;\n\n        const w = this._leftWidth + this._rightWidth;\n        const scale = this._width > w ? 1.0 : this._width / w;\n\n        vertices[2] = vertices[10] = vertices[18] = vertices[26] = this._leftWidth * scale;\n        vertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - (this._rightWidth * scale);\n        vertices[6] = vertices[14] = vertices[22] = vertices[30] = this._width;\n    }\n\n    /**\n     * Renders the object using the Canvas renderer\n     *\n     * @private\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer to render with.\n     */\n    _renderCanvas(renderer)\n    {\n        const context = renderer.context;\n        const transform = this.worldTransform;\n        const res = renderer.resolution;\n        const isTinted = this.tint !== 0xFFFFFF;\n        const texture = this._texture;\n\n        // Work out tinting\n        if (isTinted)\n        {\n            if (this._cachedTint !== this.tint)\n            {\n                // Tint has changed, need to update the tinted texture and use that instead\n\n                this._cachedTint = this.tint;\n\n                this._tintedTexture = CanvasTinter.getTintedTexture(this, this.tint);\n            }\n        }\n\n        const textureSource = !isTinted ? texture.baseTexture.source : this._tintedTexture;\n\n        if (!this._canvasUvs)\n        {\n            this._canvasUvs = [0, 0, 0, 0, 0, 0, 0, 0];\n        }\n\n        const vertices = this.vertices;\n        const uvs = this._canvasUvs;\n        const u0 = isTinted ? 0 : texture.frame.x;\n        const v0 = isTinted ? 0 : texture.frame.y;\n        const u1 = u0 + texture.frame.width;\n        const v1 = v0 + texture.frame.height;\n\n        uvs[0] = u0;\n        uvs[1] = u0 + this._leftWidth;\n        uvs[2] = u1 - this._rightWidth;\n        uvs[3] = u1;\n        uvs[4] = v0;\n        uvs[5] = v0 + this._topHeight;\n        uvs[6] = v1 - this._bottomHeight;\n        uvs[7] = v1;\n\n        for (let i = 0; i < 8; i++)\n        {\n            uvs[i] *= texture.baseTexture.resolution;\n        }\n\n        context.globalAlpha = this.worldAlpha;\n        renderer.setBlendMode(this.blendMode);\n\n        if (renderer.roundPixels)\n        {\n            context.setTransform(\n                transform.a * res,\n                transform.b * res,\n                transform.c * res,\n                transform.d * res,\n                (transform.tx * res) | 0,\n                (transform.ty * res) | 0\n            );\n        }\n        else\n        {\n            context.setTransform(\n                transform.a * res,\n                transform.b * res,\n                transform.c * res,\n                transform.d * res,\n                transform.tx * res,\n                transform.ty * res\n            );\n        }\n\n        for (let row = 0; row < 3; row++)\n        {\n            for (let col = 0; col < 3; col++)\n            {\n                const ind = (col * 2) + (row * 8);\n                const sw = Math.max(1, uvs[col + 1] - uvs[col]);\n                const sh = Math.max(1, uvs[row + 5] - uvs[row + 4]);\n                const dw = Math.max(1, vertices[ind + 10] - vertices[ind]);\n                const dh = Math.max(1, vertices[ind + 11] - vertices[ind + 1]);\n\n                context.drawImage(textureSource, uvs[col], uvs[row + 4], sw, sh,\n                    vertices[ind], vertices[ind + 1], dw, dh);\n            }\n        }\n    }\n\n    /**\n     * The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     *\n     * @member {number}\n     */\n    get width()\n    {\n        return this._width;\n    }\n\n    set width(value) // eslint-disable-line require-jsdoc\n    {\n        this._width = value;\n        this._refresh();\n    }\n\n    /**\n     * The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane\n     *\n     * @member {number}\n     */\n    get height()\n    {\n        return this._height;\n    }\n\n    set height(value) // eslint-disable-line require-jsdoc\n    {\n        this._height = value;\n        this._refresh();\n    }\n\n    /**\n     * The width of the left column\n     *\n     * @member {number}\n     */\n    get leftWidth()\n    {\n        return this._leftWidth;\n    }\n\n    set leftWidth(value) // eslint-disable-line require-jsdoc\n    {\n        this._leftWidth = value;\n        this._refresh();\n    }\n\n    /**\n     * The width of the right column\n     *\n     * @member {number}\n     */\n    get rightWidth()\n    {\n        return this._rightWidth;\n    }\n\n    set rightWidth(value) // eslint-disable-line require-jsdoc\n    {\n        this._rightWidth = value;\n        this._refresh();\n    }\n\n    /**\n     * The height of the top row\n     *\n     * @member {number}\n     */\n    get topHeight()\n    {\n        return this._topHeight;\n    }\n\n    set topHeight(value) // eslint-disable-line require-jsdoc\n    {\n        this._topHeight = value;\n        this._refresh();\n    }\n\n    /**\n     * The height of the bottom row\n     *\n     * @member {number}\n     */\n    get bottomHeight()\n    {\n        return this._bottomHeight;\n    }\n\n    set bottomHeight(value) // eslint-disable-line require-jsdoc\n    {\n        this._bottomHeight = value;\n        this._refresh();\n    }\n\n    /**\n     * Refreshes NineSlicePlane coords. All of them.\n     */\n    _refresh()\n    {\n        super._refresh();\n\n        const uvs = this.uvs;\n        const texture = this._texture;\n\n        this._origWidth = texture.orig.width;\n        this._origHeight = texture.orig.height;\n\n        const _uvw = 1.0 / this._origWidth;\n        const _uvh = 1.0 / this._origHeight;\n\n        uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n        uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n        uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n        uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n\n        uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n        uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - (_uvw * this._rightWidth);\n        uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n        uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - (_uvh * this._bottomHeight);\n\n        this.updateHorizontalVertices();\n        this.updateVerticalVertices();\n\n        this.dirty++;\n\n        this.multiplyUvs();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}