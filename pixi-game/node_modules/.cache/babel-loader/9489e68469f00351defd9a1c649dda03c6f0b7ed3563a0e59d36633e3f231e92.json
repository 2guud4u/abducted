{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\n * @class\n * @memberof PIXI\n */\nvar WebGLManager = function () {\n  /**\n   * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n   */\n  function WebGLManager(renderer) {\n    _classCallCheck(this, WebGLManager);\n\n    /**\n     * The renderer this manager works for.\n     *\n     * @member {PIXI.WebGLRenderer}\n     */\n    this.renderer = renderer;\n    this.renderer.on('context', this.onContextChange, this);\n  }\n\n  /**\n   * Generic method called when there is a WebGL context change.\n   *\n   */\n\n  WebGLManager.prototype.onContextChange = function onContextChange() {}\n  // do some codes init!\n\n  /**\n   * Generic destroy methods to be overridden by the subclass\n   *\n   */;\n\n  WebGLManager.prototype.destroy = function destroy() {\n    this.renderer.off('context', this.onContextChange, this);\n    this.renderer = null;\n  };\n  return WebGLManager;\n}();\nexports.default = WebGLManager;","map":{"version":3,"names":["WebGLManager","renderer","_classCallCheck","on","onContextChange","destroy","off"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/renderers/webgl/managers/WebGLManager.js"],"sourcesContent":["/**\n * @class\n * @memberof PIXI\n */\nexport default class WebGLManager\n{\n    /**\n     * @param {PIXI.WebGLRenderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer)\n    {\n        /**\n         * The renderer this manager works for.\n         *\n         * @member {PIXI.WebGLRenderer}\n         */\n        this.renderer = renderer;\n\n        this.renderer.on('context', this.onContextChange, this);\n    }\n\n    /**\n     * Generic method called when there is a WebGL context change.\n     *\n     */\n    onContextChange()\n    {\n        // do some codes init!\n    }\n\n    /**\n     * Generic destroy methods to be overridden by the subclass\n     *\n     */\n    destroy()\n    {\n        this.renderer.off('context', this.onContextChange, this);\n\n        this.renderer = null;\n    }\n}\n"],"mappings":";;;;;;;;;AAAA;;;;IAIqBA,Y;EAEjB;;;EAGA,SAAAA,aAAYC,QAAZ,EACA;IAAAC,eAAA,OAAAF,YAAA;;IACI;;;;;IAKA,KAAKC,QAAL,GAAgBA,QAAhB;IAEA,KAAKA,QAAL,CAAcE,EAAd,CAAiB,SAAjB,EAA4B,KAAKC,eAAjC,EAAkD,IAAlD;EACH;;EAED;;;;;yBAIAA,e,8BACA,CAEC;EADG;;EAGJ;;;KAAA;;yBAIAC,O,sBACA;IACI,KAAKJ,QAAL,CAAcK,GAAd,CAAkB,SAAlB,EAA6B,KAAKF,eAAlC,EAAmD,IAAnD;IAEA,KAAKH,QAAL,GAAgB,IAAhB;EACH,C;;;kBAnCgBD,Y"},"metadata":{},"sourceType":"script","externalDependencies":[]}