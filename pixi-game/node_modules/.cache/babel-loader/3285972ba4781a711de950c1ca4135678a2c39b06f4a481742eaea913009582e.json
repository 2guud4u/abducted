{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = mapWebGLBlendModesToPixi;\nvar _const = require('../../../const');\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nfunction mapWebGLBlendModesToPixi(gl) {\n  var array = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  // TODO - premultiply alpha would be different.\n  // add a boolean for that!\n  array[_const.BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.ADD] = [gl.ONE, gl.ONE];\n  array[_const.BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n  // not-premultiplied blend modes\n  array[_const.BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  array[_const.BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n  array[_const.BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n  return array;\n}","map":{"version":3,"names":["mapWebGLBlendModesToPixi","_const","require","gl","array","arguments","length","undefined","BLEND_MODES","NORMAL","ONE","ONE_MINUS_SRC_ALPHA","ADD","MULTIPLY","DST_COLOR","SCREEN","ONE_MINUS_SRC_COLOR","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATION","COLOR","LUMINOSITY","NORMAL_NPM","SRC_ALPHA","ADD_NPM","SCREEN_NPM"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/renderers/webgl/utils/mapWebGLBlendModesToPixi.js"],"sourcesContent":["import { BLEND_MODES } from '../../../const';\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nexport default function mapWebGLBlendModesToPixi(gl, array = [])\n{\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD] = [gl.ONE, gl.ONE];\n    array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    // not-premultiplied blend modes\n    array[BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n    array[BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    return array;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}