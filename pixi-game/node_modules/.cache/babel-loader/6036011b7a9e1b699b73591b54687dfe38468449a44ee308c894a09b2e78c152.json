{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * @class\n * @memberof PIXI\n */\nvar Point = function () {\n  /**\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n  function Point() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    _classCallCheck(this, Point);\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y;\n  }\n\n  /**\n   * Creates a clone of this point\n   *\n   * @return {PIXI.Point} a copy of the point\n   */\n\n  Point.prototype.clone = function clone() {\n    return new Point(this.x, this.y);\n  };\n\n  /**\n   * Copies x and y from the given point\n   *\n   * @param {PIXI.Point} p - The point to copy.\n   */\n\n  Point.prototype.copy = function copy(p) {\n    this.set(p.x, p.y);\n  };\n\n  /**\n   * Returns true if the given point is equal to this point\n   *\n   * @param {PIXI.Point} p - The point to check\n   * @returns {boolean} Whether the given point equal to this point\n   */\n\n  Point.prototype.equals = function equals(p) {\n    return p.x === this.x && p.y === this.y;\n  };\n\n  /**\n   * Sets the point to a new x and y position.\n   * If y is omitted, both x and y will be set to x.\n   *\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n\n  Point.prototype.set = function set(x, y) {\n    this.x = x || 0;\n    this.y = y || (y !== 0 ? this.x : 0);\n  };\n  return Point;\n}();\nexports.default = Point;","map":{"version":3,"names":["Point","x","arguments","length","undefined","y","_classCallCheck","clone","copy","p","set","equals"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/math/Point.js"],"sourcesContent":["/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * @class\n * @memberof PIXI\n */\nexport default class Point\n{\n    /**\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(x = 0, y = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n    }\n\n    /**\n     * Creates a clone of this point\n     *\n     * @return {PIXI.Point} a copy of the point\n     */\n    clone()\n    {\n        return new Point(this.x, this.y);\n    }\n\n    /**\n     * Copies x and y from the given point\n     *\n     * @param {PIXI.Point} p - The point to copy.\n     */\n    copy(p)\n    {\n        this.set(p.x, p.y);\n    }\n\n    /**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {PIXI.Point} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */\n    equals(p)\n    {\n        return (p.x === this.x) && (p.y === this.y);\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    set(x, y)\n    {\n        this.x = x || 0;\n        this.y = y || ((y !== 0) ? this.x : 0);\n    }\n\n}\n"],"mappings":";;;;;;;;;AAAA;;;;;;;IAOqBA,K;EAEjB;;;;EAIA,SAAAA,MAAA,EACA;IAAA,IADYC,CACZ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADgB,CAChB;IAAA,IADmBG,CACnB,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADuB,CACvB;IAAAI,eAAA,OAAAN,KAAA;;IACI;;;;IAIA,KAAKC,CAAL,GAASA,CAAT;;IAEA;;;;IAIA,KAAKI,CAAL,GAASA,CAAT;EACH;;EAED;;;;;;kBAKAE,K,oBACA;IACI,OAAO,IAAIP,KAAJ,CAAU,KAAKC,CAAf,EAAkB,KAAKI,CAAvB,CAAP;EACH,C;;EAED;;;;;;kBAKAG,I,iBAAKC,C,EACL;IACI,KAAKC,GAAL,CAASD,CAAA,CAAER,CAAX,EAAcQ,CAAA,CAAEJ,CAAhB;EACH,C;;EAED;;;;;;;kBAMAM,M,mBAAOF,C,EACP;IACI,OAAQA,CAAA,CAAER,CAAF,KAAQ,KAAKA,CAAd,IAAqBQ,CAAA,CAAEJ,CAAF,KAAQ,KAAKA,CAAzC;EACH,C;;EAED;;;;;;;;kBAOAK,G,gBAAIT,C,EAAGI,C,EACP;IACI,KAAKJ,CAAL,GAASA,CAAA,IAAK,CAAd;IACA,KAAKI,CAAL,GAASA,CAAA,KAAOA,CAAA,KAAM,CAAP,GAAY,KAAKJ,CAAjB,GAAqB,CAA3B,CAAT;EACH,C;;;kBA/DgBD,K"},"metadata":{},"sourceType":"script","externalDependencies":[]}