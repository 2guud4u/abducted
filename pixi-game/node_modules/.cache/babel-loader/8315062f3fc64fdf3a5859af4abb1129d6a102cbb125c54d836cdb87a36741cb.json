{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _core = require('../core');\nvar core = _interopRequireWildcard(_core);\nvar _ismobilejs = require('ismobilejs');\nvar _ismobilejs2 = _interopRequireDefault(_ismobilejs);\nvar _accessibleTarget = require('./accessibleTarget');\nvar _accessibleTarget2 = _interopRequireDefault(_accessibleTarget);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n// add some extra variables to the container..\ncore.utils.mixins.delayMixin(core.DisplayObject.prototype, _accessibleTarget2.default);\nvar KEY_CODE_TAB = 9;\nvar DIV_TOUCH_SIZE = 100;\nvar DIV_TOUCH_POS_X = 0;\nvar DIV_TOUCH_POS_Y = 0;\nvar DIV_TOUCH_ZINDEX = 2;\nvar DIV_HOOK_SIZE = 1;\nvar DIV_HOOK_POS_X = -1000;\nvar DIV_HOOK_POS_Y = -1000;\nvar DIV_HOOK_ZINDEX = 2;\n\n/**\n * The Accessibility manager recreates the ability to tab and have content read by screen\n * readers. This is very important as it can possibly help people with disabilities access pixi\n * content.\n *\n * Much like interaction any DisplayObject can be made accessible. This manager will map the\n * events as if the mouse was being used, minimizing the effort required to implement.\n *\n * An instance of this class is automatically created by default, and can be found at renderer.plugins.accessibility\n *\n * @class\n * @memberof PIXI.accessibility\n */\n\nvar AccessibilityManager = function () {\n  /**\n   * @param {PIXI.CanvasRenderer|PIXI.WebGLRenderer} renderer - A reference to the current renderer\n   */\n  function AccessibilityManager(renderer) {\n    _classCallCheck(this, AccessibilityManager);\n    if ((_ismobilejs2.default.tablet || _ismobilejs2.default.phone) && !navigator.isCocoonJS) {\n      this.createTouchHook();\n    }\n\n    // first we create a div that will sit over the PixiJS element. This is where the div overlays will go.\n    var div = document.createElement('div');\n    div.style.width = DIV_TOUCH_SIZE + 'px';\n    div.style.height = DIV_TOUCH_SIZE + 'px';\n    div.style.position = 'absolute';\n    div.style.top = DIV_TOUCH_POS_X + 'px';\n    div.style.left = DIV_TOUCH_POS_Y + 'px';\n    div.style.zIndex = DIV_TOUCH_ZINDEX;\n\n    /**\n     * This is the dom element that will sit over the PixiJS element. This is where the div overlays will go.\n     *\n     * @type {HTMLElement}\n     * @private\n     */\n    this.div = div;\n\n    /**\n     * A simple pool for storing divs.\n     *\n     * @type {*}\n     * @private\n     */\n    this.pool = [];\n\n    /**\n     * This is a tick used to check if an object is no longer being rendered.\n     *\n     * @type {Number}\n     * @private\n     */\n    this.renderId = 0;\n\n    /**\n     * Setting this to true will visually show the divs.\n     *\n     * @type {boolean}\n     */\n    this.debug = false;\n\n    /**\n     * The renderer this accessibility manager works for.\n     *\n     * @member {PIXI.SystemRenderer}\n     */\n    this.renderer = renderer;\n\n    /**\n     * The array of currently active accessible items.\n     *\n     * @member {Array<*>}\n     * @private\n     */\n    this.children = [];\n\n    /**\n     * pre-bind the functions\n     *\n     * @private\n     */\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n\n    /**\n     * stores the state of the manager. If there are no accessible objects or the mouse is moving, this will be false.\n     *\n     * @member {Array<*>}\n     * @private\n     */\n    this.isActive = false;\n    this.isMobileAccessabillity = false;\n\n    // let listen for tab.. once pressed we can fire up and show the accessibility layer\n    window.addEventListener('keydown', this._onKeyDown, false);\n  }\n\n  /**\n   * Creates the touch hooks.\n   *\n   */\n\n  AccessibilityManager.prototype.createTouchHook = function createTouchHook() {\n    var _this = this;\n    var hookDiv = document.createElement('button');\n    hookDiv.style.width = DIV_HOOK_SIZE + 'px';\n    hookDiv.style.height = DIV_HOOK_SIZE + 'px';\n    hookDiv.style.position = 'absolute';\n    hookDiv.style.top = DIV_HOOK_POS_X + 'px';\n    hookDiv.style.left = DIV_HOOK_POS_Y + 'px';\n    hookDiv.style.zIndex = DIV_HOOK_ZINDEX;\n    hookDiv.style.backgroundColor = '#FF0000';\n    hookDiv.title = 'HOOK DIV';\n    hookDiv.addEventListener('focus', function () {\n      _this.isMobileAccessabillity = true;\n      _this.activate();\n      document.body.removeChild(hookDiv);\n    });\n    document.body.appendChild(hookDiv);\n  };\n\n  /**\n   * Activating will cause the Accessibility layer to be shown. This is called when a user\n   * preses the tab key.\n   *\n   * @private\n   */\n\n  AccessibilityManager.prototype.activate = function activate() {\n    if (this.isActive) {\n      return;\n    }\n    this.isActive = true;\n    window.document.addEventListener('mousemove', this._onMouseMove, true);\n    window.removeEventListener('keydown', this._onKeyDown, false);\n    this.renderer.on('postrender', this.update, this);\n    if (this.renderer.view.parentNode) {\n      this.renderer.view.parentNode.appendChild(this.div);\n    }\n  };\n\n  /**\n   * Deactivating will cause the Accessibility layer to be hidden. This is called when a user moves\n   * the mouse.\n   *\n   * @private\n   */\n\n  AccessibilityManager.prototype.deactivate = function deactivate() {\n    if (!this.isActive || this.isMobileAccessabillity) {\n      return;\n    }\n    this.isActive = false;\n    window.document.removeEventListener('mousemove', this._onMouseMove, true);\n    window.addEventListener('keydown', this._onKeyDown, false);\n    this.renderer.off('postrender', this.update);\n    if (this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div);\n    }\n  };\n\n  /**\n   * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n   *\n   * @private\n   * @param {PIXI.Container} displayObject - The DisplayObject to check.\n   */\n\n  AccessibilityManager.prototype.updateAccessibleObjects = function updateAccessibleObjects(displayObject) {\n    if (!displayObject.visible) {\n      return;\n    }\n    if (displayObject.accessible && displayObject.interactive) {\n      if (!displayObject._accessibleActive) {\n        this.addChild(displayObject);\n      }\n      displayObject.renderId = this.renderId;\n    }\n    var children = displayObject.children;\n    for (var i = 0; i < children.length; i++) {\n      this.updateAccessibleObjects(children[i]);\n    }\n  };\n\n  /**\n   * Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.\n   *\n   * @private\n   */\n\n  AccessibilityManager.prototype.update = function update() {\n    if (!this.renderer.renderingToScreen) {\n      return;\n    }\n\n    // update children...\n    this.updateAccessibleObjects(this.renderer._lastObjectRendered);\n    var rect = this.renderer.view.getBoundingClientRect();\n    var sx = rect.width / this.renderer.width;\n    var sy = rect.height / this.renderer.height;\n    var div = this.div;\n    div.style.left = rect.left + 'px';\n    div.style.top = rect.top + 'px';\n    div.style.width = this.renderer.width + 'px';\n    div.style.height = this.renderer.height + 'px';\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      if (child.renderId !== this.renderId) {\n        child._accessibleActive = false;\n        core.utils.removeItems(this.children, i, 1);\n        this.div.removeChild(child._accessibleDiv);\n        this.pool.push(child._accessibleDiv);\n        child._accessibleDiv = null;\n        i--;\n        if (this.children.length === 0) {\n          this.deactivate();\n        }\n      } else {\n        // map div to display..\n        div = child._accessibleDiv;\n        var hitArea = child.hitArea;\n        var wt = child.worldTransform;\n        if (child.hitArea) {\n          div.style.left = (wt.tx + hitArea.x * wt.a) * sx + 'px';\n          div.style.top = (wt.ty + hitArea.y * wt.d) * sy + 'px';\n          div.style.width = hitArea.width * wt.a * sx + 'px';\n          div.style.height = hitArea.height * wt.d * sy + 'px';\n        } else {\n          hitArea = child.getBounds();\n          this.capHitArea(hitArea);\n          div.style.left = hitArea.x * sx + 'px';\n          div.style.top = hitArea.y * sy + 'px';\n          div.style.width = hitArea.width * sx + 'px';\n          div.style.height = hitArea.height * sy + 'px';\n\n          // update button titles and hints if they exist and they've changed\n          if (div.title !== child.accessibleTitle && child.accessibleTitle !== null) {\n            div.title = child.accessibleTitle;\n          }\n          if (div.getAttribute('aria-label') !== child.accessibleHint && child.accessibleHint !== null) {\n            div.setAttribute('aria-label', child.accessibleHint);\n          }\n        }\n      }\n    }\n\n    // increment the render id..\n    this.renderId++;\n  };\n\n  /**\n   * TODO: docs.\n   *\n   * @param {Rectangle} hitArea - TODO docs\n   */\n\n  AccessibilityManager.prototype.capHitArea = function capHitArea(hitArea) {\n    if (hitArea.x < 0) {\n      hitArea.width += hitArea.x;\n      hitArea.x = 0;\n    }\n    if (hitArea.y < 0) {\n      hitArea.height += hitArea.y;\n      hitArea.y = 0;\n    }\n    if (hitArea.x + hitArea.width > this.renderer.width) {\n      hitArea.width = this.renderer.width - hitArea.x;\n    }\n    if (hitArea.y + hitArea.height > this.renderer.height) {\n      hitArea.height = this.renderer.height - hitArea.y;\n    }\n  };\n\n  /**\n   * Adds a DisplayObject to the accessibility manager\n   *\n   * @private\n   * @param {DisplayObject} displayObject - The child to make accessible.\n   */\n\n  AccessibilityManager.prototype.addChild = function addChild(displayObject) {\n    //    this.activate();\n\n    var div = this.pool.pop();\n    if (!div) {\n      div = document.createElement('button');\n      div.style.width = DIV_TOUCH_SIZE + 'px';\n      div.style.height = DIV_TOUCH_SIZE + 'px';\n      div.style.backgroundColor = this.debug ? 'rgba(255,0,0,0.5)' : 'transparent';\n      div.style.position = 'absolute';\n      div.style.zIndex = DIV_TOUCH_ZINDEX;\n      div.style.borderStyle = 'none';\n\n      // ARIA attributes ensure that button title and hint updates are announced properly\n      if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n        // Chrome doesn't need aria-live to work as intended; in fact it just gets more confused.\n        div.setAttribute('aria-live', 'off');\n      } else {\n        div.setAttribute('aria-live', 'polite');\n      }\n      if (navigator.userAgent.match(/rv:.*Gecko\\//)) {\n        // FireFox needs this to announce only the new button name\n        div.setAttribute('aria-relevant', 'additions');\n      } else {\n        // required by IE, other browsers don't much care\n        div.setAttribute('aria-relevant', 'text');\n      }\n      div.addEventListener('click', this._onClick.bind(this));\n      div.addEventListener('focus', this._onFocus.bind(this));\n      div.addEventListener('focusout', this._onFocusOut.bind(this));\n    }\n    if (displayObject.accessibleTitle && displayObject.accessibleTitle !== null) {\n      div.title = displayObject.accessibleTitle;\n    } else if (!displayObject.accessibleHint || displayObject.accessibleHint === null) {\n      div.title = 'displayObject ' + displayObject.tabIndex;\n    }\n    if (displayObject.accessibleHint && displayObject.accessibleHint !== null) {\n      div.setAttribute('aria-label', displayObject.accessibleHint);\n    }\n\n    //\n\n    displayObject._accessibleActive = true;\n    displayObject._accessibleDiv = div;\n    div.displayObject = displayObject;\n    this.children.push(displayObject);\n    this.div.appendChild(displayObject._accessibleDiv);\n    displayObject._accessibleDiv.tabIndex = displayObject.tabIndex;\n  };\n\n  /**\n   * Maps the div button press to pixi's InteractionManager (click)\n   *\n   * @private\n   * @param {MouseEvent} e - The click event.\n   */\n\n  AccessibilityManager.prototype._onClick = function _onClick(e) {\n    var interactionManager = this.renderer.plugins.interaction;\n    interactionManager.dispatchEvent(e.target.displayObject, 'click', interactionManager.eventData);\n  };\n\n  /**\n   * Maps the div focus events to pixi's InteractionManager (mouseover)\n   *\n   * @private\n   * @param {FocusEvent} e - The focus event.\n   */\n\n  AccessibilityManager.prototype._onFocus = function _onFocus(e) {\n    if (!e.target.getAttribute('aria-live', 'off')) {\n      e.target.setAttribute('aria-live', 'assertive');\n    }\n    var interactionManager = this.renderer.plugins.interaction;\n    interactionManager.dispatchEvent(e.target.displayObject, 'mouseover', interactionManager.eventData);\n  };\n\n  /**\n   * Maps the div focus events to pixi's InteractionManager (mouseout)\n   *\n   * @private\n   * @param {FocusEvent} e - The focusout event.\n   */\n\n  AccessibilityManager.prototype._onFocusOut = function _onFocusOut(e) {\n    if (!e.target.getAttribute('aria-live', 'off')) {\n      e.target.setAttribute('aria-live', 'polite');\n    }\n    var interactionManager = this.renderer.plugins.interaction;\n    interactionManager.dispatchEvent(e.target.displayObject, 'mouseout', interactionManager.eventData);\n  };\n\n  /**\n   * Is called when a key is pressed\n   *\n   * @private\n   * @param {KeyboardEvent} e - The keydown event.\n   */\n\n  AccessibilityManager.prototype._onKeyDown = function _onKeyDown(e) {\n    if (e.keyCode !== KEY_CODE_TAB) {\n      return;\n    }\n    this.activate();\n  };\n\n  /**\n   * Is called when the mouse moves across the renderer element\n   *\n   * @private\n   * @param {MouseEvent} e - The mouse event.\n   */\n\n  AccessibilityManager.prototype._onMouseMove = function _onMouseMove(e) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this.deactivate();\n  };\n\n  /**\n   * Destroys the accessibility manager\n   *\n   */\n\n  AccessibilityManager.prototype.destroy = function destroy() {\n    this.div = null;\n    for (var i = 0; i < this.children.length; i++) {\n      this.children[i].div = null;\n    }\n    window.document.removeEventListener('mousemove', this._onMouseMove, true);\n    window.removeEventListener('keydown', this._onKeyDown);\n    this.pool = null;\n    this.children = null;\n    this.renderer = null;\n  };\n  return AccessibilityManager;\n}();\nexports.default = AccessibilityManager;\ncore.WebGLRenderer.registerPlugin('accessibility', AccessibilityManager);\ncore.CanvasRenderer.registerPlugin('accessibility', AccessibilityManager);","map":{"version":3,"names":["_core","require","core","_ismobilejs","_accessibleTarget","utils","mixins","delayMixin","DisplayObject","prototype","_accessibleTarget2","default","KEY_CODE_TAB","DIV_TOUCH_SIZE","DIV_TOUCH_POS_X","DIV_TOUCH_POS_Y","DIV_TOUCH_ZINDEX","DIV_HOOK_SIZE","DIV_HOOK_POS_X","DIV_HOOK_POS_Y","DIV_HOOK_ZINDEX","AccessibilityManager","renderer","_classCallCheck","_ismobilejs2","tablet","phone","navigator","isCocoonJS","createTouchHook","div","document","createElement","style","width","height","position","top","left","zIndex","pool","renderId","debug","children","_onKeyDown","bind","_onMouseMove","isActive","isMobileAccessabillity","window","addEventListener","_this","hookDiv","backgroundColor","title","activate","body","removeChild","appendChild","removeEventListener","on","update","view","parentNode","deactivate","off","updateAccessibleObjects","displayObject","visible","accessible","interactive","_accessibleActive","addChild","i","length","renderingToScreen","_lastObjectRendered","rect","getBoundingClientRect","sx","sy","child","removeItems","_accessibleDiv","push","hitArea","wt","worldTransform","tx","x","a","ty","y","d","getBounds","capHitArea","accessibleTitle","getAttribute","accessibleHint","setAttribute","pop","borderStyle","userAgent","toLowerCase","indexOf","match","_onClick","_onFocus","_onFocusOut","tabIndex","e","interactionManager","plugins","interaction","dispatchEvent","target","eventData","keyCode","movementX","movementY","destroy","WebGLRenderer","registerPlugin","CanvasRenderer"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/accessibility/AccessibilityManager.js"],"sourcesContent":["import * as core from '../core';\nimport Device from 'ismobilejs';\nimport accessibleTarget from './accessibleTarget';\n\n// add some extra variables to the container..\ncore.utils.mixins.delayMixin(\n    core.DisplayObject.prototype,\n    accessibleTarget\n);\n\nconst KEY_CODE_TAB = 9;\n\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\n\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1000;\nconst DIV_HOOK_POS_Y = -1000;\nconst DIV_HOOK_ZINDEX = 2;\n\n/**\n * The Accessibility manager recreates the ability to tab and have content read by screen\n * readers. This is very important as it can possibly help people with disabilities access pixi\n * content.\n *\n * Much like interaction any DisplayObject can be made accessible. This manager will map the\n * events as if the mouse was being used, minimizing the effort required to implement.\n *\n * An instance of this class is automatically created by default, and can be found at renderer.plugins.accessibility\n *\n * @class\n * @memberof PIXI.accessibility\n */\nexport default class AccessibilityManager\n{\n    /**\n     * @param {PIXI.CanvasRenderer|PIXI.WebGLRenderer} renderer - A reference to the current renderer\n     */\n    constructor(renderer)\n    {\n        if ((Device.tablet || Device.phone) && !navigator.isCocoonJS)\n        {\n            this.createTouchHook();\n        }\n\n        // first we create a div that will sit over the PixiJS element. This is where the div overlays will go.\n        const div = document.createElement('div');\n\n        div.style.width = `${DIV_TOUCH_SIZE}px`;\n        div.style.height = `${DIV_TOUCH_SIZE}px`;\n        div.style.position = 'absolute';\n        div.style.top = `${DIV_TOUCH_POS_X}px`;\n        div.style.left = `${DIV_TOUCH_POS_Y}px`;\n        div.style.zIndex = DIV_TOUCH_ZINDEX;\n\n        /**\n         * This is the dom element that will sit over the PixiJS element. This is where the div overlays will go.\n         *\n         * @type {HTMLElement}\n         * @private\n         */\n        this.div = div;\n\n        /**\n         * A simple pool for storing divs.\n         *\n         * @type {*}\n         * @private\n         */\n        this.pool = [];\n\n        /**\n         * This is a tick used to check if an object is no longer being rendered.\n         *\n         * @type {Number}\n         * @private\n         */\n        this.renderId = 0;\n\n        /**\n         * Setting this to true will visually show the divs.\n         *\n         * @type {boolean}\n         */\n        this.debug = false;\n\n        /**\n         * The renderer this accessibility manager works for.\n         *\n         * @member {PIXI.SystemRenderer}\n         */\n        this.renderer = renderer;\n\n        /**\n         * The array of currently active accessible items.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.children = [];\n\n        /**\n         * pre-bind the functions\n         *\n         * @private\n         */\n        this._onKeyDown = this._onKeyDown.bind(this);\n        this._onMouseMove = this._onMouseMove.bind(this);\n\n        /**\n         * stores the state of the manager. If there are no accessible objects or the mouse is moving, this will be false.\n         *\n         * @member {Array<*>}\n         * @private\n         */\n        this.isActive = false;\n        this.isMobileAccessabillity = false;\n\n        // let listen for tab.. once pressed we can fire up and show the accessibility layer\n        window.addEventListener('keydown', this._onKeyDown, false);\n    }\n\n    /**\n     * Creates the touch hooks.\n     *\n     */\n    createTouchHook()\n    {\n        const hookDiv = document.createElement('button');\n\n        hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n        hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n        hookDiv.style.position = 'absolute';\n        hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n        hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n        hookDiv.style.zIndex = DIV_HOOK_ZINDEX;\n        hookDiv.style.backgroundColor = '#FF0000';\n        hookDiv.title = 'HOOK DIV';\n\n        hookDiv.addEventListener('focus', () =>\n        {\n            this.isMobileAccessabillity = true;\n            this.activate();\n            document.body.removeChild(hookDiv);\n        });\n\n        document.body.appendChild(hookDiv);\n    }\n\n    /**\n     * Activating will cause the Accessibility layer to be shown. This is called when a user\n     * preses the tab key.\n     *\n     * @private\n     */\n    activate()\n    {\n        if (this.isActive)\n        {\n            return;\n        }\n\n        this.isActive = true;\n\n        window.document.addEventListener('mousemove', this._onMouseMove, true);\n        window.removeEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.on('postrender', this.update, this);\n\n        if (this.renderer.view.parentNode)\n        {\n            this.renderer.view.parentNode.appendChild(this.div);\n        }\n    }\n\n    /**\n     * Deactivating will cause the Accessibility layer to be hidden. This is called when a user moves\n     * the mouse.\n     *\n     * @private\n     */\n    deactivate()\n    {\n        if (!this.isActive || this.isMobileAccessabillity)\n        {\n            return;\n        }\n\n        this.isActive = false;\n\n        window.document.removeEventListener('mousemove', this._onMouseMove, true);\n        window.addEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.off('postrender', this.update);\n\n        if (this.div.parentNode)\n        {\n            this.div.parentNode.removeChild(this.div);\n        }\n    }\n\n    /**\n     * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n     *\n     * @private\n     * @param {PIXI.Container} displayObject - The DisplayObject to check.\n     */\n    updateAccessibleObjects(displayObject)\n    {\n        if (!displayObject.visible)\n        {\n            return;\n        }\n\n        if (displayObject.accessible && displayObject.interactive)\n        {\n            if (!displayObject._accessibleActive)\n            {\n                this.addChild(displayObject);\n            }\n\n            displayObject.renderId = this.renderId;\n        }\n\n        const children = displayObject.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            this.updateAccessibleObjects(children[i]);\n        }\n    }\n\n    /**\n     * Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.\n     *\n     * @private\n     */\n    update()\n    {\n        if (!this.renderer.renderingToScreen)\n        {\n            return;\n        }\n\n        // update children...\n        this.updateAccessibleObjects(this.renderer._lastObjectRendered);\n\n        const rect = this.renderer.view.getBoundingClientRect();\n        const sx = rect.width / this.renderer.width;\n        const sy = rect.height / this.renderer.height;\n\n        let div = this.div;\n\n        div.style.left = `${rect.left}px`;\n        div.style.top = `${rect.top}px`;\n        div.style.width = `${this.renderer.width}px`;\n        div.style.height = `${this.renderer.height}px`;\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            const child = this.children[i];\n\n            if (child.renderId !== this.renderId)\n            {\n                child._accessibleActive = false;\n\n                core.utils.removeItems(this.children, i, 1);\n                this.div.removeChild(child._accessibleDiv);\n                this.pool.push(child._accessibleDiv);\n                child._accessibleDiv = null;\n\n                i--;\n\n                if (this.children.length === 0)\n                {\n                    this.deactivate();\n                }\n            }\n            else\n            {\n                // map div to display..\n                div = child._accessibleDiv;\n                let hitArea = child.hitArea;\n                const wt = child.worldTransform;\n\n                if (child.hitArea)\n                {\n                    div.style.left = `${(wt.tx + (hitArea.x * wt.a)) * sx}px`;\n                    div.style.top = `${(wt.ty + (hitArea.y * wt.d)) * sy}px`;\n\n                    div.style.width = `${hitArea.width * wt.a * sx}px`;\n                    div.style.height = `${hitArea.height * wt.d * sy}px`;\n                }\n                else\n                {\n                    hitArea = child.getBounds();\n\n                    this.capHitArea(hitArea);\n\n                    div.style.left = `${hitArea.x * sx}px`;\n                    div.style.top = `${hitArea.y * sy}px`;\n\n                    div.style.width = `${hitArea.width * sx}px`;\n                    div.style.height = `${hitArea.height * sy}px`;\n\n                    // update button titles and hints if they exist and they've changed\n                    if (div.title !== child.accessibleTitle && child.accessibleTitle !== null)\n                    {\n                        div.title = child.accessibleTitle;\n                    }\n                    if (div.getAttribute('aria-label') !== child.accessibleHint\n                        && child.accessibleHint !== null)\n                    {\n                        div.setAttribute('aria-label', child.accessibleHint);\n                    }\n                }\n            }\n        }\n\n        // increment the render id..\n        this.renderId++;\n    }\n\n    /**\n     * TODO: docs.\n     *\n     * @param {Rectangle} hitArea - TODO docs\n     */\n    capHitArea(hitArea)\n    {\n        if (hitArea.x < 0)\n        {\n            hitArea.width += hitArea.x;\n            hitArea.x = 0;\n        }\n\n        if (hitArea.y < 0)\n        {\n            hitArea.height += hitArea.y;\n            hitArea.y = 0;\n        }\n\n        if (hitArea.x + hitArea.width > this.renderer.width)\n        {\n            hitArea.width = this.renderer.width - hitArea.x;\n        }\n\n        if (hitArea.y + hitArea.height > this.renderer.height)\n        {\n            hitArea.height = this.renderer.height - hitArea.y;\n        }\n    }\n\n    /**\n     * Adds a DisplayObject to the accessibility manager\n     *\n     * @private\n     * @param {DisplayObject} displayObject - The child to make accessible.\n     */\n    addChild(displayObject)\n    {\n        //    this.activate();\n\n        let div = this.pool.pop();\n\n        if (!div)\n        {\n            div = document.createElement('button');\n\n            div.style.width = `${DIV_TOUCH_SIZE}px`;\n            div.style.height = `${DIV_TOUCH_SIZE}px`;\n            div.style.backgroundColor = this.debug ? 'rgba(255,0,0,0.5)' : 'transparent';\n            div.style.position = 'absolute';\n            div.style.zIndex = DIV_TOUCH_ZINDEX;\n            div.style.borderStyle = 'none';\n\n            // ARIA attributes ensure that button title and hint updates are announced properly\n            if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n            {\n                // Chrome doesn't need aria-live to work as intended; in fact it just gets more confused.\n                div.setAttribute('aria-live', 'off');\n            }\n            else\n            {\n                div.setAttribute('aria-live', 'polite');\n            }\n\n            if (navigator.userAgent.match(/rv:.*Gecko\\//))\n            {\n                // FireFox needs this to announce only the new button name\n                div.setAttribute('aria-relevant', 'additions');\n            }\n            else\n            {\n                // required by IE, other browsers don't much care\n                div.setAttribute('aria-relevant', 'text');\n            }\n\n            div.addEventListener('click', this._onClick.bind(this));\n            div.addEventListener('focus', this._onFocus.bind(this));\n            div.addEventListener('focusout', this._onFocusOut.bind(this));\n        }\n\n        if (displayObject.accessibleTitle && displayObject.accessibleTitle !== null)\n        {\n            div.title = displayObject.accessibleTitle;\n        }\n        else if (!displayObject.accessibleHint\n                 || displayObject.accessibleHint === null)\n        {\n            div.title = `displayObject ${displayObject.tabIndex}`;\n        }\n\n        if (displayObject.accessibleHint\n            && displayObject.accessibleHint !== null)\n        {\n            div.setAttribute('aria-label', displayObject.accessibleHint);\n        }\n\n        //\n\n        displayObject._accessibleActive = true;\n        displayObject._accessibleDiv = div;\n        div.displayObject = displayObject;\n\n        this.children.push(displayObject);\n        this.div.appendChild(displayObject._accessibleDiv);\n        displayObject._accessibleDiv.tabIndex = displayObject.tabIndex;\n    }\n\n    /**\n     * Maps the div button press to pixi's InteractionManager (click)\n     *\n     * @private\n     * @param {MouseEvent} e - The click event.\n     */\n    _onClick(e)\n    {\n        const interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'click', interactionManager.eventData);\n    }\n\n    /**\n     * Maps the div focus events to pixi's InteractionManager (mouseover)\n     *\n     * @private\n     * @param {FocusEvent} e - The focus event.\n     */\n    _onFocus(e)\n    {\n        if (!e.target.getAttribute('aria-live', 'off'))\n        {\n            e.target.setAttribute('aria-live', 'assertive');\n        }\n        const interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'mouseover', interactionManager.eventData);\n    }\n\n    /**\n     * Maps the div focus events to pixi's InteractionManager (mouseout)\n     *\n     * @private\n     * @param {FocusEvent} e - The focusout event.\n     */\n    _onFocusOut(e)\n    {\n        if (!e.target.getAttribute('aria-live', 'off'))\n        {\n            e.target.setAttribute('aria-live', 'polite');\n        }\n        const interactionManager = this.renderer.plugins.interaction;\n\n        interactionManager.dispatchEvent(e.target.displayObject, 'mouseout', interactionManager.eventData);\n    }\n\n    /**\n     * Is called when a key is pressed\n     *\n     * @private\n     * @param {KeyboardEvent} e - The keydown event.\n     */\n    _onKeyDown(e)\n    {\n        if (e.keyCode !== KEY_CODE_TAB)\n        {\n            return;\n        }\n\n        this.activate();\n    }\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     *\n     * @private\n     * @param {MouseEvent} e - The mouse event.\n     */\n    _onMouseMove(e)\n    {\n        if (e.movementX === 0 && e.movementY === 0)\n        {\n            return;\n        }\n\n        this.deactivate();\n    }\n\n    /**\n     * Destroys the accessibility manager\n     *\n     */\n    destroy()\n    {\n        this.div = null;\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            this.children[i].div = null;\n        }\n\n        window.document.removeEventListener('mousemove', this._onMouseMove, true);\n        window.removeEventListener('keydown', this._onKeyDown);\n\n        this.pool = null;\n        this.children = null;\n        this.renderer = null;\n    }\n}\n\ncore.WebGLRenderer.registerPlugin('accessibility', AccessibilityManager);\ncore.CanvasRenderer.registerPlugin('accessibility', AccessibilityManager);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}