{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = buildRectangle;\nvar _buildLine = require('./buildLine');\nvar _buildLine2 = _interopRequireDefault(_buildLine);\nvar _utils = require('../../../utils');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the webGL-specific information to create nativeLines\n */\nfunction buildRectangle(graphicsData, webGLData, webGLDataNativeLines) {\n  // --- //\n  // need to convert points to a nice regular data\n  //\n  var rectData = graphicsData.shape;\n  var x = rectData.x;\n  var y = rectData.y;\n  var width = rectData.width;\n  var height = rectData.height;\n  if (graphicsData.fill) {\n    var color = (0, _utils.hex2rgb)(graphicsData.fillColor);\n    var alpha = graphicsData.fillAlpha;\n    var r = color[0] * alpha;\n    var g = color[1] * alpha;\n    var b = color[2] * alpha;\n    var verts = webGLData.points;\n    var indices = webGLData.indices;\n    var vertPos = verts.length / 6;\n\n    // start\n    verts.push(x, y);\n    verts.push(r, g, b, alpha);\n    verts.push(x + width, y);\n    verts.push(r, g, b, alpha);\n    verts.push(x, y + height);\n    verts.push(r, g, b, alpha);\n    verts.push(x + width, y + height);\n    verts.push(r, g, b, alpha);\n\n    // insert 2 dead triangles..\n    indices.push(vertPos, vertPos, vertPos + 1, vertPos + 2, vertPos + 3, vertPos + 3);\n  }\n  if (graphicsData.lineWidth) {\n    var tempPoints = graphicsData.points;\n    graphicsData.points = [x, y, x + width, y, x + width, y + height, x, y + height, x, y];\n    (0, _buildLine2.default)(graphicsData, webGLData, webGLDataNativeLines);\n    graphicsData.points = tempPoints;\n  }\n}","map":{"version":3,"names":["buildRectangle","_buildLine","require","_utils","graphicsData","webGLData","webGLDataNativeLines","rectData","shape","x","y","width","height","fill","color","hex2rgb","fillColor","alpha","fillAlpha","r","g","b","verts","points","indices","vertPos","length","push","lineWidth","tempPoints","_buildLine2","default"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/graphics/webgl/utils/buildRectangle.js"],"sourcesContent":["import buildLine from './buildLine';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the webGL-specific information to create nativeLines\n */\nexport default function buildRectangle(graphicsData, webGLData, webGLDataNativeLines)\n{\n    // --- //\n    // need to convert points to a nice regular data\n    //\n    const rectData = graphicsData.shape;\n    const x = rectData.x;\n    const y = rectData.y;\n    const width = rectData.width;\n    const height = rectData.height;\n\n    if (graphicsData.fill)\n    {\n        const color = hex2rgb(graphicsData.fillColor);\n        const alpha = graphicsData.fillAlpha;\n\n        const r = color[0] * alpha;\n        const g = color[1] * alpha;\n        const b = color[2] * alpha;\n\n        const verts = webGLData.points;\n        const indices = webGLData.indices;\n\n        const vertPos = verts.length / 6;\n\n        // start\n        verts.push(x, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x, y + height);\n        verts.push(r, g, b, alpha);\n\n        verts.push(x + width, y + height);\n        verts.push(r, g, b, alpha);\n\n        // insert 2 dead triangles..\n        indices.push(vertPos, vertPos, vertPos + 1, vertPos + 2, vertPos + 3, vertPos + 3);\n    }\n\n    if (graphicsData.lineWidth)\n    {\n        const tempPoints = graphicsData.points;\n\n        graphicsData.points = [x, y,\n            x + width, y,\n            x + width, y + height,\n            x, y + height,\n            x, y];\n\n        buildLine(graphicsData, webGLData, webGLDataNativeLines);\n\n        graphicsData.points = tempPoints;\n    }\n}\n"],"mappings":";;;kBAcwBA,c;AAdxB,IAAAC,UAAA,GAAAC,OAAA;;AACA,IAAAC,MAAA,GAAAD,OAAA;;;;;;;AAEA;;;;;;;;;;;AAWe,SAASF,cAATA,CAAwBI,YAAxB,EAAsCC,SAAtC,EAAiDC,oBAAjD,EACf;EACI;EACA;EACA;EACA,IAAMC,QAAA,GAAWH,YAAA,CAAaI,KAA9B;EACA,IAAMC,CAAA,GAAIF,QAAA,CAASE,CAAnB;EACA,IAAMC,CAAA,GAAIH,QAAA,CAASG,CAAnB;EACA,IAAMC,KAAA,GAAQJ,QAAA,CAASI,KAAvB;EACA,IAAMC,MAAA,GAASL,QAAA,CAASK,MAAxB;EAEA,IAAIR,YAAA,CAAaS,IAAjB,EACA;IACI,IAAMC,KAAA,GAAQ,IAAAX,MAAA,CAAAY,OAAA,EAAQX,YAAA,CAAaY,SAArB,CAAd;IACA,IAAMC,KAAA,GAAQb,YAAA,CAAac,SAA3B;IAEA,IAAMC,CAAA,GAAIL,KAAA,CAAM,CAAN,IAAWG,KAArB;IACA,IAAMG,CAAA,GAAIN,KAAA,CAAM,CAAN,IAAWG,KAArB;IACA,IAAMI,CAAA,GAAIP,KAAA,CAAM,CAAN,IAAWG,KAArB;IAEA,IAAMK,KAAA,GAAQjB,SAAA,CAAUkB,MAAxB;IACA,IAAMC,OAAA,GAAUnB,SAAA,CAAUmB,OAA1B;IAEA,IAAMC,OAAA,GAAUH,KAAA,CAAMI,MAAN,GAAe,CAA/B;;IAEA;IACAJ,KAAA,CAAMK,IAAN,CAAWlB,CAAX,EAAcC,CAAd;IACAY,KAAA,CAAMK,IAAN,CAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBJ,KAApB;IAEAK,KAAA,CAAMK,IAAN,CAAWlB,CAAA,GAAIE,KAAf,EAAsBD,CAAtB;IACAY,KAAA,CAAMK,IAAN,CAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBJ,KAApB;IAEAK,KAAA,CAAMK,IAAN,CAAWlB,CAAX,EAAcC,CAAA,GAAIE,MAAlB;IACAU,KAAA,CAAMK,IAAN,CAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBJ,KAApB;IAEAK,KAAA,CAAMK,IAAN,CAAWlB,CAAA,GAAIE,KAAf,EAAsBD,CAAA,GAAIE,MAA1B;IACAU,KAAA,CAAMK,IAAN,CAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBJ,KAApB;;IAEA;IACAO,OAAA,CAAQG,IAAR,CAAaF,OAAb,EAAsBA,OAAtB,EAA+BA,OAAA,GAAU,CAAzC,EAA4CA,OAAA,GAAU,CAAtD,EAAyDA,OAAA,GAAU,CAAnE,EAAsEA,OAAA,GAAU,CAAhF;EACH;EAED,IAAIrB,YAAA,CAAawB,SAAjB,EACA;IACI,IAAMC,UAAA,GAAazB,YAAA,CAAamB,MAAhC;IAEAnB,YAAA,CAAamB,MAAb,GAAsB,CAACd,CAAD,EAAIC,CAAJ,EAClBD,CAAA,GAAIE,KADc,EACPD,CADO,EAElBD,CAAA,GAAIE,KAFc,EAEPD,CAAA,GAAIE,MAFG,EAGlBH,CAHkB,EAGfC,CAAA,GAAIE,MAHW,EAIlBH,CAJkB,EAIfC,CAJe,CAAtB;IAMA,IAAAoB,WAAA,CAAAC,OAAA,EAAU3B,YAAV,EAAwBC,SAAxB,EAAmCC,oBAAnC;IAEAF,YAAA,CAAamB,MAAb,GAAsBM,UAAtB;EACH;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}