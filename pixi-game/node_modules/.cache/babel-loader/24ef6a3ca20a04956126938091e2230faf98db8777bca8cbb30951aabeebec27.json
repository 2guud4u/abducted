{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n * An observable point is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof PIXI\n */\nvar ObservablePoint = function () {\n  /**\n   * @param {Function} cb - callback when changed\n   * @param {object} scope - owner of callback\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n  function ObservablePoint(cb, scope) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    _classCallCheck(this, ObservablePoint);\n    this._x = x;\n    this._y = y;\n    this.cb = cb;\n    this.scope = scope;\n  }\n\n  /**\n   * Creates a clone of this point.\n   * The callback and scope params can be overidden otherwise they will default\n   * to the clone object's values.\n   *\n   * @override\n   * @param {Function} [cb=null] - callback when changed\n   * @param {object} [scope=null] - owner of callback\n   * @return {PIXI.ObservablePoint} a copy of the point\n   */\n\n  ObservablePoint.prototype.clone = function clone() {\n    var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _cb = cb || this.cb;\n    var _scope = scope || this.scope;\n    return new ObservablePoint(_cb, _scope, this._x, this._y);\n  };\n\n  /**\n   * Sets the point to a new x and y position.\n   * If y is omitted, both x and y will be set to x.\n   *\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n\n  ObservablePoint.prototype.set = function set(x, y) {\n    var _x = x || 0;\n    var _y = y || (y !== 0 ? _x : 0);\n    if (this._x !== _x || this._y !== _y) {\n      this._x = _x;\n      this._y = _y;\n      this.cb.call(this.scope);\n    }\n  };\n\n  /**\n   * Copies the data from another point\n   *\n   * @param {PIXI.Point|PIXI.ObservablePoint} point - point to copy from\n   */\n\n  ObservablePoint.prototype.copy = function copy(point) {\n    if (this._x !== point.x || this._y !== point.y) {\n      this._x = point.x;\n      this._y = point.y;\n      this.cb.call(this.scope);\n    }\n  };\n\n  /**\n   * Returns true if the given point is equal to this point\n   *\n   * @param {PIXI.Point|PIXI.ObservablePoint} p - The point to check\n   * @returns {boolean} Whether the given point equal to this point\n   */\n\n  ObservablePoint.prototype.equals = function equals(p) {\n    return p.x === this._x && p.y === this._y;\n  };\n\n  /**\n   * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n   *\n   * @member {number}\n   */\n\n  _createClass(ObservablePoint, [{\n    key: \"x\",\n    get: function get() {\n      return this._x;\n    },\n    set: function set(value)\n    // eslint-disable-line require-jsdoc\n    {\n      if (this._x !== value) {\n        this._x = value;\n        this.cb.call(this.scope);\n      }\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this._y;\n    },\n    set: function set(value)\n    // eslint-disable-line require-jsdoc\n    {\n      if (this._y !== value) {\n        this._y = value;\n        this.cb.call(this.scope);\n      }\n    }\n  }]);\n  return ObservablePoint;\n}();\nexports.default = ObservablePoint;","map":{"version":3,"names":["ObservablePoint","cb","scope","x","arguments","length","undefined","y","_classCallCheck","_x","_y","clone","_cb","_scope","set","call","copy","point","equals","p","value"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/math/ObservablePoint.js"],"sourcesContent":["/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n * An observable point is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof PIXI\n */\nexport default class ObservablePoint\n{\n    /**\n     * @param {Function} cb - callback when changed\n     * @param {object} scope - owner of callback\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(cb, scope, x = 0, y = 0)\n    {\n        this._x = x;\n        this._y = y;\n\n        this.cb = cb;\n        this.scope = scope;\n    }\n\n    /**\n     * Creates a clone of this point.\n     * The callback and scope params can be overidden otherwise they will default\n     * to the clone object's values.\n     *\n     * @override\n     * @param {Function} [cb=null] - callback when changed\n     * @param {object} [scope=null] - owner of callback\n     * @return {PIXI.ObservablePoint} a copy of the point\n     */\n    clone(cb = null, scope = null)\n    {\n        const _cb = cb || this.cb;\n        const _scope = scope || this.scope;\n\n        return new ObservablePoint(_cb, _scope, this._x, this._y);\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    set(x, y)\n    {\n        const _x = x || 0;\n        const _y = y || ((y !== 0) ? _x : 0);\n\n        if (this._x !== _x || this._y !== _y)\n        {\n            this._x = _x;\n            this._y = _y;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * Copies the data from another point\n     *\n     * @param {PIXI.Point|PIXI.ObservablePoint} point - point to copy from\n     */\n    copy(point)\n    {\n        if (this._x !== point.x || this._y !== point.y)\n        {\n            this._x = point.x;\n            this._y = point.y;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {PIXI.Point|PIXI.ObservablePoint} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */\n    equals(p)\n    {\n        return (p.x === this._x) && (p.y === this._y);\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n    get x()\n    {\n        return this._x;\n    }\n\n    set x(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._x !== value)\n        {\n            this._x = value;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n    get y()\n    {\n        return this._y;\n    }\n\n    set y(value) // eslint-disable-line require-jsdoc\n    {\n        if (this._y !== value)\n        {\n            this._y = value;\n            this.cb.call(this.scope);\n        }\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;IAQqBA,e;EAEjB;;;;;;EAMA,SAAAA,gBAAYC,EAAZ,EAAgBC,KAAhB,EACA;IAAA,IADuBC,CACvB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAD2B,CAC3B;IAAA,IAD8BG,CAC9B,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADkC,CAClC;IAAAI,eAAA,OAAAR,eAAA;IACI,KAAKS,EAAL,GAAUN,CAAV;IACA,KAAKO,EAAL,GAAUH,CAAV;IAEA,KAAKN,EAAL,GAAUA,EAAV;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;;EAED;;;;;;;;;;;4BAUAS,K,oBACA;IAAA,IADMV,EACN,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADW,IACX;IAAA,IADiBF,KACjB,GAAAE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADyB,IACzB;IACI,IAAMQ,GAAA,GAAMX,EAAA,IAAM,KAAKA,EAAvB;IACA,IAAMY,MAAA,GAASX,KAAA,IAAS,KAAKA,KAA7B;IAEA,OAAO,IAAIF,eAAJ,CAAoBY,GAApB,EAAyBC,MAAzB,EAAiC,KAAKJ,EAAtC,EAA0C,KAAKC,EAA/C,CAAP;EACH,C;;EAED;;;;;;;;4BAOAI,G,gBAAIX,C,EAAGI,C,EACP;IACI,IAAME,EAAA,GAAKN,CAAA,IAAK,CAAhB;IACA,IAAMO,EAAA,GAAKH,CAAA,KAAOA,CAAA,KAAM,CAAP,GAAYE,EAAZ,GAAiB,CAAvB,CAAX;IAEA,IAAI,KAAKA,EAAL,KAAYA,EAAZ,IAAkB,KAAKC,EAAL,KAAYA,EAAlC,EACA;MACI,KAAKD,EAAL,GAAUA,EAAV;MACA,KAAKC,EAAL,GAAUA,EAAV;MACA,KAAKT,EAAL,CAAQc,IAAR,CAAa,KAAKb,KAAlB;IACH;EACJ,C;;EAED;;;;;;4BAKAc,I,iBAAKC,K,EACL;IACI,IAAI,KAAKR,EAAL,KAAYQ,KAAA,CAAMd,CAAlB,IAAuB,KAAKO,EAAL,KAAYO,KAAA,CAAMV,CAA7C,EACA;MACI,KAAKE,EAAL,GAAUQ,KAAA,CAAMd,CAAhB;MACA,KAAKO,EAAL,GAAUO,KAAA,CAAMV,CAAhB;MACA,KAAKN,EAAL,CAAQc,IAAR,CAAa,KAAKb,KAAlB;IACH;EACJ,C;;EAED;;;;;;;4BAMAgB,M,mBAAOC,C,EACP;IACI,OAAQA,CAAA,CAAEhB,CAAF,KAAQ,KAAKM,EAAd,IAAsBU,CAAA,CAAEZ,CAAF,KAAQ,KAAKG,EAA1C;EACH,C;;EAED;;;;;;;;wBAMA;MACI,OAAO,KAAKD,EAAZ;IACH,C;sBAEKW,K;IAAO;IACb;MACI,IAAI,KAAKX,EAAL,KAAYW,KAAhB,EACA;QACI,KAAKX,EAAL,GAAUW,KAAV;QACA,KAAKnB,EAAL,CAAQc,IAAR,CAAa,KAAKb,KAAlB;MACH;IACJ;;IAED;;;;;;;wBAMA;MACI,OAAO,KAAKQ,EAAZ;IACH,C;sBAEKU,K;IAAO;IACb;MACI,IAAI,KAAKV,EAAL,KAAYU,KAAhB,EACA;QACI,KAAKV,EAAL,GAAUU,KAAV;QACA,KAAKnB,EAAL,CAAQc,IAAR,CAAa,KAAKb,KAAlB;MACH;IACJ;;;;kBArHgBF,e"},"metadata":{},"sourceType":"script","externalDependencies":[]}