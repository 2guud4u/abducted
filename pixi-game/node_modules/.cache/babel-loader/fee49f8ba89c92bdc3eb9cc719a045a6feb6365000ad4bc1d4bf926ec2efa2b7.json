{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _autoDetectRenderer = require('./autoDetectRenderer');\nvar _Container = require('./display/Container');\nvar _Container2 = _interopRequireDefault(_Container);\nvar _ticker = require('./ticker');\nvar _settings = require('./settings');\nvar _settings2 = _interopRequireDefault(_settings);\nvar _const = require('./const');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\n * Convenience class to create a new PIXI application.\n * This class automatically creates the renderer, ticker\n * and root container.\n *\n * @example\n * // Create the application\n * const app = new PIXI.Application();\n *\n * // Add the view to the DOM\n * document.body.appendChild(app.view);\n *\n * // ex, add display objects\n * app.stage.addChild(PIXI.Sprite.fromImage('something.png'));\n *\n * @class\n * @memberof PIXI\n */\nvar Application = function () {\n  // eslint-disable-next-line valid-jsdoc\n  /**\n   * @param {object} [options] - The optional renderer parameters\n   * @param {boolean} [options.autoStart=true] - automatically starts the rendering after the construction.\n   *     Note that setting this parameter to false does NOT stop the shared ticker even if you set\n   *     options.sharedTicker to true in case that it is already started. Stop it by your own.\n   * @param {number} [options.width=800] - the width of the renderers view\n   * @param {number} [options.height=600] - the height of the renderers view\n   * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n   * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n   * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n   * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n   *  need to call toDataUrl on the webgl context\n   * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n   * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present\n   * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n   *  (shown if not transparent).\n   * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n   *   not before the new render pass.\n   * @param {boolean} [options.roundPixels=false] - If true PixiJS will Math.floor() x/y values when rendering,\n   *  stopping pixel interpolation.\n   * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n   *  FXAA is faster, but may not always look as great **webgl only**\n   * @param {boolean} [options.legacy=false] - `true` to ensure compatibility with older / less advanced devices.\n   *  If you experience unexplained flickering try setting this to true. **webgl only**\n   * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n   *  for devices with dual graphics card **webgl only**\n   * @param {boolean} [options.sharedTicker=false] - `true` to use PIXI.ticker.shared, `false` to create new ticker.\n   * @param {boolean} [options.sharedLoader=false] - `true` to use PIXI.loaders.shared, `false` to create new Loader.\n   */\n  function Application(options, arg2, arg3, arg4, arg5) {\n    _classCallCheck(this, Application);\n\n    // Support for constructor(width, height, options, noWebGL, useSharedTicker)\n    if (typeof options === 'number') {\n      options = Object.assign({\n        width: options,\n        height: arg2 || _settings2.default.RENDER_OPTIONS.height,\n        forceCanvas: !!arg4,\n        sharedTicker: !!arg5\n      }, arg3);\n    }\n\n    /**\n     * The default options, so we mixin functionality later.\n     * @member {object}\n     * @protected\n     */\n    this._options = options = Object.assign({\n      autoStart: true,\n      sharedTicker: false,\n      forceCanvas: false,\n      sharedLoader: false\n    }, options);\n\n    /**\n     * WebGL renderer if available, otherwise CanvasRenderer\n     * @member {PIXI.WebGLRenderer|PIXI.CanvasRenderer}\n     */\n    this.renderer = (0, _autoDetectRenderer.autoDetectRenderer)(options);\n\n    /**\n     * The root display container that's rendered.\n     * @member {PIXI.Container}\n     */\n    this.stage = new _Container2.default();\n\n    /**\n     * Internal reference to the ticker\n     * @member {PIXI.ticker.Ticker}\n     * @private\n     */\n    this._ticker = null;\n\n    /**\n     * Ticker for doing render updates.\n     * @member {PIXI.ticker.Ticker}\n     * @default PIXI.ticker.shared\n     */\n    this.ticker = options.sharedTicker ? _ticker.shared : new _ticker.Ticker();\n\n    // Start the rendering\n    if (options.autoStart) {\n      this.start();\n    }\n  }\n\n  /**\n   * Render the current stage.\n   */\n  Application.prototype.render = function render() {\n    this.renderer.render(this.stage);\n  };\n\n  /**\n   * Convenience method for stopping the render.\n   */\n\n  Application.prototype.stop = function stop() {\n    this._ticker.stop();\n  };\n\n  /**\n   * Convenience method for starting the render.\n   */\n\n  Application.prototype.start = function start() {\n    this._ticker.start();\n  };\n\n  /**\n   * Reference to the renderer's canvas element.\n   * @member {HTMLCanvasElement}\n   * @readonly\n   */\n\n  /**\n   * Destroy and don't use after this.\n   * @param {Boolean} [removeView=false] Automatically remove canvas from DOM.\n   * @param {object|boolean} [stageOptions] - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [stageOptions.children=false] - if set to true, all the children will have their destroy\n   *  method called as well. 'stageOptions' will be passed on to those calls.\n   * @param {boolean} [stageOptions.texture=false] - Only used for child Sprites if stageOptions.children is set\n   *  to true. Should it destroy the texture of the child sprite\n   * @param {boolean} [stageOptions.baseTexture=false] - Only used for child Sprites if stageOptions.children is set\n   *  to true. Should it destroy the base texture of the child sprite\n   */\n  Application.prototype.destroy = function destroy(removeView, stageOptions) {\n    if (this._ticker) {\n      var oldTicker = this._ticker;\n      this.ticker = null;\n      oldTicker.destroy();\n    }\n    this.stage.destroy(stageOptions);\n    this.stage = null;\n    this.renderer.destroy(removeView);\n    this.renderer = null;\n    this._options = null;\n  };\n  _createClass(Application, [{\n    key: 'ticker',\n    set: function set(ticker)\n    // eslint-disable-line require-jsdoc\n    {\n      if (this._ticker) {\n        this._ticker.remove(this.render, this);\n      }\n      this._ticker = ticker;\n      if (ticker) {\n        ticker.add(this.render, this, _const.UPDATE_PRIORITY.LOW);\n      }\n    },\n    get: function get()\n    // eslint-disable-line require-jsdoc\n    {\n      return this._ticker;\n    }\n  }, {\n    key: 'view',\n    get: function get() {\n      return this.renderer.view;\n    }\n\n    /**\n     * Reference to the renderer's screen rectangle. Its safe to use as filterArea or hitArea for whole screen\n     * @member {PIXI.Rectangle}\n     * @readonly\n     */\n  }, {\n    key: 'screen',\n    get: function get() {\n      return this.renderer.screen;\n    }\n  }]);\n  return Application;\n}();\nexports.default = Application;","map":{"version":3,"names":["_autoDetectRenderer","require","_Container","_ticker","_settings","_const","Application","options","arg2","arg3","arg4","arg5","_classCallCheck","Object","assign","width","height","_settings2","default","RENDER_OPTIONS","forceCanvas","sharedTicker","_options","autoStart","sharedLoader","renderer","autoDetectRenderer","stage","_Container2","ticker","shared","Ticker","start","render","stop","destroy","removeView","stageOptions","oldTicker","remove","add","UPDATE_PRIORITY","LOW","view","screen"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/Application.js"],"sourcesContent":["import { autoDetectRenderer } from './autoDetectRenderer';\nimport Container from './display/Container';\nimport { shared, Ticker } from './ticker';\nimport settings from './settings';\nimport { UPDATE_PRIORITY } from './const';\n\n/**\n * Convenience class to create a new PIXI application.\n * This class automatically creates the renderer, ticker\n * and root container.\n *\n * @example\n * // Create the application\n * const app = new PIXI.Application();\n *\n * // Add the view to the DOM\n * document.body.appendChild(app.view);\n *\n * // ex, add display objects\n * app.stage.addChild(PIXI.Sprite.fromImage('something.png'));\n *\n * @class\n * @memberof PIXI\n */\nexport default class Application\n{\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * @param {object} [options] - The optional renderer parameters\n     * @param {boolean} [options.autoStart=true] - automatically starts the rendering after the construction.\n     *     Note that setting this parameter to false does NOT stop the shared ticker even if you set\n     *     options.sharedTicker to true in case that it is already started. Stop it by your own.\n     * @param {number} [options.width=800] - the width of the renderers view\n     * @param {number} [options.height=600] - the height of the renderers view\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n     * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n     *  need to call toDataUrl on the webgl context\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n     * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n     *   not before the new render pass.\n     * @param {boolean} [options.roundPixels=false] - If true PixiJS will Math.floor() x/y values when rendering,\n     *  stopping pixel interpolation.\n     * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n     *  FXAA is faster, but may not always look as great **webgl only**\n     * @param {boolean} [options.legacy=false] - `true` to ensure compatibility with older / less advanced devices.\n     *  If you experience unexplained flickering try setting this to true. **webgl only**\n     * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n     *  for devices with dual graphics card **webgl only**\n     * @param {boolean} [options.sharedTicker=false] - `true` to use PIXI.ticker.shared, `false` to create new ticker.\n     * @param {boolean} [options.sharedLoader=false] - `true` to use PIXI.loaders.shared, `false` to create new Loader.\n     */\n    constructor(options, arg2, arg3, arg4, arg5)\n    {\n        // Support for constructor(width, height, options, noWebGL, useSharedTicker)\n        if (typeof options === 'number')\n        {\n            options = Object.assign({\n                width: options,\n                height: arg2 || settings.RENDER_OPTIONS.height,\n                forceCanvas: !!arg4,\n                sharedTicker: !!arg5,\n            }, arg3);\n        }\n\n        /**\n         * The default options, so we mixin functionality later.\n         * @member {object}\n         * @protected\n         */\n        this._options = options = Object.assign({\n            autoStart: true,\n            sharedTicker: false,\n            forceCanvas: false,\n            sharedLoader: false,\n        }, options);\n\n        /**\n         * WebGL renderer if available, otherwise CanvasRenderer\n         * @member {PIXI.WebGLRenderer|PIXI.CanvasRenderer}\n         */\n        this.renderer = autoDetectRenderer(options);\n\n        /**\n         * The root display container that's rendered.\n         * @member {PIXI.Container}\n         */\n        this.stage = new Container();\n\n        /**\n         * Internal reference to the ticker\n         * @member {PIXI.ticker.Ticker}\n         * @private\n         */\n        this._ticker = null;\n\n        /**\n         * Ticker for doing render updates.\n         * @member {PIXI.ticker.Ticker}\n         * @default PIXI.ticker.shared\n         */\n        this.ticker = options.sharedTicker ? shared : new Ticker();\n\n        // Start the rendering\n        if (options.autoStart)\n        {\n            this.start();\n        }\n    }\n\n    set ticker(ticker) // eslint-disable-line require-jsdoc\n    {\n        if (this._ticker)\n        {\n            this._ticker.remove(this.render, this);\n        }\n        this._ticker = ticker;\n        if (ticker)\n        {\n            ticker.add(this.render, this, UPDATE_PRIORITY.LOW);\n        }\n    }\n    get ticker() // eslint-disable-line require-jsdoc\n    {\n        return this._ticker;\n    }\n\n    /**\n     * Render the current stage.\n     */\n    render()\n    {\n        this.renderer.render(this.stage);\n    }\n\n    /**\n     * Convenience method for stopping the render.\n     */\n    stop()\n    {\n        this._ticker.stop();\n    }\n\n    /**\n     * Convenience method for starting the render.\n     */\n    start()\n    {\n        this._ticker.start();\n    }\n\n    /**\n     * Reference to the renderer's canvas element.\n     * @member {HTMLCanvasElement}\n     * @readonly\n     */\n    get view()\n    {\n        return this.renderer.view;\n    }\n\n    /**\n     * Reference to the renderer's screen rectangle. Its safe to use as filterArea or hitArea for whole screen\n     * @member {PIXI.Rectangle}\n     * @readonly\n     */\n    get screen()\n    {\n        return this.renderer.screen;\n    }\n\n    /**\n     * Destroy and don't use after this.\n     * @param {Boolean} [removeView=false] Automatically remove canvas from DOM.\n     * @param {object|boolean} [stageOptions] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [stageOptions.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'stageOptions' will be passed on to those calls.\n     * @param {boolean} [stageOptions.texture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the texture of the child sprite\n     * @param {boolean} [stageOptions.baseTexture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the base texture of the child sprite\n     */\n    destroy(removeView, stageOptions)\n    {\n        if (this._ticker)\n        {\n            const oldTicker = this._ticker;\n\n            this.ticker = null;\n            oldTicker.destroy();\n        }\n\n        this.stage.destroy(stageOptions);\n        this.stage = null;\n\n        this.renderer.destroy(removeView);\n        this.renderer = null;\n\n        this._options = null;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}