{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.shared = exports.Resource = exports.textureParser = exports.getResourcePath = exports.spritesheetParser = exports.parseBitmapFontData = exports.bitmapFontParser = exports.Loader = undefined;\nvar _bitmapFontParser = require('./bitmapFontParser');\nObject.defineProperty(exports, 'bitmapFontParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_bitmapFontParser).default;\n  }\n});\nObject.defineProperty(exports, 'parseBitmapFontData', {\n  enumerable: true,\n  get: function get() {\n    return _bitmapFontParser.parse;\n  }\n});\nvar _spritesheetParser = require('./spritesheetParser');\nObject.defineProperty(exports, 'spritesheetParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_spritesheetParser).default;\n  }\n});\nObject.defineProperty(exports, 'getResourcePath', {\n  enumerable: true,\n  get: function get() {\n    return _spritesheetParser.getResourcePath;\n  }\n});\nvar _textureParser = require('./textureParser');\nObject.defineProperty(exports, 'textureParser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_textureParser).default;\n  }\n});\nvar _resourceLoader = require('resource-loader');\nObject.defineProperty(exports, 'Resource', {\n  enumerable: true,\n  get: function get() {\n    return _resourceLoader.Resource;\n  }\n});\nvar _Application = require('../core/Application');\nvar _Application2 = _interopRequireDefault(_Application);\nvar _loader = require('./loader');\nvar _loader2 = _interopRequireDefault(_loader);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * This namespace contains APIs which extends the {@link https://github.com/englercj/resource-loader resource-loader} module\n * for loading assets, data, and other resources dynamically.\n * @example\n * const loader = new PIXI.loaders.Loader();\n * loader.add('bunny', 'data/bunny.png')\n *       .add('spaceship', 'assets/spritesheet.json');\n * loader.load((loader, resources) => {\n *    // resources.bunny\n *    // resources.spaceship\n * });\n * @namespace PIXI.loaders\n */\nexports.Loader = _loader2.default;\n\n/**\n * A premade instance of the loader that can be used to load resources.\n * @name shared\n * @memberof PIXI.loaders\n * @type {PIXI.loaders.Loader}\n */\nvar shared = new _loader2.default();\nshared.destroy = function () {\n  // protect destroying shared loader\n};\nexports.shared = shared;\n\n// Mixin the loader construction\n\nvar AppPrototype = _Application2.default.prototype;\nAppPrototype._loader = null;\n\n/**\n * Loader instance to help with asset loading.\n * @name PIXI.Application#loader\n * @type {PIXI.loaders.Loader}\n */\nObject.defineProperty(AppPrototype, 'loader', {\n  get: function get() {\n    if (!this._loader) {\n      var sharedLoader = this._options.sharedLoader;\n      this._loader = sharedLoader ? shared : new _loader2.default();\n    }\n    return this._loader;\n  }\n});\n\n// Override the destroy function\n// making sure to destroy the current Loader\nAppPrototype._parentDestroy = AppPrototype.destroy;\nAppPrototype.destroy = function destroy(removeView, stageOptions) {\n  if (this._loader) {\n    this._loader.destroy();\n    this._loader = null;\n  }\n  this._parentDestroy(removeView, stageOptions);\n};","map":{"version":3,"names":["default","parse","getResourcePath","Resource","_Application","require","_loader","Loader","shared","_loader2","destroy","AppPrototype","_Application2","prototype","Object","defineProperty","get","sharedLoader","_options","_parentDestroy","removeView","stageOptions"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/loaders/index.js"],"sourcesContent":["import Application from '../core/Application';\nimport Loader from './loader';\n\n/**\n * This namespace contains APIs which extends the {@link https://github.com/englercj/resource-loader resource-loader} module\n * for loading assets, data, and other resources dynamically.\n * @example\n * const loader = new PIXI.loaders.Loader();\n * loader.add('bunny', 'data/bunny.png')\n *       .add('spaceship', 'assets/spritesheet.json');\n * loader.load((loader, resources) => {\n *    // resources.bunny\n *    // resources.spaceship\n * });\n * @namespace PIXI.loaders\n */\nexport { Loader };\nexport { default as bitmapFontParser, parse as parseBitmapFontData } from './bitmapFontParser';\nexport { default as spritesheetParser, getResourcePath } from './spritesheetParser';\nexport { default as textureParser } from './textureParser';\n\n/**\n * Reference to **resource-loader**'s Resource class.\n * See https://github.com/englercj/resource-loader\n * @class Resource\n * @memberof PIXI.loaders\n */\nexport { Resource } from 'resource-loader';\n\n/**\n * A premade instance of the loader that can be used to load resources.\n * @name shared\n * @memberof PIXI.loaders\n * @type {PIXI.loaders.Loader}\n */\nconst shared = new Loader();\n\nshared.destroy = () =>\n{\n    // protect destroying shared loader\n};\n\nexport { shared };\n\n// Mixin the loader construction\nconst AppPrototype = Application.prototype;\n\nAppPrototype._loader = null;\n\n/**\n * Loader instance to help with asset loading.\n * @name PIXI.Application#loader\n * @type {PIXI.loaders.Loader}\n */\nObject.defineProperty(AppPrototype, 'loader', {\n    get()\n    {\n        if (!this._loader)\n        {\n            const sharedLoader = this._options.sharedLoader;\n\n            this._loader = sharedLoader ? shared : new Loader();\n        }\n\n        return this._loader;\n    },\n});\n\n// Override the destroy function\n// making sure to destroy the current Loader\nAppPrototype._parentDestroy = AppPrototype.destroy;\nAppPrototype.destroy = function destroy(removeView, stageOptions)\n{\n    if (this._loader)\n    {\n        this._loader.destroy();\n        this._loader = null;\n    }\n    this._parentDestroy(removeView, stageOptions);\n};\n"],"mappings":";;;;;;;;qDAiBSA,O;;;;;;6BAA6BC,K;;;;;;;sDAC7BD,O;;;;;;8BAA8BE,e;;;;;;;kDAC9BF,O;;;;;;;2BAQAG,Q;;;AA3BT,IAAAC,YAAA,GAAAC,OAAA;;AACA,IAAAC,OAAA,GAAAD,OAAA;;;;;;;;AAEA;;;;;;;;;;;;;QAaSE,M;;AAaT;;;;;;AAMA,IAAMC,MAAA,GAAS,IAAAC,QAAA,CAAAT,OAAA,EAAf;AAEAQ,MAAA,CAAOE,OAAP,GAAiB,YACjB;EACI;AAAA,CAFJ;QAKSF,M,GAAAA,M;;AAET;;AACA,IAAMG,YAAA,GAAeC,aAAA,CAAAZ,OAAA,CAAYa,SAAjC;AAEAF,YAAA,CAAaL,OAAb,GAAuB,IAAvB;;AAEA;;;;;AAKAQ,MAAA,CAAOC,cAAP,CAAsBJ,YAAtB,EAAoC,QAApC,EAA8C;EAC1CK,GAD0C,WAAAA,IAAA,EAE1C;IACI,IAAI,CAAC,KAAKV,OAAV,EACA;MACI,IAAMW,YAAA,GAAe,KAAKC,QAAL,CAAcD,YAAnC;MAEA,KAAKX,OAAL,GAAeW,YAAA,GAAeT,MAAf,GAAwB,IAAAC,QAAA,CAAAT,OAAA,EAAvC;IACH;IAED,OAAO,KAAKM,OAAZ;EACH;AAXyC,CAA9C;;AAcA;AACA;AACAK,YAAA,CAAaQ,cAAb,GAA8BR,YAAA,CAAaD,OAA3C;AACAC,YAAA,CAAaD,OAAb,GAAuB,SAASA,OAATA,CAAiBU,UAAjB,EAA6BC,YAA7B,EACvB;EACI,IAAI,KAAKf,OAAT,EACA;IACI,KAAKA,OAAL,CAAaI,OAAb;IACA,KAAKJ,OAAL,GAAe,IAAf;EACH;EACD,KAAKa,cAAL,CAAoBC,UAApB,EAAgCC,YAAhC;AACH,CARD"},"metadata":{},"sourceType":"script","externalDependencies":[]}