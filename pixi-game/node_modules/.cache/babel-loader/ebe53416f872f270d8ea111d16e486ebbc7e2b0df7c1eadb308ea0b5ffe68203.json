{"ast":null,"code":"/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param attributeLocations {Object} An attribute location map that lets you manually set the attribute locations\n * @return {WebGLProgram} the shader program\n */\nvar compileProgram = function (gl, vertexSrc, fragmentSrc, attributeLocations) {\n  var glVertShader = compileShader(gl, gl.VERTEX_SHADER, vertexSrc);\n  var glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\n  var program = gl.createProgram();\n  gl.attachShader(program, glVertShader);\n  gl.attachShader(program, glFragShader);\n\n  // optionally, set the attributes manually for the program rather than letting WebGL decide..\n  if (attributeLocations) {\n    for (var i in attributeLocations) {\n      gl.bindAttribLocation(program, attributeLocations[i], i);\n    }\n  }\n  gl.linkProgram(program);\n\n  // if linking fails, then log and cleanup\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    console.error('Pixi.js Error: Could not initialize shader.');\n    console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\n    console.error('gl.getError()', gl.getError());\n\n    // if there is a program info log, log it\n    if (gl.getProgramInfoLog(program) !== '') {\n      console.warn('Pixi.js Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(program));\n    }\n    gl.deleteProgram(program);\n    program = null;\n  }\n\n  // clean up some shaders\n  gl.deleteShader(glVertShader);\n  gl.deleteShader(glFragShader);\n  return program;\n};\n\n/**\n * @private\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param type {Number} the type, can be either VERTEX_SHADER or FRAGMENT_SHADER\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @return {WebGLShader} the shader\n */\nvar compileShader = function (gl, type, src) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, src);\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.log(gl.getShaderInfoLog(shader));\n    return null;\n  }\n  return shader;\n};\nmodule.exports = compileProgram;","map":{"version":3,"names":["compileProgram","gl","vertexSrc","fragmentSrc","attributeLocations","glVertShader","compileShader","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","program","createProgram","attachShader","i","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","console","error","VALIDATE_STATUS","getError","getProgramInfoLog","warn","deleteProgram","deleteShader","type","src","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","module","exports"],"sources":["/Users/jiahuajiang/node_modules/pixi-gl-core/src/shader/compileProgram.js"],"sourcesContent":["\n/**\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param attributeLocations {Object} An attribute location map that lets you manually set the attribute locations\n * @return {WebGLProgram} the shader program\n */\nvar compileProgram = function(gl, vertexSrc, fragmentSrc, attributeLocations)\n{\n    var glVertShader = compileShader(gl, gl.VERTEX_SHADER, vertexSrc);\n    var glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\n\n    var program = gl.createProgram();\n\n    gl.attachShader(program, glVertShader);\n    gl.attachShader(program, glFragShader);\n\n    // optionally, set the attributes manually for the program rather than letting WebGL decide..\n    if(attributeLocations)\n    {\n        for(var i in attributeLocations)\n        {\n            gl.bindAttribLocation(program, attributeLocations[i], i);\n        }\n    }\n\n\n    gl.linkProgram(program);\n\n    // if linking fails, then log and cleanup\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n    {\n        console.error('Pixi.js Error: Could not initialize shader.');\n        console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\n        console.error('gl.getError()', gl.getError());\n\n        // if there is a program info log, log it\n        if (gl.getProgramInfoLog(program) !== '')\n        {\n            console.warn('Pixi.js Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(program));\n        }\n\n        gl.deleteProgram(program);\n        program = null;\n    }\n\n    // clean up some shaders\n    gl.deleteShader(glVertShader);\n    gl.deleteShader(glFragShader);\n\n    return program;\n};\n\n/**\n * @private\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param type {Number} the type, can be either VERTEX_SHADER or FRAGMENT_SHADER\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @return {WebGLShader} the shader\n */\nvar compileShader = function (gl, type, src)\n{\n    var shader = gl.createShader(type);\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n    {\n        console.log(gl.getShaderInfoLog(shader));\n        return null;\n    }\n\n    return shader;\n};\n\nmodule.exports = compileProgram;\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,cAAc,GAAG,SAAAA,CAASC,EAAE,EAAEC,SAAS,EAAEC,WAAW,EAAEC,kBAAkB,EAC5E;EACI,IAAIC,YAAY,GAAGC,aAAa,CAACL,EAAE,EAAEA,EAAE,CAACM,aAAa,EAAEL,SAAS,CAAC;EACjE,IAAIM,YAAY,GAAGF,aAAa,CAACL,EAAE,EAAEA,EAAE,CAACQ,eAAe,EAAEN,WAAW,CAAC;EAErE,IAAIO,OAAO,GAAGT,EAAE,CAACU,aAAa,CAAC,CAAC;EAEhCV,EAAE,CAACW,YAAY,CAACF,OAAO,EAAEL,YAAY,CAAC;EACtCJ,EAAE,CAACW,YAAY,CAACF,OAAO,EAAEF,YAAY,CAAC;;EAEtC;EACA,IAAGJ,kBAAkB,EACrB;IACI,KAAI,IAAIS,CAAC,IAAIT,kBAAkB,EAC/B;MACIH,EAAE,CAACa,kBAAkB,CAACJ,OAAO,EAAEN,kBAAkB,CAACS,CAAC,CAAC,EAAEA,CAAC,CAAC;IAC5D;EACJ;EAGAZ,EAAE,CAACc,WAAW,CAACL,OAAO,CAAC;;EAEvB;EACA,IAAI,CAACT,EAAE,CAACe,mBAAmB,CAACN,OAAO,EAAET,EAAE,CAACgB,WAAW,CAAC,EACpD;IACIC,OAAO,CAACC,KAAK,CAAC,6CAA6C,CAAC;IAC5DD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAElB,EAAE,CAACe,mBAAmB,CAACN,OAAO,EAAET,EAAE,CAACmB,eAAe,CAAC,CAAC;IACxFF,OAAO,CAACC,KAAK,CAAC,eAAe,EAAElB,EAAE,CAACoB,QAAQ,CAAC,CAAC,CAAC;;IAE7C;IACA,IAAIpB,EAAE,CAACqB,iBAAiB,CAACZ,OAAO,CAAC,KAAK,EAAE,EACxC;MACIQ,OAAO,CAACK,IAAI,CAAC,yCAAyC,EAAEtB,EAAE,CAACqB,iBAAiB,CAACZ,OAAO,CAAC,CAAC;IAC1F;IAEAT,EAAE,CAACuB,aAAa,CAACd,OAAO,CAAC;IACzBA,OAAO,GAAG,IAAI;EAClB;;EAEA;EACAT,EAAE,CAACwB,YAAY,CAACpB,YAAY,CAAC;EAC7BJ,EAAE,CAACwB,YAAY,CAACjB,YAAY,CAAC;EAE7B,OAAOE,OAAO;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIJ,aAAa,GAAG,SAAAA,CAAUL,EAAE,EAAEyB,IAAI,EAAEC,GAAG,EAC3C;EACI,IAAIC,MAAM,GAAG3B,EAAE,CAAC4B,YAAY,CAACH,IAAI,CAAC;EAElCzB,EAAE,CAAC6B,YAAY,CAACF,MAAM,EAAED,GAAG,CAAC;EAC5B1B,EAAE,CAACK,aAAa,CAACsB,MAAM,CAAC;EAExB,IAAI,CAAC3B,EAAE,CAAC8B,kBAAkB,CAACH,MAAM,EAAE3B,EAAE,CAAC+B,cAAc,CAAC,EACrD;IACId,OAAO,CAACe,GAAG,CAAChC,EAAE,CAACiC,gBAAgB,CAACN,MAAM,CAAC,CAAC;IACxC,OAAO,IAAI;EACf;EAEA,OAAOA,MAAM;AACjB,CAAC;AAEDO,MAAM,CAACC,OAAO,GAAGpC,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}