{"ast":null,"code":"var mapType = require('./mapType');\nvar mapSize = require('./mapSize');\n\n/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the attributes from\n * @return attributes {Object}\n */\nvar extractAttributes = function (gl, program) {\n  var attributes = {};\n  var totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (var i = 0; i < totalAttributes; i++) {\n    var attribData = gl.getActiveAttrib(program, i);\n    var type = mapType(gl, attribData.type);\n    attributes[attribData.name] = {\n      type: type,\n      size: mapSize(type),\n      location: gl.getAttribLocation(program, attribData.name),\n      //TODO - make an attribute object\n      pointer: pointer\n    };\n  }\n  return attributes;\n};\nvar pointer = function (type, normalized, stride, start) {\n  // console.log(this.location)\n  gl.vertexAttribPointer(this.location, this.size, type || gl.FLOAT, normalized || false, stride || 0, start || 0);\n};\nmodule.exports = extractAttributes;","map":{"version":3,"names":["mapType","require","mapSize","extractAttributes","gl","program","attributes","totalAttributes","getProgramParameter","ACTIVE_ATTRIBUTES","i","attribData","getActiveAttrib","type","name","size","location","getAttribLocation","pointer","normalized","stride","start","vertexAttribPointer","FLOAT","module","exports"],"sources":["/Users/jiahuajiang/node_modules/pixi-gl-core/src/shader/extractAttributes.js"],"sourcesContent":["\nvar mapType = require('./mapType');\nvar mapSize = require('./mapSize');\n\n/**\n * Extracts the attributes\n * @class\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL rendering context\n * @param program {WebGLProgram} The shader program to get the attributes from\n * @return attributes {Object}\n */\nvar extractAttributes = function(gl, program)\n{\n    var attributes = {};\n\n    var totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (var i = 0; i < totalAttributes; i++)\n    {\n        var attribData = gl.getActiveAttrib(program, i);\n        var type = mapType(gl, attribData.type);\n\n        attributes[attribData.name] = {\n            type:type,\n            size:mapSize(type),\n            location:gl.getAttribLocation(program, attribData.name),\n            //TODO - make an attribute object\n            pointer: pointer\n        };\n    }\n\n    return attributes;\n};\n\nvar pointer = function(type, normalized, stride, start){\n    // console.log(this.location)\n    gl.vertexAttribPointer(this.location,this.size, type || gl.FLOAT, normalized || false, stride || 0, start || 0);\n};\n\nmodule.exports = extractAttributes;\n"],"mappings":"AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,iBAAiB,GAAG,SAAAA,CAASC,EAAE,EAAEC,OAAO,EAC5C;EACI,IAAIC,UAAU,GAAG,CAAC,CAAC;EAEnB,IAAIC,eAAe,GAAGH,EAAE,CAACI,mBAAmB,CAACH,OAAO,EAAED,EAAE,CAACK,iBAAiB,CAAC;EAE3E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,eAAe,EAAEG,CAAC,EAAE,EACxC;IACI,IAAIC,UAAU,GAAGP,EAAE,CAACQ,eAAe,CAACP,OAAO,EAAEK,CAAC,CAAC;IAC/C,IAAIG,IAAI,GAAGb,OAAO,CAACI,EAAE,EAAEO,UAAU,CAACE,IAAI,CAAC;IAEvCP,UAAU,CAACK,UAAU,CAACG,IAAI,CAAC,GAAG;MAC1BD,IAAI,EAACA,IAAI;MACTE,IAAI,EAACb,OAAO,CAACW,IAAI,CAAC;MAClBG,QAAQ,EAACZ,EAAE,CAACa,iBAAiB,CAACZ,OAAO,EAAEM,UAAU,CAACG,IAAI,CAAC;MACvD;MACAI,OAAO,EAAEA;IACb,CAAC;EACL;EAEA,OAAOZ,UAAU;AACrB,CAAC;AAED,IAAIY,OAAO,GAAG,SAAAA,CAASL,IAAI,EAAEM,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAC;EACnD;EACAjB,EAAE,CAACkB,mBAAmB,CAAC,IAAI,CAACN,QAAQ,EAAC,IAAI,CAACD,IAAI,EAAEF,IAAI,IAAIT,EAAE,CAACmB,KAAK,EAAEJ,UAAU,IAAI,KAAK,EAAEC,MAAM,IAAI,CAAC,EAAEC,KAAK,IAAI,CAAC,CAAC;AACnH,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGtB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}