{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nconst imageFormats = [\"png\", \"jpg\", \"jpeg\"];\nconst detectDefaults = {\n  extension: {\n    type: core.ExtensionType.DetectionParser,\n    priority: -1\n  },\n  test: () => Promise.resolve(true),\n  add: async formats => [...formats, ...imageFormats],\n  remove: async formats => formats.filter(f => !imageFormats.includes(f))\n};\ncore.extensions.add(detectDefaults);\nexports.detectDefaults = detectDefaults;","map":{"version":3,"names":["imageFormats","detectDefaults","extension","type","core","ExtensionType","DetectionParser","priority","test","Promise","resolve","add","formats","remove","filter","f","includes","extensions"],"sources":["/Users/jiahuajiang/Desktop/code/projects/abducted/pixi-game/node_modules/@pixi/assets/src/detections/parsers/detectDefaults.ts"],"sourcesContent":["import { extensions, ExtensionType } from '@pixi/core';\n\nimport type { FormatDetectionParser } from '..';\n\nconst imageFormats = ['png', 'jpg', 'jpeg'];\n\nexport const detectDefaults = {\n    extension: {\n        type: ExtensionType.DetectionParser,\n        priority: -1,\n    },\n    test: (): Promise<boolean> => Promise.resolve(true),\n    add: async (formats) => [...formats, ...imageFormats],\n    remove: async (formats) => formats.filter((f) => !imageFormats.includes(f)),\n} as FormatDetectionParser;\n\nextensions.add(detectDefaults);\n"],"mappings":";;;;;;AAIA,MAAMA,YAAe,IAAC,KAAO,SAAO,MAAM;AAEnC,MAAMC,cAAiB;EAC1BC,SAAW;IACPC,IAAA,EAAMC,IAAA,CAAAC,aAAc,CAAAC,eAAA;IACpBC,QAAU;EAAA,CACd;EACAC,IAAM,EAAAA,CAAA,KAAwBC,OAAQ,CAAAC,OAAA,CAAQ,IAAI;EAClDC,GAAA,EAAK,MAAOC,OAAA,IAAY,CAAC,GAAGA,OAAA,EAAS,GAAGZ,YAAY;EACpDa,MAAA,EAAQ,MAAOD,OAAA,IAAYA,OAAQ,CAAAE,MAAA,CAAQC,CAAA,IAAM,CAACf,YAAA,CAAagB,QAAS,CAAAD,CAAC,CAAC;AAC9E;AAEAX,IAAA,CAAAa,UAAA,CAAWN,GAAA,CAAIV,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}