{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = bezierCurveTo;\n/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @param {number} fromX - Starting point x\n * @param {number} fromY - Starting point y\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} cpX2 - Second Control point x\n * @param {number} cpY2 - Second Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number} n - Number of segments approximating the bezier curve\n * @param {number[]} [path=[]] - Path array to push points into\n * @return {number[]} Array of points of the curve\n */\nfunction bezierCurveTo(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY, n) {\n  var path = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : [];\n  var dt = 0;\n  var dt2 = 0;\n  var dt3 = 0;\n  var t2 = 0;\n  var t3 = 0;\n  path.push(fromX, fromY);\n  for (var i = 1, j = 0; i <= n; ++i) {\n    j = i / n;\n    dt = 1 - j;\n    dt2 = dt * dt;\n    dt3 = dt2 * dt;\n    t2 = j * j;\n    t3 = t2 * j;\n    path.push(dt3 * fromX + 3 * dt2 * j * cpX + 3 * dt * t2 * cpX2 + t3 * toX, dt3 * fromY + 3 * dt2 * j * cpY + 3 * dt * t2 * cpY2 + t3 * toY);\n  }\n  return path;\n}","map":{"version":3,"names":["bezierCurveTo","fromX","fromY","cpX","cpY","cpX2","cpY2","toX","toY","n","path","arguments","length","undefined","dt","dt2","dt3","t2","t3","push","i","j"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/graphics/utils/bezierCurveTo.js"],"sourcesContent":["/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @param {number} fromX - Starting point x\n * @param {number} fromY - Starting point y\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} cpX2 - Second Control point x\n * @param {number} cpY2 - Second Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number} n - Number of segments approximating the bezier curve\n * @param {number[]} [path=[]] - Path array to push points into\n * @return {number[]} Array of points of the curve\n */\nexport default function bezierCurveTo(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY, n, path = [])\n{\n    let dt = 0;\n    let dt2 = 0;\n    let dt3 = 0;\n    let t2 = 0;\n    let t3 = 0;\n\n    path.push(fromX, fromY);\n\n    for (let i = 1, j = 0; i <= n; ++i)\n    {\n        j = i / n;\n\n        dt = (1 - j);\n        dt2 = dt * dt;\n        dt3 = dt2 * dt;\n\n        t2 = j * j;\n        t3 = t2 * j;\n\n        path.push(\n            (dt3 * fromX) + (3 * dt2 * j * cpX) + (3 * dt * t2 * cpX2) + (t3 * toX),\n            (dt3 * fromY) + (3 * dt2 * j * cpY) + (3 * dt * t2 * cpY2) + (t3 * toY)\n        );\n    }\n\n    return path;\n}\n"],"mappings":";;;kBAkBwBA,a;AAlBxB;;;;;;;;;;;;;;;;;;AAkBe,SAASA,aAATA,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,GAArC,EAA0CC,GAA1C,EAA+CC,IAA/C,EAAqDC,IAArD,EAA2DC,GAA3D,EAAgEC,GAAhE,EAAqEC,CAArE,EACf;EAAA,IADuFC,IACvF,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAD8F,EAC9F;EACI,IAAIG,EAAA,GAAK,CAAT;EACA,IAAIC,GAAA,GAAM,CAAV;EACA,IAAIC,GAAA,GAAM,CAAV;EACA,IAAIC,EAAA,GAAK,CAAT;EACA,IAAIC,EAAA,GAAK,CAAT;EAEAR,IAAA,CAAKS,IAAL,CAAUlB,KAAV,EAAiBC,KAAjB;EAEA,KAAK,IAAIkB,CAAA,GAAI,CAAR,EAAWC,CAAA,GAAI,CAApB,EAAuBD,CAAA,IAAKX,CAA5B,EAA+B,EAAEW,CAAjC,EACA;IACIC,CAAA,GAAID,CAAA,GAAIX,CAAR;IAEAK,EAAA,GAAM,IAAIO,CAAV;IACAN,GAAA,GAAMD,EAAA,GAAKA,EAAX;IACAE,GAAA,GAAMD,GAAA,GAAMD,EAAZ;IAEAG,EAAA,GAAKI,CAAA,GAAIA,CAAT;IACAH,EAAA,GAAKD,EAAA,GAAKI,CAAV;IAEAX,IAAA,CAAKS,IAAL,CACKH,GAAA,GAAMf,KAAP,GAAiB,IAAIc,GAAJ,GAAUM,CAAV,GAAclB,GAA/B,GAAuC,IAAIW,EAAJ,GAASG,EAAT,GAAcZ,IAArD,GAA8Da,EAAA,GAAKX,GADvE,EAEKS,GAAA,GAAMd,KAAP,GAAiB,IAAIa,GAAJ,GAAUM,CAAV,GAAcjB,GAA/B,GAAuC,IAAIU,EAAJ,GAASG,EAAT,GAAcX,IAArD,GAA8DY,EAAA,GAAKV,GAFvE;EAIH;EAED,OAAOE,IAAP;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}