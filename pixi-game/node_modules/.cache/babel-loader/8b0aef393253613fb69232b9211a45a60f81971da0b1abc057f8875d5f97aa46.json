{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = generateVertBlurSource;\nvar vertTemplate = ['attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform float strength;', 'uniform mat3 projectionMatrix;', 'varying vec2 vBlurTexCoords[%size%];', 'void main(void)', '{', 'gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);', '%blur%', '}'].join('\\n');\nfunction generateVertBlurSource(kernelSize, x) {\n  var halfLength = Math.ceil(kernelSize / 2);\n  var vertSource = vertTemplate;\n  var blurLoop = '';\n  var template = void 0;\n  // let value;\n\n  if (x) {\n    template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(%sampleIndex% * strength, 0.0);';\n  } else {\n    template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(0.0, %sampleIndex% * strength);';\n  }\n  for (var i = 0; i < kernelSize; i++) {\n    var blur = template.replace('%index%', i);\n\n    // value = i;\n\n    // if(i >= halfLength)\n    // {\n    //     value = kernelSize - i - 1;\n    // }\n\n    blur = blur.replace('%sampleIndex%', i - (halfLength - 1) + '.0');\n    blurLoop += blur;\n    blurLoop += '\\n';\n  }\n  vertSource = vertSource.replace('%blur%', blurLoop);\n  vertSource = vertSource.replace('%size%', kernelSize);\n  return vertSource;\n}","map":{"version":3,"names":["generateVertBlurSource","vertTemplate","join","kernelSize","x","halfLength","Math","ceil","vertSource","blurLoop","template","i","blur","replace"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/filters/blur/generateBlurVertSource.js"],"sourcesContent":["const vertTemplate = [\n    'attribute vec2 aVertexPosition;',\n    'attribute vec2 aTextureCoord;',\n\n    'uniform float strength;',\n    'uniform mat3 projectionMatrix;',\n\n    'varying vec2 vBlurTexCoords[%size%];',\n\n    'void main(void)',\n    '{',\n    'gl_Position = vec4((projectionMatrix * vec3((aVertexPosition), 1.0)).xy, 0.0, 1.0);',\n    '%blur%',\n    '}',\n].join('\\n');\n\nexport default function generateVertBlurSource(kernelSize, x)\n{\n    const halfLength = Math.ceil(kernelSize / 2);\n\n    let vertSource = vertTemplate;\n\n    let blurLoop = '';\n    let template;\n    // let value;\n\n    if (x)\n    {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(%sampleIndex% * strength, 0.0);';\n    }\n    else\n    {\n        template = 'vBlurTexCoords[%index%] = aTextureCoord + vec2(0.0, %sampleIndex% * strength);';\n    }\n\n    for (let i = 0; i < kernelSize; i++)\n    {\n        let blur = template.replace('%index%', i);\n\n        // value = i;\n\n        // if(i >= halfLength)\n        // {\n        //     value = kernelSize - i - 1;\n        // }\n\n        blur = blur.replace('%sampleIndex%', `${i - (halfLength - 1)}.0`);\n\n        blurLoop += blur;\n        blurLoop += '\\n';\n    }\n\n    vertSource = vertSource.replace('%blur%', blurLoop);\n    vertSource = vertSource.replace('%size%', kernelSize);\n\n    return vertSource;\n}\n"],"mappings":";;;kBAgBwBA,sB;AAhBxB,IAAMC,YAAA,GAAe,CACjB,iCADiB,EAEjB,+BAFiB,EAIjB,yBAJiB,EAKjB,gCALiB,EAOjB,sCAPiB,EASjB,iBATiB,EAUjB,GAViB,EAWjB,qFAXiB,EAYjB,QAZiB,EAajB,GAbiB,EAcnBC,IAdmB,CAcd,IAdc,CAArB;AAgBe,SAASF,sBAATA,CAAgCG,UAAhC,EAA4CC,CAA5C,EACf;EACI,IAAMC,UAAA,GAAaC,IAAA,CAAKC,IAAL,CAAUJ,UAAA,GAAa,CAAvB,CAAnB;EAEA,IAAIK,UAAA,GAAaP,YAAjB;EAEA,IAAIQ,QAAA,GAAW,EAAf;EACA,IAAIC,QAAA,SAAJ;EACA;;EAEA,IAAIN,CAAJ,EACA;IACIM,QAAA,GAAW,gFAAX;EACH,CAHD,MAKA;IACIA,QAAA,GAAW,gFAAX;EACH;EAED,KAAK,IAAIC,CAAA,GAAI,CAAb,EAAgBA,CAAA,GAAIR,UAApB,EAAgCQ,CAAA,EAAhC,EACA;IACI,IAAIC,IAAA,GAAOF,QAAA,CAASG,OAAT,CAAiB,SAAjB,EAA4BF,CAA5B,CAAX;;IAEA;;IAEA;IACA;IACA;IACA;;IAEAC,IAAA,GAAOA,IAAA,CAAKC,OAAL,CAAa,eAAb,EAAiCF,CAAA,IAAKN,UAAA,GAAa,CAAlB,CAAjC,QAAP;IAEAI,QAAA,IAAYG,IAAZ;IACAH,QAAA,IAAY,IAAZ;EACH;EAEDD,UAAA,GAAaA,UAAA,CAAWK,OAAX,CAAmB,QAAnB,EAA6BJ,QAA7B,CAAb;EACAD,UAAA,GAAaA,UAAA,CAAWK,OAAX,CAAmB,QAAnB,EAA6BV,UAA7B,CAAb;EAEA,OAAOK,UAAP;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}