{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar checkDataUrl = require('../../utils/checkDataUrl.js');\nvar checkExtension = require('../../utils/checkExtension.js');\nvar LoaderParser = require('./LoaderParser.js');\nconst validTXTExtension = \".txt\";\nconst validTXTMIME = \"text/plain\";\nconst loadTxt = {\n  name: \"loadTxt\",\n  extension: {\n    type: core.ExtensionType.LoadParser,\n    priority: LoaderParser.LoaderParserPriority.Low\n  },\n  test(url) {\n    return checkDataUrl.checkDataUrl(url, validTXTMIME) || checkExtension.checkExtension(url, validTXTExtension);\n  },\n  async load(url) {\n    const response = await core.settings.ADAPTER.fetch(url);\n    const txt = await response.text();\n    return txt;\n  }\n};\ncore.extensions.add(loadTxt);\nexports.loadTxt = loadTxt;","map":{"version":3,"names":["validTXTExtension","validTXTMIME","loadTxt","name","extension","type","core","ExtensionType","LoadParser","priority","LoaderParser","LoaderParserPriority","Low","test","url","checkDataUrl","checkExtension","load","response","settings","ADAPTER","fetch","txt","text","extensions","add"],"sources":["/Users/jiahuajiang/Desktop/code/projects/abducted/pixi-game/node_modules/@pixi/assets/src/loader/parsers/loadTxt.ts"],"sourcesContent":["import { extensions, ExtensionType, settings } from '@pixi/core';\nimport { checkDataUrl } from '../../utils/checkDataUrl';\nimport { checkExtension } from '../../utils/checkExtension';\nimport { LoaderParserPriority } from './LoaderParser';\n\nimport type { LoaderParser } from './LoaderParser';\n\nconst validTXTExtension = '.txt';\nconst validTXTMIME = 'text/plain';\n\n/** Simple loader plugin for loading text data */\nexport const loadTxt = {\n\n    name: 'loadTxt',\n\n    extension: {\n        type: ExtensionType.LoadParser,\n        priority: LoaderParserPriority.Low,\n    },\n\n    test(url: string): boolean\n    {\n        return checkDataUrl(url, validTXTMIME) || checkExtension(url, validTXTExtension);\n    },\n\n    async load(url: string): Promise<string>\n    {\n        const response = await settings.ADAPTER.fetch(url);\n\n        const txt = await response.text();\n\n        return txt;\n    },\n} as LoaderParser;\n\nextensions.add(loadTxt);\n"],"mappings":";;;;;;;;;AAOA,MAAMA,iBAAoB;AAC1B,MAAMC,YAAe;AAGd,MAAMC,OAAU;EAEnBC,IAAM;EAENC,SAAW;IACPC,IAAA,EAAMC,IAAA,CAAAC,aAAc,CAAAC,UAAA;IACpBC,QAAA,EAAUC,YAAA,CAAAC,oBAAqB,CAAAC;EAAA,CACnC;EAEAC,KAAKC,GACL;IACI,OAAOC,YAAA,CAAAA,YAAA,CAAaD,GAAK,EAAAb,YAAY,CAAK,IAAAe,cAAA,CAAAA,cAAA,CAAeF,GAAA,EAAKd,iBAAiB;EAAA,CACnF;EAEA,MAAMiB,KAAKH,GACX;IACI,MAAMI,QAAW,SAAMZ,IAAA,CAAAa,QAAS,CAAAC,OAAA,CAAQC,KAAA,CAAMP,GAAG;IAE3C,MAAAQ,GAAA,GAAM,MAAMJ,QAAA,CAASK,IAAK;IAEzB,OAAAD,GAAA;EAAA;AAEf;AAEAhB,IAAA,CAAAkB,UAAA,CAAWC,GAAA,CAAIvB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}