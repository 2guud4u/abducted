{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = trimCanvas;\n/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI\n * @function trimCanvas\n * @private\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nfunction trimCanvas(canvas) {\n  // https://gist.github.com/remy/784508\n\n  var width = canvas.width;\n  var height = canvas.height;\n  var context = canvas.getContext('2d');\n  var imageData = context.getImageData(0, 0, width, height);\n  var pixels = imageData.data;\n  var len = pixels.length;\n  var bound = {\n    top: null,\n    left: null,\n    right: null,\n    bottom: null\n  };\n  var data = null;\n  var i = void 0;\n  var x = void 0;\n  var y = void 0;\n  for (i = 0; i < len; i += 4) {\n    if (pixels[i + 3] !== 0) {\n      x = i / 4 % width;\n      y = ~~(i / 4 / width);\n      if (bound.top === null) {\n        bound.top = y;\n      }\n      if (bound.left === null) {\n        bound.left = x;\n      } else if (x < bound.left) {\n        bound.left = x;\n      }\n      if (bound.right === null) {\n        bound.right = x + 1;\n      } else if (bound.right < x) {\n        bound.right = x + 1;\n      }\n      if (bound.bottom === null) {\n        bound.bottom = y;\n      } else if (bound.bottom < y) {\n        bound.bottom = y;\n      }\n    }\n  }\n  if (bound.top !== null) {\n    width = bound.right - bound.left;\n    height = bound.bottom - bound.top + 1;\n    data = context.getImageData(bound.left, bound.top, width, height);\n  }\n  return {\n    height: height,\n    width: width,\n    data: data\n  };\n}","map":{"version":3,"names":["trimCanvas","canvas","width","height","context","getContext","imageData","getImageData","pixels","data","len","length","bound","top","left","right","bottom","i","x","y"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/utils/trimCanvas.js"],"sourcesContent":["/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI\n * @function trimCanvas\n * @private\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nexport default function trimCanvas(canvas)\n{\n    // https://gist.github.com/remy/784508\n\n    let width = canvas.width;\n    let height = canvas.height;\n\n    const context = canvas.getContext('2d');\n    const imageData = context.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    const len = pixels.length;\n\n    const bound = {\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n    };\n    let data = null;\n    let i;\n    let x;\n    let y;\n\n    for (i = 0; i < len; i += 4)\n    {\n        if (pixels[i + 3] !== 0)\n        {\n            x = (i / 4) % width;\n            y = ~~((i / 4) / width);\n\n            if (bound.top === null)\n            {\n                bound.top = y;\n            }\n\n            if (bound.left === null)\n            {\n                bound.left = x;\n            }\n            else if (x < bound.left)\n            {\n                bound.left = x;\n            }\n\n            if (bound.right === null)\n            {\n                bound.right = x + 1;\n            }\n            else if (bound.right < x)\n            {\n                bound.right = x + 1;\n            }\n\n            if (bound.bottom === null)\n            {\n                bound.bottom = y;\n            }\n            else if (bound.bottom < y)\n            {\n                bound.bottom = y;\n            }\n        }\n    }\n\n    if (bound.top !== null)\n    {\n        width = bound.right - bound.left;\n        height = bound.bottom - bound.top + 1;\n        data = context.getImageData(bound.left, bound.top, width, height);\n    }\n\n    return {\n        height,\n        width,\n        data,\n    };\n}\n"],"mappings":";;;kBASwBA,U;AATxB;;;;;;;;;AASe,SAASA,UAATA,CAAoBC,MAApB,EACf;EACI;;EAEA,IAAIC,KAAA,GAAQD,MAAA,CAAOC,KAAnB;EACA,IAAIC,MAAA,GAASF,MAAA,CAAOE,MAApB;EAEA,IAAMC,OAAA,GAAUH,MAAA,CAAOI,UAAP,CAAkB,IAAlB,CAAhB;EACA,IAAMC,SAAA,GAAYF,OAAA,CAAQG,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BL,KAA3B,EAAkCC,MAAlC,CAAlB;EACA,IAAMK,MAAA,GAASF,SAAA,CAAUG,IAAzB;EACA,IAAMC,GAAA,GAAMF,MAAA,CAAOG,MAAnB;EAEA,IAAMC,KAAA,GAAQ;IACVC,GAAA,EAAK,IADK;IAEVC,IAAA,EAAM,IAFI;IAGVC,KAAA,EAAO,IAHG;IAIVC,MAAA,EAAQ;EAJE,CAAd;EAMA,IAAIP,IAAA,GAAO,IAAX;EACA,IAAIQ,CAAA,SAAJ;EACA,IAAIC,CAAA,SAAJ;EACA,IAAIC,CAAA,SAAJ;EAEA,KAAKF,CAAA,GAAI,CAAT,EAAYA,CAAA,GAAIP,GAAhB,EAAqBO,CAAA,IAAK,CAA1B,EACA;IACI,IAAIT,MAAA,CAAOS,CAAA,GAAI,CAAX,MAAkB,CAAtB,EACA;MACIC,CAAA,GAAKD,CAAA,GAAI,CAAL,GAAUf,KAAd;MACAiB,CAAA,GAAI,CAAC,EAAGF,CAAA,GAAI,CAAL,GAAUf,KAAZ,CAAL;MAEA,IAAIU,KAAA,CAAMC,GAAN,KAAc,IAAlB,EACA;QACID,KAAA,CAAMC,GAAN,GAAYM,CAAZ;MACH;MAED,IAAIP,KAAA,CAAME,IAAN,KAAe,IAAnB,EACA;QACIF,KAAA,CAAME,IAAN,GAAaI,CAAb;MACH,CAHD,MAIK,IAAIA,CAAA,GAAIN,KAAA,CAAME,IAAd,EACL;QACIF,KAAA,CAAME,IAAN,GAAaI,CAAb;MACH;MAED,IAAIN,KAAA,CAAMG,KAAN,KAAgB,IAApB,EACA;QACIH,KAAA,CAAMG,KAAN,GAAcG,CAAA,GAAI,CAAlB;MACH,CAHD,MAIK,IAAIN,KAAA,CAAMG,KAAN,GAAcG,CAAlB,EACL;QACIN,KAAA,CAAMG,KAAN,GAAcG,CAAA,GAAI,CAAlB;MACH;MAED,IAAIN,KAAA,CAAMI,MAAN,KAAiB,IAArB,EACA;QACIJ,KAAA,CAAMI,MAAN,GAAeG,CAAf;MACH,CAHD,MAIK,IAAIP,KAAA,CAAMI,MAAN,GAAeG,CAAnB,EACL;QACIP,KAAA,CAAMI,MAAN,GAAeG,CAAf;MACH;IACJ;EACJ;EAED,IAAIP,KAAA,CAAMC,GAAN,KAAc,IAAlB,EACA;IACIX,KAAA,GAAQU,KAAA,CAAMG,KAAN,GAAcH,KAAA,CAAME,IAA5B;IACAX,MAAA,GAASS,KAAA,CAAMI,MAAN,GAAeJ,KAAA,CAAMC,GAArB,GAA2B,CAApC;IACAJ,IAAA,GAAOL,OAAA,CAAQG,YAAR,CAAqBK,KAAA,CAAME,IAA3B,EAAiCF,KAAA,CAAMC,GAAvC,EAA4CX,KAA5C,EAAmDC,MAAnD,CAAP;EACH;EAED,OAAO;IACHA,MAAA,EAAAA,MADG;IAEHD,KAAA,EAAAA,KAFG;IAGHO,IAAA,EAAAA;EAHG,CAAP;AAKH"},"metadata":{},"sourceType":"script","externalDependencies":[]}