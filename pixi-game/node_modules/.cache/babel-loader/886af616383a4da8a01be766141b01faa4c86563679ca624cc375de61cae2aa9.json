{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = checkMaxIfStatmentsInShader;\nvar _pixiGlCore = require('pixi-gl-core');\nvar _pixiGlCore2 = _interopRequireDefault(_pixiGlCore);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar fragTemplate = ['precision mediump float;', 'void main(void){', 'float test = 0.1;', '%forloop%', 'gl_FragColor = vec4(0.0);', '}'].join('\\n');\nfunction checkMaxIfStatmentsInShader(maxIfs, gl) {\n  var createTempContext = !gl;\n\n  // @if DEBUG\n  if (maxIfs === 0) {\n    throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\n  }\n  // @endif\n\n  if (createTempContext) {\n    var tinyCanvas = document.createElement('canvas');\n    tinyCanvas.width = 1;\n    tinyCanvas.height = 1;\n    gl = _pixiGlCore2.default.createContext(tinyCanvas);\n  }\n  var shader = gl.createShader(gl.FRAGMENT_SHADER);\n  while (true)\n  // eslint-disable-line no-constant-condition\n  {\n    var fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n    gl.shaderSource(shader, fragmentSrc);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      maxIfs = maxIfs / 2 | 0;\n    } else {\n      // valid!\n      break;\n    }\n  }\n  if (createTempContext) {\n    // get rid of context\n    if (gl.getExtension('WEBGL_lose_context')) {\n      gl.getExtension('WEBGL_lose_context').loseContext();\n    }\n  }\n  return maxIfs;\n}\nfunction generateIfTestSrc(maxIfs) {\n  var src = '';\n  for (var i = 0; i < maxIfs; ++i) {\n    if (i > 0) {\n      src += '\\nelse ';\n    }\n    if (i < maxIfs - 1) {\n      src += 'if(test == ' + i + '.0){}';\n    }\n  }\n  return src;\n}","map":{"version":3,"names":["checkMaxIfStatmentsInShader","_pixiGlCore","require","fragTemplate","join","maxIfs","gl","createTempContext","Error","tinyCanvas","document","createElement","width","height","_pixiGlCore2","default","createContext","shader","createShader","FRAGMENT_SHADER","fragmentSrc","replace","generateIfTestSrc","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getExtension","loseContext","src","i"],"sources":["/Users/jiahuajiang/node_modules/pixi.js/src/core/renderers/webgl/utils/checkMaxIfStatmentsInShader.js"],"sourcesContent":["import glCore from 'pixi-gl-core';\n\nconst fragTemplate = [\n    'precision mediump float;',\n    'void main(void){',\n    'float test = 0.1;',\n    '%forloop%',\n    'gl_FragColor = vec4(0.0);',\n    '}',\n].join('\\n');\n\nexport default function checkMaxIfStatmentsInShader(maxIfs, gl)\n{\n    const createTempContext = !gl;\n\n    // @if DEBUG\n    if (maxIfs === 0)\n    {\n        throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\n    }\n    // @endif\n\n    if (createTempContext)\n    {\n        const tinyCanvas = document.createElement('canvas');\n\n        tinyCanvas.width = 1;\n        tinyCanvas.height = 1;\n\n        gl = glCore.createContext(tinyCanvas);\n    }\n\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    while (true) // eslint-disable-line no-constant-condition\n    {\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n\n        gl.shaderSource(shader, fragmentSrc);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        {\n            maxIfs = (maxIfs / 2) | 0;\n        }\n        else\n        {\n            // valid!\n            break;\n        }\n    }\n\n    if (createTempContext)\n    {\n        // get rid of context\n        if (gl.getExtension('WEBGL_lose_context'))\n        {\n            gl.getExtension('WEBGL_lose_context').loseContext();\n        }\n    }\n\n    return maxIfs;\n}\n\nfunction generateIfTestSrc(maxIfs)\n{\n    let src = '';\n\n    for (let i = 0; i < maxIfs; ++i)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1)\n        {\n            src += `if(test == ${i}.0){}`;\n        }\n    }\n\n    return src;\n}\n"],"mappings":";;;kBAWwBA,2B;AAXxB,IAAAC,WAAA,GAAAC,OAAA;;;;;;;AAEA,IAAMC,YAAA,GAAe,CACjB,0BADiB,EAEjB,kBAFiB,EAGjB,mBAHiB,EAIjB,WAJiB,EAKjB,2BALiB,EAMjB,GANiB,EAOnBC,IAPmB,CAOd,IAPc,CAArB;AASe,SAASJ,2BAATA,CAAqCK,MAArC,EAA6CC,EAA7C,EACf;EACI,IAAMC,iBAAA,GAAoB,CAACD,EAA3B;;EAEA;EACA,IAAID,MAAA,KAAW,CAAf,EACA;IACI,MAAM,IAAIG,KAAJ,CAAU,+DAAV,CAAN;EACH;EACD;;EAEA,IAAID,iBAAJ,EACA;IACI,IAAME,UAAA,GAAaC,QAAA,CAASC,aAAT,CAAuB,QAAvB,CAAnB;IAEAF,UAAA,CAAWG,KAAX,GAAmB,CAAnB;IACAH,UAAA,CAAWI,MAAX,GAAoB,CAApB;IAEAP,EAAA,GAAKQ,YAAA,CAAAC,OAAA,CAAOC,aAAP,CAAqBP,UAArB,CAAL;EACH;EAED,IAAMQ,MAAA,GAASX,EAAA,CAAGY,YAAH,CAAgBZ,EAAA,CAAGa,eAAnB,CAAf;EAEA,OAAO,IAAP;EAAa;EACb;IACI,IAAMC,WAAA,GAAcjB,YAAA,CAAakB,OAAb,CAAqB,aAArB,EAAoCC,iBAAA,CAAkBjB,MAAlB,CAApC,CAApB;IAEAC,EAAA,CAAGiB,YAAH,CAAgBN,MAAhB,EAAwBG,WAAxB;IACAd,EAAA,CAAGkB,aAAH,CAAiBP,MAAjB;IAEA,IAAI,CAACX,EAAA,CAAGmB,kBAAH,CAAsBR,MAAtB,EAA8BX,EAAA,CAAGoB,cAAjC,CAAL,EACA;MACIrB,MAAA,GAAUA,MAAA,GAAS,CAAV,GAAe,CAAxB;IACH,CAHD,MAKA;MACI;MACA;IACH;EACJ;EAED,IAAIE,iBAAJ,EACA;IACI;IACA,IAAID,EAAA,CAAGqB,YAAH,CAAgB,oBAAhB,CAAJ,EACA;MACIrB,EAAA,CAAGqB,YAAH,CAAgB,oBAAhB,EAAsCC,WAAtC;IACH;EACJ;EAED,OAAOvB,MAAP;AACH;AAED,SAASiB,iBAATA,CAA2BjB,MAA3B,EACA;EACI,IAAIwB,GAAA,GAAM,EAAV;EAEA,KAAK,IAAIC,CAAA,GAAI,CAAb,EAAgBA,CAAA,GAAIzB,MAApB,EAA4B,EAAEyB,CAA9B,EACA;IACI,IAAIA,CAAA,GAAI,CAAR,EACA;MACID,GAAA,IAAO,SAAP;IACH;IAED,IAAIC,CAAA,GAAIzB,MAAA,GAAS,CAAjB,EACA;MACIwB,GAAA,oBAAqBC,CAArB;IACH;EACJ;EAED,OAAOD,GAAP;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}